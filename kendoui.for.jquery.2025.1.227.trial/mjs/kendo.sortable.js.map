{"version":3,"sources":["raw-mjs/kendo.sortable.js"],"names":["__meta__","id","name","category","depends","$","kendo","window","Widget","ui","outerWidth","_outerWidth","outerHeight","_outerHeight","START","BEFORE_MOVE","MOVE","END","CHANGE","CANCEL","ACTION_SORT","ACTION_REMOVE","ACTION_RECEIVE","defaultHint","element","clone","defaultPlaceholder","removeAttr","css","Sortable","extend","init","options","that","this","fn","call","placeholder","hint","draggable","_createDraggable","events","filter","holdToDrag","disabled","container","connectWith","handler","cursorOffset","axis","ignore","autoScroll","cursor","moveOnDragEnter","allowTouchActions","destroy","Draggable","isFunction","dragstart","_dragstart","bind","dragcancel","_dragcancel","drag","_drag","dragend","_dragend","e","draggedElement","currentTarget","_placeholder","is","initialTarget","trigger","item","draggableEvent","preventDefault","before","_setCursor","_cancel","_resetCursor","targetCenter","offsetDelta","direction","sibling","getSibling","target","_findTarget","left","x","location","top","y","axisDelta","delta","eventData","list","_getElementCenter","Math","round","appendToBottom","_movePlaceholder","appendAfterHidden","_isFloating","jQuery","prev","next","length","_movementByAxis","connectedList","isDefaultPrevented","connectedListEventData","draggedIndex","indexOf","placeholderIndex","action","oldIndex","newIndex","parents","getKendoSortable","replaceWith","show","dropped","items","node","_findElementUnderCursor","contains","has","sortable","_isEmpty","_isLastHidden","eq","_searchConnectedTargets","elementUnderCursor","sender","parent","child","containsOrEqualTo","hide","sortableInstance","connected","i","_isCursorAfterLast","last","lastItemOffset","lastItem","getOffset","cursorPosition","after","append","body","document","_originalCursorType","_cursorStylesheet","appendTo","remove","center","isFloating","test","isTable","isHorizontalFlex","_items","find","children","not","index","plugin","kendo$1"],"mappings":"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","file":"kendo.sortable.js","sourcesContent":["import './kendo.draganddrop.js';\n\nconst __meta__ = {\n    id: \"sortable\",\n    name: \"Sortable\",\n    category: \"framework\",\n    depends: [ \"draganddrop\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n\n        START = \"start\",\n        BEFORE_MOVE = \"beforeMove\",\n        MOVE = \"move\",\n        END = \"end\",\n        CHANGE = \"change\",\n        CANCEL = \"cancel\",\n\n        ACTION_SORT = \"sort\",\n        ACTION_REMOVE = \"remove\",\n        ACTION_RECEIVE = \"receive\",\n\n        DEFAULT_FILTER = \">*\",\n        MISSING_INDEX = -1;\n\n    function containsOrEqualTo(parent, child) {\n        try {\n            return $.contains(parent, child) || parent == child;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    function defaultHint(element) {\n        return element.clone();\n    }\n\n    function defaultPlaceholder(element) {\n        return element.clone().removeAttr(\"id\").css(\"visibility\", \"hidden\");\n    }\n\n    var Sortable = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            if (!that.options.placeholder) {\n                that.options.placeholder = defaultPlaceholder;\n            }\n\n            if (!that.options.hint) {\n                that.options.hint = defaultHint;\n            }\n\n            that.draggable = that._createDraggable();\n        },\n\n        events: [\n            START,\n            BEFORE_MOVE,\n            MOVE,\n            END,\n            CHANGE,\n            CANCEL\n        ],\n\n        options: {\n            name: \"Sortable\",\n            hint: null,\n            placeholder: null,\n            filter: DEFAULT_FILTER,\n            holdToDrag: false,\n            disabled: null,\n            container: null,\n            connectWith: null,\n            handler: null,\n            cursorOffset: null,\n            axis: null,\n            ignore: null,\n            autoScroll: false,\n            cursor: \"auto\",\n            moveOnDragEnter: false,\n            allowTouchActions: false,\n        },\n\n        destroy: function() {\n            this.draggable.destroy();\n            Widget.fn.destroy.call(this);\n        },\n\n        _createDraggable: function() {\n            var that = this,\n                element = that.element,\n                options = that.options;\n\n            return new kendo.ui.Draggable(element, {\n                filter: options.filter,\n                hint: kendo.isFunction(options.hint) ? options.hint : $(options.hint),\n                holdToDrag: options.holdToDrag,\n                container: options.container ? $(options.container) : null,\n                cursorOffset: options.cursorOffset,\n                axis: options.axis,\n                ignore: options.ignore,\n                autoScroll: options.autoScroll,\n                dragstart: that._dragstart.bind(that),\n                dragcancel: that._dragcancel.bind(that),\n                drag: that._drag.bind(that),\n                dragend: that._dragend.bind(that),\n                allowTouchActions: options.allowTouchActions\n            });\n        },\n\n        _dragstart: function(e) {\n            var draggedElement = this.draggedElement = e.currentTarget,\n                disabled = this.options.disabled,\n                handler = this.options.handler,\n                _placeholder = this.options.placeholder,\n                placeholder = this.placeholder = kendo.isFunction(_placeholder) ? $(_placeholder.call(this, draggedElement)) : $(_placeholder);\n\n            if (disabled && draggedElement.is(disabled)) {\n                e.preventDefault();\n            } else if (handler && !$(e.initialTarget).is(handler)) {\n                e.preventDefault();\n            } else {\n\n                if (this.trigger(START, { item: draggedElement, draggableEvent: e })) {\n                    e.preventDefault();\n                } else {\n                    draggedElement.css(\"display\", \"none\");\n                    draggedElement.before(placeholder);\n\n                    this._setCursor();\n                }\n\n            }\n        },\n\n        _dragcancel: function() {\n            this._cancel();\n            this.trigger(CANCEL, { item: this.draggedElement });\n\n            this._resetCursor();\n        },\n\n        _drag: function(e) {\n            var draggedElement = this.draggedElement,\n                target = this._findTarget(e),\n                targetCenter,\n                cursorOffset = { left: e.x.location, top: e.y.location },\n                offsetDelta,\n                axisDelta = { x: e.x.delta, y: e.y.delta },\n                direction,\n                sibling,\n                getSibling,\n                axis = this.options.axis,\n                moveOnDragEnter = this.options.moveOnDragEnter,\n                eventData = { item: draggedElement, list: this, draggableEvent: e };\n\n            if (axis === \"x\" || axis === \"y\") {\n                this._movementByAxis(axis, cursorOffset, axisDelta[axis], eventData);\n                return;\n            }\n\n            if (target) {\n                targetCenter = this._getElementCenter(target.element);\n\n                offsetDelta = {\n                    left: Math.round(cursorOffset.left - targetCenter.left),\n                    top: Math.round(cursorOffset.top - targetCenter.top)\n                };\n\n                $.extend(eventData, { target: target.element });\n\n                if (target.appendToBottom) {\n                    this._movePlaceholder(target, null, eventData);\n                    return;\n                }\n\n                if (target.appendAfterHidden) {\n                    this._movePlaceholder(target, \"next\", eventData);\n                }\n\n                if (this._isFloating(target.element)) { //horizontal\n                    if ((axisDelta.x < 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.left < 0)) {\n                        direction = \"prev\";\n                    } else if ((axisDelta.x > 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.left > 0)) {\n                        direction = \"next\";\n                    }\n                } else { //vertical\n                    if ((axisDelta.y < 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.top < 0)) {\n                        direction = \"prev\";\n                    } else if ((axisDelta.y > 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.top > 0)) {\n                        direction = \"next\";\n                    }\n                }\n\n                if (direction) {\n                    getSibling = (direction === \"prev\") ? jQuery.fn.prev : jQuery.fn.next;\n\n                    sibling = getSibling.call(target.element);\n\n                    //find the prev/next visible sibling\n                    while (sibling.length && !sibling.is(\":visible\")) {\n                        sibling = getSibling.call(sibling);\n                    }\n\n                    if (sibling[0] != this.placeholder[0]) {\n                        this._movePlaceholder(target, direction, eventData);\n                    }\n                }\n            }\n        },\n\n        _dragend: function(e) {\n            var placeholder = this.placeholder,\n                draggedElement = this.draggedElement,\n                draggedIndex = this.indexOf(draggedElement),\n                placeholderIndex = this.indexOf(placeholder),\n                connectWith = this.options.connectWith,\n                connectedList,\n                isDefaultPrevented,\n                eventData,\n                connectedListEventData;\n\n            this._resetCursor();\n\n            eventData = {\n                action: ACTION_SORT,\n                item: draggedElement,\n                oldIndex: draggedIndex,\n                newIndex: placeholderIndex,\n                draggableEvent: e\n            };\n\n            if (placeholderIndex >= 0) {\n                isDefaultPrevented = this.trigger(END, eventData);\n            } else {\n                connectedList = placeholder.parents(connectWith).getKendoSortable();\n\n                eventData.action = ACTION_REMOVE;\n                connectedListEventData = $.extend({}, eventData, {\n                    action: ACTION_RECEIVE,\n                    oldIndex: MISSING_INDEX,\n                    newIndex: connectedList.indexOf(placeholder)\n                });\n\n                isDefaultPrevented = !(!this.trigger(END, eventData) && !connectedList.trigger(END, connectedListEventData));\n            }\n\n            if (isDefaultPrevented || placeholderIndex === draggedIndex) {\n                this._cancel();\n                return;\n            }\n\n            placeholder.replaceWith(draggedElement);\n\n            draggedElement.show();\n            this.draggable.dropped = true;\n\n            eventData = {\n                action: this.indexOf(draggedElement) != MISSING_INDEX ? ACTION_SORT : ACTION_REMOVE,\n                item: draggedElement,\n                oldIndex: draggedIndex,\n                newIndex: this.indexOf(draggedElement),\n                draggableEvent: e\n            };\n\n            this.trigger(CHANGE, eventData);\n\n            if (connectedList) {\n                connectedListEventData = $.extend({}, eventData, {\n                    action: ACTION_RECEIVE,\n                    oldIndex: MISSING_INDEX,\n                    newIndex: connectedList.indexOf(draggedElement)\n                });\n\n                connectedList.trigger(CHANGE, connectedListEventData);\n            }\n\n        },\n\n        _findTarget: function(e) {\n            var element = this._findElementUnderCursor(e),\n                items,\n                connectWith = this.options.connectWith,\n                node;\n\n            if ($.contains(this.element[0], element)) { //the element is part of the sortable container\n                items = this.items();\n                node = items.filter(element)[0] || items.has(element)[0];\n\n                return node ? { element: $(node), sortable: this } : null;\n            } else if (this.element[0] == element && this._isEmpty()) {\n                return { element: this.element, sortable: this, appendToBottom: true };\n            } else if (this.element[0] == element && this._isLastHidden()) {\n                node = this.items().eq(0);\n                return { element: node , sortable: this, appendAfterHidden: true };\n            } else if (connectWith) { //connected lists are present\n                return this._searchConnectedTargets(element, e);\n            }\n        },\n\n        _findElementUnderCursor: function(e) {\n            var elementUnderCursor = kendo.elementUnderCursor(e),\n                draggable = e.sender;\n\n            if (containsOrEqualTo(draggable.hint[0], elementUnderCursor)) {\n                draggable.hint.hide();\n                elementUnderCursor = kendo.elementUnderCursor(e);\n                // IE8 does not return the element in iframe from first attempt\n                if (!elementUnderCursor) {\n                    elementUnderCursor = kendo.elementUnderCursor(e);\n                }\n                draggable.hint.show();\n            }\n\n            return elementUnderCursor;\n        },\n\n        _searchConnectedTargets: function(element, e) {\n            var connected = $(this.options.connectWith),\n                sortableInstance,\n                items,\n                node;\n\n            for (var i = 0; i < connected.length; i++) {\n                sortableInstance = connected.eq(i).getKendoSortable();\n\n                if ($.contains(connected[i], element)) {\n                    if (sortableInstance) {\n                        items = sortableInstance.items();\n                        node = items.filter(element)[0] || items.has(element)[0];\n\n                        if (node) {\n                            sortableInstance.placeholder = this.placeholder;\n                            return { element: $(node), sortable: sortableInstance };\n                        } else {\n                            return null;\n                        }\n                    }\n                } else if (connected[i] == element) {\n                    if (sortableInstance && sortableInstance._isEmpty()) {\n                        return { element: connected.eq(i), sortable: sortableInstance, appendToBottom: true };\n                    } else if (this._isCursorAfterLast(sortableInstance, e)) {\n                        node = sortableInstance.items().last();\n                        return { element: node, sortable: sortableInstance };\n                    }\n                }\n            }\n\n        },\n\n        _isCursorAfterLast: function(sortable, e) {\n            var lastItem = sortable.items().last(),\n                cursorOffset = { left: e.x.location, top: e.y.location },\n                lastItemOffset,\n                delta;\n\n            lastItemOffset = kendo.getOffset(lastItem);\n            lastItemOffset.top += outerHeight(lastItem);\n            lastItemOffset.left += outerWidth(lastItem);\n\n            if (this._isFloating(lastItem)) { //horizontal\n                delta = lastItemOffset.left - cursorOffset.left;\n            } else { //vertical\n                delta = lastItemOffset.top - cursorOffset.top;\n            }\n\n            return delta < 0 ? true : false;\n        },\n\n        _movementByAxis: function(axis, cursorOffset, delta, eventData) {\n            var cursorPosition = (axis === \"x\") ? cursorOffset.left : cursorOffset.top,\n                target = (delta < 0) ? this.placeholder.prev() : this.placeholder.next(),\n                items = this.items(),\n                targetCenter;\n\n            if (target.length && !target.is(\":visible\")) {\n                target = (delta < 0) ? target.prev() : target.next();\n            }\n\n            if (!items.filter(target).length) {\n                return;\n            }\n\n            $.extend(eventData, { target: target });\n            targetCenter = this._getElementCenter(target);\n\n            if (targetCenter) {\n                targetCenter = (axis === \"x\") ? targetCenter.left : targetCenter.top;\n            }\n\n            if (target.length && delta < 0 && cursorPosition - targetCenter < 0) { //prev\n                this._movePlaceholder({ element: target, sortable: this }, \"prev\", eventData);\n            } else if (target.length && delta > 0 && cursorPosition - targetCenter > 0) { //next\n                this._movePlaceholder({ element: target, sortable: this }, \"next\", eventData);\n            }\n        },\n\n        _movePlaceholder: function(target, direction, eventData) {\n            var placeholder = this.placeholder;\n\n            if (!target.sortable.trigger(BEFORE_MOVE, eventData)) {\n\n                if (!direction) {\n                    target.element.append(placeholder);\n                } else if (direction === \"prev\") {\n                    target.element.before(placeholder);\n                } else if (direction === \"next\") {\n                    target.element.after(placeholder);\n                }\n\n                target.sortable.trigger(MOVE, eventData);\n            }\n        },\n\n        _setCursor: function() {\n            var cursor = this.options.cursor,\n                body;\n\n            if (cursor && cursor !== \"auto\") {\n                body = $(document.body);\n\n                this._originalCursorType = body.css(\"cursor\");\n                body.css({ \"cursor\": cursor });\n\n                if (!this._cursorStylesheet) {\n                    this._cursorStylesheet = $(\"<style>* { cursor: \" + cursor + \" !important; }</style>\");\n                }\n\n                this._cursorStylesheet.appendTo(body);\n            }\n        },\n\n        _resetCursor: function() {\n            if (this._originalCursorType) {\n                $(document.body).css(\"cursor\", this._originalCursorType);\n                this._originalCursorType = null;\n\n                this._cursorStylesheet.remove();\n            }\n        },\n\n        _getElementCenter: function(element) {\n            var center = element.length ? kendo.getOffset(element) : null;\n            if (center) {\n                center.top += outerHeight(element) / 2;\n                center.left += outerWidth(element) / 2;\n            }\n\n            return center;\n        },\n\n        _isFloating: function(item) {\n            var isFloating = /left|right/.test(item.css('float'));\n            var isTable = /inline|table-cell/.test(item.css('display'));\n            var isHorizontalFlex = /flex/.test(item.parent().css('display')) && (/row|row-reverse/.test(item.parent().css('flex-direction')) || !item.parent().css('flex-direction'));\n            return isFloating || isTable || isHorizontalFlex;\n        },\n\n        _cancel: function() {\n            if (this.draggedElement) {\n                this.draggedElement.show();\n                this.placeholder.remove();\n                this.draggable.dropped = true;\n            }\n        },\n\n        _items: function() {\n            var filter = this.options.filter,\n                items;\n\n            if (filter) {\n                items = this.element.find(filter);\n            } else {\n                items = this.element.children();\n            }\n\n            return items;\n        },\n\n        indexOf: function(element) {\n            var items = this._items(),\n                placeholder = this.placeholder,\n                draggedElement = this.draggedElement;\n\n            if (placeholder && element[0] == placeholder[0]) {\n                return items.not(draggedElement).index(element);\n            } else {\n                return items.not(placeholder).index(element);\n            }\n        },\n\n        items: function() {\n            var placeholder = this.placeholder,\n                items = this._items();\n\n            if (placeholder) {\n                items = items.not(placeholder);\n            }\n\n            return items;\n        },\n\n        _isEmpty: function() {\n            return !this.items().length;\n        },\n\n        _isLastHidden: function() {\n            return this.items().length === 1 && this.items().is(\":hidden\");\n        }\n\n    });\n\n    kendo.ui.plugin(Sortable);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
{"version":3,"sources":["raw-mjs/kendo.dataviz.gauge.js"],"names":["gaugeTheme","RadialGauge","LinearGauge","ArcGauge","CircularGauge","ArrowLinearPointer","BarLinearPointer","LinearPointer","RadialPointer","RadialScale","LinearScale","$","window","kendo","dataviz","Widget","ui","draw","drawing","themeOptions","options","element","themes","themeName","theme","lowerName","toLowerCase","SASS_THEMES","indexOf","addClass","removeClass","gauge","Gauge","extend","init","userOptions","destroy","empty","fn","call","this","deepExtend","wrapper","_createInstance","notify","renderAs","pointer","scale","gaugeArea","background","transitions","setOptions","_instance","_copyFields","redraw","gaugeType","_gaugeType","_originalOptions","surface","bbox","pointers","_resize","resize","proxyMembers","createProxyMember","name","apply","arguments","idx","length","ExportMixin","RadialGaugeWidget","LinearGaugeWidget","vertical","ArcGaugeWidget","css","_centerTemplate","value","instance","_centerElement","exportVisual","centerTemplate","template","centerElement","_getCenterElement","html","color","currentColor","position","centerLabelPosition","width","height","remove","append","CircularGaugeWidget","createExportMethod","method","drawDOM","then","visual","exportMethods","plugin","jQuery","__meta__","id","category","description","depends","kendo$1"],"mappings":";;;;;;;;MAAA,wBACA,sCACAA,gBAAAC,iBAAAC,iBAAAC,cAAAC,mBAAAC,wBAAAC,sBAAAC,mBAAAC,mBAAAC,iBAAAC,gBAAA,oCACA,6BAEA,SAAAC,GACAC,OAAAC,MAAAC,QAAAF,OAAAC,MAAAC,SAAA,CAAA,EAEA,IAAAD,EAAAD,OAAAC,MACAE,EAAAF,EAAAG,GAAAD,OACAD,EAAAD,EAAAC,QACAG,EAAAJ,EAAAK,QAEA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAR,EAAAE,GAAAM,QAAA,CAAA,EACAC,EAAAH,EAAAI,OAAA,GACAC,EAAAF,EAAAG,cAEA,IAAA,GAAAZ,EAAAa,YAAAC,QAAAH,GAAA,CACAJ,EAAAQ,SAAA,WACA,MAAAL,EAAAxB,WAAAqB,EAAA,IAGA,OADAA,EAAAS,YAAA,WACAN,CACA,CAEA,OAAAF,EAAAC,IAAAD,EAAAG,IAAA,CAAA,GAAAM,KACA,CAEA,IAAAC,EAAAjB,EAAAkB,OAAA,CACAC,KAAA,SAAAb,EAAAc,GACAtB,EAAAuB,QAAAf,GACAV,EAAAU,GAAAgB,QAEAtB,EAAAuB,GAAAJ,KAAAK,KAAAC,KAAAnB,GAEAmB,KAAApB,QAAAP,EAAA4B,WAAAD,KAAApB,QAAAe,GAEAK,KAAAE,QAAAF,KAAAnB,QACAmB,KAAAG,kBAEAH,KAAAnB,QAAAQ,SAAA,WAEAhB,EAAA+B,OAAAJ,KAAA1B,EAAAE,GACA,EAEAI,QAAA,CACAI,MAAA,OACAqB,SAAA,GACAC,QAAA,CAAA,EACAC,MAAA,CAAA,EACAC,UAAA,CACAC,WAAA,IAEAC,aAAA,GAGAC,WAAA,SAAA/B,GACAoB,KAAAY,UAAAD,WAAA/B,EAAAD,EAAAC,EAAAoB,KAAAnB,UAEAmB,KAAAa,aACA,EAEAC,OAAA,WACAd,KAAAY,UAAAE,SACAd,KAAAa,aACA,EAEAjB,QAAA,WACArB,EAAAuB,GAAAF,QAAAG,KAAAC,MACAA,KAAAY,UAAAhB,SACA,EAEAO,gBAAA,WACA,IAAAY,EAAAf,KAAAgB,aACAhB,KAAAY,UAAA,IAAAG,EAAAf,KAAAnB,QAAA,GAAAmB,KAAApB,QAAAD,EAAAqB,KAAApB,QAAAoB,KAAAnB,UACAmB,KAAAa,aACA,EAEAA,YAAA,WACAb,KAAAiB,iBAAAjB,KAAAY,UAAAK,iBACAjB,KAAApB,QAAAoB,KAAAY,UAAAhC,QACAoB,KAAAkB,QAAAlB,KAAAY,UAAAM,QACAlB,KAAAmB,KAAAnB,KAAAY,UAAAO,KACAnB,KAAAQ,UAAAR,KAAAY,UAAAJ,UACAR,KAAAoB,SAAApB,KAAAY,UAAAQ,SACApB,KAAAO,MAAAP,KAAAY,UAAAL,KACA,EAEAc,QAAA,WACArB,KAAAY,UAAAU,QACA,IAGAC,EAAA,CAAA,UAAA,QAAA,YAAA,gBAEA,SAAAC,EAAAC,GACAjC,EAAAM,GAAA2B,GAAA,WACA,OAAAzB,KAAAY,UAAAa,GAAAC,MAAA1B,KAAAY,UAAAe,UACA,CACA,CAEA,IAAA,IAAAC,EAAA,EAAAA,EAAAL,EAAAM,OAAAD,IACAJ,EAAAD,EAAAK,IAGAtD,EAAAwD,YAAArC,OAAAD,EAAAM,IAEA,IAAAiC,EAAAvC,EAAAC,OAAA,CAEAb,QAAA,CACA6C,KAAA,eAGAT,WAAA,WACA,OAAAvD,WACA,IAGAuE,EAAAxC,EAAAC,OAAA,CAEAb,QAAA,CACA6C,KAAA,cACAlB,MAAA,CACA0B,UAAA,IAIAjB,WAAA,WACA,OAAAtD,WACA,IAGAwE,EAAA1C,EAAAC,OAAA,CACAC,KAAA,SAAAb,EAAAc,GACAH,EAAAM,GAAAJ,KAAAK,KAAAC,KAAAnB,EAAAc,GAEAK,KAAAnB,QAAAsD,IAAA,WAAA,YACAnC,KAAAnB,QAAAQ,SAAA,cAEAW,KAAAoC,iBACA,EAEAxD,QAAA,CACA6C,KAAA,YAGAd,WAAA,SAAA/B,GACAY,EAAAM,GAAAa,WAAAZ,KAAAC,KAAApB,GACAoB,KAAAoC,iBACA,EAEAtB,OAAA,WACAtB,EAAAM,GAAAgB,OAAAf,KAAAC,MACAA,KAAAoC,iBACA,EAEAC,MAAA,SAAAA,GACA,IAAAC,EAAAtC,KAAAY,UACA,GAAA,IAAAe,UAAAE,OACA,OAAAS,EAAAD,QAGAC,EAAAD,MAAAA,GAEArC,KAAAoC,iBACA,EAEAxC,QAAA,WACAJ,EAAAM,GAAAF,QAAAG,KAAAC,aACAA,KAAAuC,cACA,EAEAC,aAAA,WACA,OAAAxC,KAAAuC,gBAIA/C,EAAAM,GAAA0C,aAAAzC,KAAAC,KACA,EAEAqB,QAAA,WACArB,KAAAY,UAAAU,SAEAtB,KAAAoC,iBACA,EAEAA,gBAAA,WACA,GAAApC,KAAApB,QAAA6D,eAAA,CACA,IAAAC,EAAArE,EAAAqE,SAAA1C,KAAApB,QAAA6D,gBAEAH,EAAAtC,KAAAY,UACA+B,EAAA3C,KAAA4C,oBAEAD,EAAAE,KAAAH,EAAA,CAAAI,MAAAR,EAAAS,eAAAV,MAAAC,EAAAD,WAEA,IAAAW,EAAAV,EAAAW,oBAAAN,EAAAO,QAAAP,EAAAQ,UAEAR,EAAAR,IAAAa,EACA,MAAAhD,KAAAuC,iBACAvC,KAAAuC,eAAAa,SACApD,KAAAuC,eAAA,KAEA,EAEAK,kBAAA,WACA,IAAAD,EAAA3C,KAAAuC,eAMA,OALAI,IACAA,EAAA3C,KAAAuC,eAAApE,EAAA,eAAAkB,SAAA,oBACAW,KAAAnB,QAAAwE,OAAAV,IAGAA,CACA,EAEA3B,WAAA,WACA,OAAArD,QACA,IAGA2F,EAAApB,EAAAzC,OAAA,CACAb,QAAA,CACA6C,KAAA,iBAGAT,WAAA,WACA,OAAApD,aACA,IAGA,SAAA2F,EAAA9B,GACAS,EAAApC,GAAA2B,GAAA,SAAA7C,GACA,IAAAW,EAAAS,KACAwD,EAAA/E,EAAAgD,GAEA,OAAAlC,EAAAgD,eAIA9D,EAAAgF,QAAAlE,EAAAV,SAAA6E,MAAA,SAAAC,GACA,OAAAH,EAAAG,EAAA/E,EACA,IALA4E,EAAAjE,EAAAiD,eAAA5D,EAMA,CACA,CAEA,IAAAgF,EAAA,CAAA,YAAA,cAAA,aAEA,IAAAhC,EAAA,EAAAA,EAAAgC,EAAA/B,OAAAD,IACA2B,EAAAK,EAAAhC,IAGAtD,EAAAE,GAAAqF,OAAA7B,GACA1D,EAAAE,GAAAqF,OAAA9B,GACAzD,EAAAE,GAAAqF,OAAA3B,GACA5D,EAAAE,GAAAqF,OAAAP,GAEAjF,EAAA4B,WAAA3B,EAAA,CACAkB,MAAAA,EACAtB,YAAAA,YACAD,YAAAA,YACAD,cAAAA,cACAD,cAAAA,cACAD,iBAAAA,iBACAD,mBAAAA,mBACAH,YAAAsE,EACAvE,YAAAsE,EACApE,SAAAuE,EACAtE,cAAA0F,GAGA,CAzQA,CAyQAlF,OAAAC,MAAAyF,QAEA,MAAAC,SAAA,CACAC,GAAA,gBACAvC,KAAA,QACAwC,SAAA,UACAC,YAAA,iCACAC,QAAA,CAAA,eAAA,iBAAA,qBAGA,IAAAC,QAAA/F,aAEA0F,SAAAK","file":"kendo.dataviz.gauge.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.dataviz.core.js';\nimport { g as gaugeTheme, R as RadialGauge, L as LinearGauge, A as ArcGauge, t as CircularGauge, u as ArrowLinearPointer, v as BarLinearPointer, w as LinearPointer, x as RadialPointer, y as RadialScale, z as LinearScale } from './kendo.charts.cmn.chunk.js';\nimport './kendo.dataviz.themes.js';\n\n(function($) {\n    window.kendo.dataviz = window.kendo.dataviz || {};\n\n    var kendo = window.kendo;\n    var Widget = kendo.ui.Widget;\n    var dataviz = kendo.dataviz;\n    var draw = kendo.drawing;\n\n    function themeOptions(options, element) {\n        var themes = dataviz.ui.themes || {};\n        var themeName = options.theme || \"\";\n        var lowerName = themeName.toLowerCase();\n\n        if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n            element.addClass(\"k-gauge\");\n            const theme = gaugeTheme(element[0]);\n\n            element.removeClass(\"k-gauge\");\n            return theme;\n        }\n\n        return (themes[themeName] || themes[lowerName] || {}).gauge;\n    }\n\n    var Gauge = Widget.extend({\n        init: function(element, userOptions) {\n            kendo.destroy(element);\n            $(element).empty();\n\n            Widget.fn.init.call(this, element);\n\n            this.options = kendo.deepExtend(this.options, userOptions);\n\n            this.wrapper = this.element;\n            this._createInstance();\n\n            this.element.addClass('k-gauge');\n\n            kendo.notify(this, dataviz.ui);\n        },\n\n        options: {\n            theme: \"sass\",\n            renderAs: \"\",\n            pointer: {},\n            scale: {},\n            gaugeArea: {\n                background: \"\"\n            },\n            transitions: true\n        },\n\n        setOptions: function(options) {\n            this._instance.setOptions(options, themeOptions(options, this.element));\n\n            this._copyFields();\n        },\n\n        redraw: function() {\n            this._instance.redraw();\n            this._copyFields();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this._instance.destroy();\n        },\n\n        _createInstance: function() {\n            var gaugeType = this._gaugeType();\n            this._instance = new gaugeType(this.element[0], this.options, themeOptions(this.options, this.element));\n            this._copyFields();\n        },\n\n        _copyFields: function() {\n            this._originalOptions = this._instance._originalOptions;\n            this.options = this._instance.options;\n            this.surface = this._instance.surface;\n            this.bbox = this._instance.bbox;\n            this.gaugeArea = this._instance.gaugeArea;\n            this.pointers = this._instance.pointers;\n            this.scale = this._instance.scale;\n        },\n\n        _resize: function() {\n            this._instance.resize();\n        }\n    });\n\n    var proxyMembers = [\"getSize\", \"value\", \"allValues\", \"exportVisual\"];\n\n    function createProxyMember(name) {\n        Gauge.fn[name] = function() {\n            return this._instance[name].apply(this._instance, arguments);\n        };\n    }\n\n    for (var idx = 0; idx < proxyMembers.length; idx++) {\n        createProxyMember(proxyMembers[idx]);\n    }\n\n    dataviz.ExportMixin.extend(Gauge.fn);\n\n    var RadialGaugeWidget = Gauge.extend({\n\n        options: {\n            name: \"RadialGauge\"\n        },\n\n        _gaugeType: function() {\n            return RadialGauge;\n        }\n    });\n\n    var LinearGaugeWidget = Gauge.extend({\n\n        options: {\n            name: \"LinearGauge\",\n            scale: {\n                vertical: true\n            }\n        },\n\n        _gaugeType: function() {\n            return LinearGauge;\n        }\n    });\n\n    var ArcGaugeWidget = Gauge.extend({\n        init: function(element, userOptions) {\n            Gauge.fn.init.call(this, element, userOptions);\n\n            this.element.css('position', 'relative');\n            this.element.addClass('k-arcgauge');\n\n            this._centerTemplate();\n        },\n\n        options: {\n            name: \"ArcGauge\"\n        },\n\n        setOptions: function(options) {\n            Gauge.fn.setOptions.call(this, options);\n            this._centerTemplate();\n        },\n\n        redraw: function() {\n            Gauge.fn.redraw.call(this);\n            this._centerTemplate();\n        },\n\n        value: function(value) {\n            var instance = this._instance;\n            if (arguments.length === 0) {\n                return instance.value();\n            }\n\n            instance.value(value);\n\n            this._centerTemplate();\n        },\n\n        destroy: function() {\n            Gauge.fn.destroy.call(this);\n            delete this._centerElement;\n        },\n\n        exportVisual: function() {\n            if (this._centerElement) {\n                return false;\n            }\n\n            return Gauge.fn.exportVisual.call(this);\n        },\n\n        _resize: function() {\n            this._instance.resize();\n\n            this._centerTemplate();\n        },\n\n        _centerTemplate: function() {\n            if (this.options.centerTemplate) {\n                var template = kendo.template(this.options.centerTemplate);\n\n                var instance = this._instance;\n                var centerElement = this._getCenterElement();\n\n                centerElement.html(template({ color: instance.currentColor(), value: instance.value() }));\n\n                var position = instance.centerLabelPosition(centerElement.width(), centerElement.height());\n\n                centerElement.css(position);\n            } else if (this._centerElement) {\n                this._centerElement.remove();\n                this._centerElement = null;\n            }\n        },\n\n        _getCenterElement: function() {\n            var centerElement = this._centerElement;\n            if (!centerElement) {\n                centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                this.element.append(centerElement);\n            }\n\n            return centerElement;\n        },\n\n        _gaugeType: function() {\n            return ArcGauge;\n        }\n    });\n\n    var CircularGaugeWidget = ArcGaugeWidget.extend({\n        options: {\n            name: \"CircularGauge\"\n        },\n\n        _gaugeType: function() {\n            return CircularGauge;\n        }\n    });\n\n    function createExportMethod(name) {\n        ArcGaugeWidget.fn[name] = function(options) {\n            var gauge = this;\n            var method = draw[name];\n\n            if (!gauge._centerElement) {\n                return method(gauge.exportVisual(), options);\n            }\n\n            return draw.drawDOM(gauge.element).then(function(visual) {\n                return method(visual, options);\n            });\n        };\n    }\n\n    var exportMethods = ['exportSVG', 'exportImage', 'exportPDF'];\n\n    for (idx = 0; idx < exportMethods.length; idx++) {\n        createExportMethod(exportMethods[idx]);\n    }\n\n    dataviz.ui.plugin(LinearGaugeWidget);\n    dataviz.ui.plugin(RadialGaugeWidget);\n    dataviz.ui.plugin(ArcGaugeWidget);\n    dataviz.ui.plugin(CircularGaugeWidget);\n\n    kendo.deepExtend(dataviz, {\n        Gauge: Gauge,\n        LinearScale: LinearScale,\n        RadialScale: RadialScale,\n        RadialPointer: RadialPointer,\n        LinearPointer: LinearPointer,\n        BarLinearPointer: BarLinearPointer,\n        ArrowLinearPointer: ArrowLinearPointer,\n        LinearGauge: LinearGaugeWidget,\n        RadialGauge: RadialGaugeWidget,\n        ArcGauge: ArcGaugeWidget,\n        CircularGauge: CircularGaugeWidget\n    });\n\n})(window.kendo.jQuery);\n\nconst __meta__ = {\n    id: \"dataviz.gauge\",\n    name: \"Gauge\",\n    category: \"dataviz\",\n    description: \"Linear, Radial and Arc gauges.\",\n    depends: [\"dataviz.core\", \"dataviz.themes\", \"charts.cmn.chunk\"]\n};\n\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
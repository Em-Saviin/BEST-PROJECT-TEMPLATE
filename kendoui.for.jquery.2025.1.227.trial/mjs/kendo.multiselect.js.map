{"version":3,"sources":["raw-mjs/kendo.multiselect.js"],"names":["addInputPrefixSuffixContainers","__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","List","encode","htmlEncode","html","keys","extend","A","activeElement","_activeElement","ObservableArray","data","ID","CHIP","ACCEPT","FILTER","REBIND","OPEN","CLOSE","CHANGE","SELECT","DESELECT","ARIA_DISABLED","ARIA_READONLY","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_ACTIVEDESCENDANT","FOCUSEDCLASS","SELECTEDCLASS","HOVERCLASS","STATEDISABLED","NOCLICKCLASS","DISABLED","READONLY","ns","CLICK","KEYDOWN","MOUSEENTER","MOUSELEAVE","HOVEREVENTS","quotRegExp","isArray","Array","styles","MultiSelect","init","element","options","that","this","fn","call","_optionsMap","_customOptions","inputMode","attr","_wrapper","_inputValuesContainer","_tagList","_input","_textContainer","_clearButton","_arrowButton","_tabindex","input","hide","placeholder","guid","_tagID","tagList","_initialOpen","label","_label","_aria","_dataSource","_ignoreCase","_popup","_tagTemplate","requireValueMapper","_initList","_reset","_enable","_placeholder","autoBind","dataSource","fetch","value","_preselect","parents","is","enable","_toggleCloseVisibility","_applyCssClasses","widget","wrapper","prefixInsertBefore","suffixInsertAfter","clearButton","_clear","find","floatingLabel","refresh","notify","tagMode","enabled","autoClose","highlightFirst","dataTextField","dataValueField","filter","ignoreCase","minLength","messages","singleTag","clear","deleteTag","noData","downArrow","enforceMinLength","delay","maxSelectedItems","height","animation","virtual","itemTemplate","tagTemplate","groupTemplate","fixedGroupTemplate","prefixOptions","separator","suffixOptions","autoWidth","popup","size","fillMode","rounded","events","setDataSource","_state","persistTagList","listView","setOptions","listOptions","_listOptions","_accessors","currentTag","candidate","_currentTag","removeClass","removeAttr","addClass","dataItems","selectedDataItems","destroy","clearTimeout","_busy","_typingTimeout","filterInput","off","_onActionSheetCreate","on","_keydown","bind","_search","role","val","trigger","ul","autocomplete","tagListId","_ariaLabel","_focused","_activateItem","visible","selectedItemChange","_selectedItemChange","selectable","template","getter","_setListValue","_initialValues","slice","_listChange","e","flatView","optionsMap","valueGetter","_value","i","added","length","dataItem","_render","_selectValue","removed","context","idx","items","children","eq","index","first","tagTextTemplate","item","_wrapperMousedown","notInput","target","nodeName","toLowerCase","closeButton","closest","removeButton","support","mobileOS","cancelable","preventDefault","toggle","open","_inputFocus","_inputFocusout","relatedTarget","close","skipUpdate","bound","isFiltered","_clearFilter","_removeTag","tag","shouldTrigger","option","state","position","customIndex","listViewChildren","_close","done","_change","_refreshTagListAria","select","selected","removeAt","_removedAddedIndexes","splice","classList","remove","_updateTagListHTML","_tagListClick","stopPropagation","currentTarget","_clearValue","_clearSingleTagValue","each","focus","_hideClear","tags","_focusHandler","active","_editable","disable","readonly","toggleClass","prop","_toggleHover","_filterSource","force","_retrieveData","_activeItem","filterValue","listViewFilter","listViewFilterValue","filters","toString","_request","_open","_focusItem","_allowOpening","isPlainObject","_hovered","altTarget","add","_floatCheck","_listBound","_renderFooter","_renderNoData","_toggleNoData","_resizePopup","_updateItemFocus","_touchScroller","reset","_hideBusy","skip","isFirstPage","focusFirst","_inputValue","inputValue","oldValue","clearFilters","_normalizeValues","_old","_valueBeforeCascade","_fetchData","ObservableObject","_setOption","hasItems","view","_fetch","read","_isBound","fields","field","_refreshHandler","_unbindDataSource","_progressHandler","_showBusy","_endRequestHandler","_errorHandler","DataSource","create","formId","form","_resetHandler","setTimeout","_form","_initValue","map","a","b","compare","_click","_select","_getActiveItem","_getSelectedIndices","_selectedIndices","_selectedIndexes","activeItemIdx","key","keyCode","hasValue","isRtl","dir","handled","ENTER","_multipleSelection","DOWN","shiftKey","getElementIndex","focusNext","_selectRange","focusLast","UP","focusPrev","LEFT","RIGHT","prev","last","next","ctrlKey","altKey","hasClass","SPACEBAR","activeIndex","currentIndex","ESC","HOME","END","DELETE","BACKSPACE","PAGEDOWN","PAGEUP","direction","scrollWith","screenHeight","show","skipCaret","isActive","caretPos","_prev","caret","_option","dataValue","dataText","indexOf","replace","selectedIndex","selectedItems","values","_buildSelectedItems","custom","_selectedItemIndex","_text","valueField","textField","result","push","noDelay","_performSearch","search","_showClear","_allowSelection","max","updatePersistTagList","removedItem","addedItem","total","removeChild","append","applyStylesFromKendoAttributes","_maxTotal","_refreshFloatingLabel","renderChipList","maxTotal","currentTotal","resolved","Deferred","resolve","dataItemByIndex","isSelected","_selectIndices","indices","forEach","startIndex","endIndex","indicesToSelect","accessKey","appendTo","title","inputValuesContainer","defaultTemplate","hasDataSource","isMultiple","renderChip","themeColor","text","unselectable","removable","removableAttr","icon","iconAttr","insertAfter","arrowTitle","arrow","renderButton","_arrow","tabIndex","computedStyles","getComputedStyles","visibility","top","left","_span","css","parent","wrap","style","cssText","className","_closeHandler","_openHandler","_adjustListWidth","plugin","cssProperties","registerPrefix","registerValues","roundedValues","concat","jQuery","kendo$1"],"mappings":"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","file":"kendo.multiselect.js","sourcesContent":["import './kendo.list.js';\nimport './kendo.mobile.scroller.js';\nimport './kendo.virtuallist.js';\nimport './kendo.html.chip.js';\nimport './kendo.html.chiplist.js';\nimport './kendo.html.button.js';\nimport { a as addInputPrefixSuffixContainers } from './kendo.prefix-suffix-containers.chunk.js';\n\nconst __meta__ = {\n    id: \"multiselect\",\n    name: \"MultiSelect\",\n    category: \"web\",\n    description: \"The MultiSelect widget allows the selection from pre-defined values.\",\n    depends: [\"list\", \"html.chip\", \"html.chiplist\", \"html.button\", \"prefix-suffix-containers.chunk\"],\n    features: [ {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }, {\n        id: \"virtualization\",\n        name: \"VirtualList\",\n        description: \"Support for virtualization\",\n        depends: [ \"virtuallist\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        List = ui.List,\n        encode = kendo.htmlEncode,\n        html = kendo.html,\n        keys = $.extend({ A: 65 }, kendo.keys),\n        activeElement = kendo._activeElement,\n        ObservableArray = kendo.data.ObservableArray,\n        ID = \"id\",\n        CHIP = \".k-chip\",\n        ACCEPT = \"accept\",\n        FILTER = \"filter\",\n        REBIND = \"rebind\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        PROGRESS = \"progress\",\n        SELECT = \"select\",\n        DESELECT = \"deselect\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_BUSY = \"aria-busy\",\n        FOCUSEDCLASS = \"k-focus\",\n        SELECTEDCLASS = \"k-selected\",\n        HIDDENCLASS = \"k-hidden\",\n        HOVERCLASS = \"k-hover\",\n        STATEDISABLED = \"k-disabled\",\n        NOCLICKCLASS = \"k-no-click\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        AUTOCOMPLETEVALUE = \"off\",\n        ns = \".kendoMultiSelect\",\n        CLICK = \"click\" + ns,\n        KEYDOWN = \"keydown\" + ns,\n        MOUSEENTER = \"mouseenter\" + ns,\n        MOUSELEAVE = \"mouseleave\" + ns,\n        HOVEREVENTS = MOUSEENTER + \" \" + MOUSELEAVE,\n        quotRegExp = /\"/g,\n        isArray = Array.isArray,\n        styles = [\"font-family\",\n                  \"font-size\",\n                  \"font-stretch\",\n                  \"font-style\",\n                  \"font-weight\",\n                  \"letter-spacing\",\n                  \"text-transform\",\n                  \"line-height\"];\n\n    var MultiSelect = List.extend({\n        init: function(element, options) {\n            var that = this, id, disabled;\n\n            that.ns = ns;\n            List.fn.init.call(that, element, options);\n\n            that._optionsMap = {};\n            that._customOptions = {};\n            that.options.inputMode = that.options.inputMode || that.element.attr(\"inputmode\") || \"text\";\n\n            that._wrapper();\n            that._inputValuesContainer();\n            that._tagList();\n            that._input();\n            that._textContainer();\n            that._clearButton();\n            that._arrowButton();\n\n            that._tabindex(that.input);\n\n            element = that.element.attr(\"multiple\", \"multiple\").hide();\n            options = that.options;\n\n            if (!options.placeholder) {\n                options.placeholder = element.data(\"placeholder\");\n            }\n\n            id = element.attr(ID);\n\n            if (!id) {\n                id = kendo.guid();\n            }\n\n            if (id) {\n                that._tagID = id + \"_tag_active\";\n                id = id + \"_taglist\";\n                that.tagList.attr(ID, id);\n            }\n\n            that._initialOpen = true;\n\n            if (options.label) {\n                this._label();\n            }\n\n            that._aria();\n\n            that._dataSource();\n            that._ignoreCase();\n            that._popup();\n\n            that._tagTemplate();\n            that.requireValueMapper(that.options);\n            that._initList();\n\n            that._reset();\n            that._enable();\n            that._placeholder();\n\n            if (options.autoBind) {\n                that.dataSource.fetch();\n            } else if (options.value) {\n                that._preselect(options.value);\n            }\n\n            disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            }\n\n            that._toggleCloseVisibility();\n            that._applyCssClasses();\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._inputValuesContainer, suffixInsertAfter: options.clearButton ? that._clear : that.element.find(\"k-input-values\") });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"MultiSelect\",\n            tagMode: \"multiple\",\n            enabled: true,\n            autoBind: true,\n            autoClose: true,\n            highlightFirst: true,\n            dataTextField: \"\",\n            dataValueField: \"\",\n            filter: \"startswith\",\n            ignoreCase: true,\n            minLength: 1,\n            messages: {\n                \"singleTag\": \"item(s) selected\",\n                \"clear\": \"clear\",\n                \"deleteTag\": \"delete\",\n                \"noData\": \"No data found.\",\n                \"downArrow\": \"select\"\n            },\n            enforceMinLength: false,\n            delay: 100,\n            value: null,\n            maxSelectedItems: null,\n            placeholder: \"\",\n            height: 200,\n            animation: {},\n            virtual: false,\n            itemTemplate: \"\",\n            tagTemplate: \"\",\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            },\n            clearButton: true,\n            autoWidth: false,\n            popup: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            CHANGE,\n            SELECT,\n            DESELECT,\n            \"filtering\",\n            \"dataBinding\",\n            \"dataBound\"\n        ],\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._state = \"\";\n            this._dataSource();\n\n            this.persistTagList = false;\n            this.listView.setDataSource(this.dataSource);\n\n            if (this.options.autoBind) {\n                this.dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            var listOptions = this._listOptions(options);\n\n            List.fn.setOptions.call(this, options);\n\n            this.listView.setOptions(listOptions);\n\n\n            this._accessors();\n            this._aria();\n            this._tagTemplate();\n            this._placeholder();\n            this._clearButton();\n            this._arrowButton();\n        },\n\n        currentTag: function(candidate) {\n            var that = this;\n\n            if (candidate !== undefined$1) {\n                if (that._currentTag) {\n                    that._currentTag\n                        .removeClass(FOCUSEDCLASS)\n                        .removeAttr(ID);\n\n                    that._currentTag.find(\".k-chip-action\").attr(ARIA_HIDDEN, true);\n\n                    that.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (candidate) {\n                    candidate.addClass(FOCUSEDCLASS).attr(ID, that._tagID);\n\n                    candidate.find(\".k-chip-action\").removeAttr(ARIA_HIDDEN);\n\n                    that.input.attr(ARIA_ACTIVEDESCENDANT, that._tagID);\n                }\n\n                that._currentTag = candidate;\n            } else {\n                return that._currentTag;\n            }\n        },\n\n        dataItems: function() {\n            return this.listView.selectedDataItems();\n        },\n\n        destroy: function() {\n            var that = this,\n                ns = that.ns;\n\n            clearTimeout(that._busy);\n            clearTimeout(that._typingTimeout);\n\n            if (that.filterInput) {\n                that.filterInput.off(ns);\n            }\n\n            that.wrapper.off(ns);\n            that.tagList.off(ns);\n            that.input.off(ns);\n            that._clear.off(ns);\n\n            List.fn.destroy.call(that);\n        },\n\n        _onActionSheetCreate: function() {\n            var that = this;\n\n            that.filterInput\n                .on(\"keydown\" + ns, that._keydown.bind(that))\n                .on(\"input\" + ns, that._search.bind(that))\n                .on(\"paste\" + ns, that._search.bind(that))\n                .attr({\n                    \"role\": \"combobox\",\n                    \"aria-expanded\": false,\n                    \"aria-controls\": that.input.attr(\"aria-controls\"),\n                    \"aria-autocomplete\": that.input.attr(\"aria-autocomplete\"),\n                    \"aria-describedby\": that.input.attr(\"aria-describedby\")\n                });\n\n            that.popup.bind(\"activate\", () => {\n                that.filterInput.val(that.input.val());\n                that.filterInput.trigger(\"focus\");\n            });\n\n            that.popup.bind(\"close\", () => {\n                that.input.trigger(\"focus\");\n            });\n        },\n\n        _aria: function() {\n            var that = this,\n                id = that.ul[0].id,\n                autocomplete = this.options.filter === \"none\" ? \"none\" : \"list\",\n                tagListId = that.tagList.attr(ID);\n\n            that.input.attr({\n                \"role\": \"combobox\",\n                \"aria-expanded\": false,\n                \"aria-controls\": id,\n                \"aria-autocomplete\": autocomplete,\n                \"aria-describedby\": tagListId\n            });\n\n            that._ariaLabel(that._focused);\n        },\n\n        _activateItem: function() {\n            if (this.popup.visible()) {\n                List.fn._activateItem.call(this);\n            }\n            this.currentTag(null);\n        },\n\n        _listOptions: function(options) {\n            var that = this;\n            var listOptions = List.fn._listOptions.call(that, $.extend(options, {\n                selectedItemChange: that._selectedItemChange.bind(that),\n                selectable: \"multiple\"\n            }));\n\n            var itemTemplate = this.options.itemTemplate || this.options.template;\n            var template = listOptions.itemTemplate || itemTemplate || listOptions.template;\n\n            if (!template) {\n                template = data => encode(kendo.getter(listOptions.dataTextField)(data));\n            }\n\n            listOptions.template = template;\n\n            return listOptions;\n        },\n\n        _setListValue: function() {\n            List.fn._setListValue.call(this, this._initialValues.slice(0));\n        },\n\n        _listChange: function(e) {\n            var data = this.dataSource.flatView();\n            var optionsMap = this._optionsMap;\n            var valueGetter = this._value;\n\n            if (this._state === REBIND) {\n                this._state = \"\";\n            }\n\n            for (var i = 0; i < e.added.length; i++) {\n                if (optionsMap[valueGetter(e.added[i].dataItem)] === undefined$1) {\n                    this._render(data); //render select element <option> tags if the item does not persist in the current data view\n                    break;\n                }\n            }\n\n            this._selectValue(e.added, e.removed);\n        },\n\n        _selectedItemChange: function(e) {\n            var items = e.items;\n            var context;\n            var idx;\n\n            for (idx = 0; idx < items.length; idx++) {\n                context = items[idx];\n                this.tagList.children(CHIP).eq(context.index).children(\"span\").first().html(this.tagTextTemplate(context.item));\n            }\n        },\n\n        _wrapperMousedown: function(e) {\n            var that = this;\n            var notInput = e.target.nodeName.toLowerCase() !== \"input\";\n            var target = $(e.target);\n            var closeButton = target.closest(\".k-input-button, .k-chip\").children(\"[class*='-i-caret-alt-down']\")[0];\n            var removeButton = target.closest(\"[class*='-i-x']\")[0];\n\n            if (notInput && !(removeButton && kendo.support.mobileOS) && e.cancelable) {\n                e.preventDefault();\n            }\n\n            if (!removeButton) {\n                if (closeButton && that.popup.visible()) {\n                    that.toggle(false);\n                } else {\n                    if (that.input[0] !== activeElement() && notInput) {\n                        that.input.trigger(\"focus\");\n                    }\n\n                    if (that.options.minLength === 1 && !that.popup.visible()) {\n                        that.open();\n                    }\n                }\n            }\n\n        },\n\n        _inputFocus: function() {\n            this._placeholder(false, true);\n            this.wrapper.addClass(FOCUSEDCLASS);\n        },\n\n        _inputFocusout: function(e) {\n            var that = this;\n\n            if (that.filterInput && e.relatedTarget === that.filterInput[0]) {\n                return;\n            }\n\n            clearTimeout(that._typingTimeout);\n\n            that.wrapper.removeClass(FOCUSEDCLASS);\n\n            that._placeholder(!that.listView.selectedDataItems()[0], true);\n            that.close();\n\n            if (that._state === FILTER) {\n                that._state = ACCEPT;\n                that.listView.skipUpdate(true);\n            }\n\n            if (that.listView.bound() && that.listView.isFiltered()) {\n                that.persistTagList = true;\n                that._clearFilter();\n            }\n\n            that.element.trigger(\"blur\");\n        },\n\n        _removeTag: function(tag, shouldTrigger) {\n            var that = this;\n            var state = that._state;\n            var position = tag.index();\n            var listView = that.listView;\n            var value = listView.value()[position];\n            var dataItem = that.listView.selectedDataItems()[position];\n            var customIndex = that._customOptions[value];\n            var listViewChildren = listView.element[0].children;\n            var option;\n            var listViewChild;\n\n            if (that.trigger(DESELECT, { dataItem: dataItem, item: tag })) {\n                that._close();\n                return;\n            }\n\n            if (customIndex === undefined$1 && (state === ACCEPT || state === FILTER)) {\n                customIndex = that._optionsMap[value];\n            }\n\n            var done = function() {\n                that.currentTag(null);\n                if (shouldTrigger) {\n                    that._change();\n                }\n\n                that._refreshTagListAria();\n                that._close();\n            };\n\n            if (customIndex === undefined$1 && listView.select().length) {\n                that.persistTagList = false;\n                listView.select(listView.select()[position]).done(done);\n            } else {\n                option = that.element[0].children[customIndex];\n                if (option) {\n                    option.selected = false;\n                }\n\n                listView.removeAt(position);\n\n                if (listView._removedAddedIndexes) {\n                    listView._removedAddedIndexes.splice(position, 1);\n                }\n\n                listViewChild = listViewChildren[customIndex];\n                if (listViewChild) {\n                    listViewChildren[customIndex].classList.remove(\"k-selected\");\n                }\n                if (that.options.tagMode !== \"single\") {\n                    tag.remove();\n                } else {\n                    that._updateTagListHTML();\n                }\n                done();\n            }\n        },\n\n        _tagListClick: function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var target = $(e.currentTarget);\n\n            if (target.is(\"[class*='-i-x-circle']\")) {\n                this._removeTag(target.closest(CHIP), true);\n            }\n        },\n\n        _clearValue: function() {\n            var that = this;\n\n            if (that.options.tagMode === \"single\") {\n                that._clearSingleTagValue();\n            } else {\n                that.tagList.children(CHIP).each(function(index, tag) {\n                    that._removeTag($(tag), false);\n                });\n            }\n\n            that.input.val(\"\");\n            that._search(true);\n            that._change();\n            that.focus();\n            that._hideClear();\n\n            if (that._state === FILTER) {\n                that._state = ACCEPT;\n            }\n        },\n\n        _clearSingleTagValue: function() {\n            var that = this;\n            var items = that.dataItems();\n            var tags = that.tagList.children(CHIP);\n            var persistTagList = that.persistTagList;\n\n            for (var i = 0; i < items.length; i += 1) {\n                if (that.trigger(DESELECT, { dataItem: items[i], item: tags.first() })) {\n                    that._close();\n                    return;\n                }\n            }\n\n            if (persistTagList) {\n                that.persistTagList = false;\n            }\n\n            that.listView.value([]);\n            that.persistTagList = persistTagList;\n        },\n\n        _focusHandler: function() {\n            var input = this.input;\n            var active = activeElement();\n            var isActive = input[0] === active;\n\n            if (!isActive) {\n                this.input.trigger(\"focus\");\n            }\n        },\n\n        _editable: function(options) {\n            var that = this,\n                disable = options.disable,\n                readonly = options.readonly,\n                wrapper = that.wrapper.off(ns),\n                tagList = that.tagList.off(ns),\n                input = that.input.off(ns);\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .removeClass(NOCLICKCLASS)\n                    .on(HOVEREVENTS, that._toggleHover)\n                    .on(\"mousedown\" + ns + \" touchend\" + ns, that._wrapperMousedown.bind(that))\n                    .on(CLICK, that._focusHandler.bind(that));\n\n                that.input.on(KEYDOWN, that._keydown.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"focus\" + ns, that._inputFocus.bind(that))\n                    .on(\"focusout\" + ns, that._inputFocusout.bind(that));\n\n                that._clear.on(CLICK + \" touchend\" + ns, that._clearValue.bind(that));\n\n                input.prop(DISABLED, false)\n                     .prop(READONLY, false)\n                     .attr(ARIA_DISABLED, false)\n                     .attr(ARIA_READONLY, false);\n\n                that.element.prop(DISABLED, false);\n\n                tagList\n                    .on(MOUSEENTER, CHIP, function() { $(this).addClass(HOVERCLASS); })\n                    .on(MOUSELEAVE, CHIP, function() { $(this).removeClass(HOVERCLASS); })\n                    .on(CLICK + \" touchend\" + ns, \".k-chip .k-icon,.k-chip .k-svg-icon\", that._tagListClick.bind(that));\n            } else {\n\n                wrapper.toggleClass(STATEDISABLED, disable)\n                       .toggleClass(NOCLICKCLASS, readonly);\n\n                input.attr(DISABLED, disable)\n                     .attr(READONLY, readonly)\n                     .attr(ARIA_DISABLED, disable)\n                     .attr(ARIA_READONLY, readonly);\n\n                that.element.prop(DISABLED, disable);\n            }\n        },\n\n        _close: function() {\n            var that = this;\n            if (that.options.autoClose) {\n                that.close();\n            } else {\n                that.popup.position();\n            }\n        },\n\n        _filterSource: function(filter, force) {\n            if (!force) {\n                force = this._retrieveData;\n            }\n            this._retrieveData = false;\n            List.fn._filterSource.call(this, filter, force);\n        },\n\n        close: function() {\n            this._activeItem = null;\n            this.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n\n            this.popup.close();\n        },\n\n        open: function() {\n            var that = this,\n                filterValue = that.input.val().toLowerCase(),\n                listViewFilter = that.listView.dataSource.filter(),\n                listViewFilterValue = \"\";\n\n            if (listViewFilter && listViewFilter.filters.length > 0) {\n                listViewFilterValue = (listViewFilter.filters[0].value || \"\").toString().toLowerCase();\n            }\n\n            if (that._request) {\n                that._retrieveData = false;\n            }\n\n            if (that._retrieveData || !that.listView.bound() || (that._state === ACCEPT && filterValue !== listViewFilterValue)) {\n                that._open = true;\n                that._state = REBIND;\n\n                that.listView.skipUpdate(true);\n\n                that.persistTagList = that._initialOpen && !that.listView.bound() ? false : true;\n                that._filterSource();\n                that._focusItem();\n            } else if (that._allowOpening()) {\n\n                //selects values in autoBind false and non virtual scenario on initial load\n                if (that._initialOpen && !that.options.autoBind && !that.options.virtual && that.options.value && !$.isPlainObject(that.options.value[0])) {\n                    that.value(that.value() || that._initialValues);\n                }\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                that.popup._hovered = true;\n                that._initialOpen = false;\n                that.popup.open({ altTarget: that.wrapper.add(that.element).add(that.input) });\n                that._focusItem();\n            }\n        },\n\n        toggle: function(toggle) {\n            toggle = toggle !== undefined$1 ? toggle : !this.popup.visible();\n\n            this[toggle ? OPEN : CLOSE]();\n        },\n\n        refresh: function() {\n            this.listView.refresh();\n        },\n\n        _floatCheck: function() {\n            if (this.listView) {\n                var hasValue = (this.value() && this.value().length);\n                return !hasValue && !this.popup.visible();\n            }\n\n            return true;\n        },\n\n        _listBound: function() {\n            var that = this;\n            var data = that.dataSource.flatView();\n\n            that._render(data);\n            that._renderFooter();\n            that._renderNoData();\n            that._toggleNoData(!data.length);\n            that._resizePopup();\n\n            if (that._open) {\n                that._open = false;\n                that.toggle(that._allowOpening());\n            }\n\n            that.popup.position();\n            that._updateItemFocus();\n\n            if (that._touchScroller) {\n                that._touchScroller.reset();\n            }\n\n            that._hideBusy();\n\n            that.trigger(\"dataBound\");\n        },\n\n        _updateItemFocus: function() {\n            var that = this,\n                data = that.dataSource.flatView(),\n                skip = that.listView.skip(),\n                isFirstPage = skip === undefined$1 || skip === 0;\n\n            if (data.length && isFirstPage) {\n                if (!that.options.highlightFirst) {\n                    that.listView.focus(-1);\n                } else {\n                    that.listView.focusFirst();\n                }\n            }\n        },\n\n        _inputValue: function() {\n            var that = this;\n            var inputValue = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput.val() : that.input.val();\n\n            if (that.options.placeholder === inputValue) {\n                inputValue = \"\";\n            }\n            return inputValue;\n        },\n\n        value: function(value) {\n            var that = this;\n            var listView = that.listView;\n            var oldValue = listView.value().slice();\n            var maxSelectedItems = that.options.maxSelectedItems;\n            var clearFilters = listView.bound() && listView.isFiltered();\n\n            if (value === undefined$1) {\n                return oldValue;\n            }\n\n            that.persistTagList = false;\n            that.requireValueMapper(that.options, value);\n\n            value = that._normalizeValues(value);\n\n            if (maxSelectedItems !== null && value.length > maxSelectedItems) {\n                value = value.slice(0, maxSelectedItems);\n            }\n\n            if (clearFilters) {\n                that._clearFilter();\n            }\n\n            listView.value(value);\n            that._old = that._valueBeforeCascade = value.slice(); //get a new array reference\n\n            if (!clearFilters) {\n                that._fetchData();\n            }\n\n            that._toggleCloseVisibility();\n        },\n\n        _preselect: function(data, value) {\n            var that = this;\n\n            if (!isArray(data) && !(data instanceof kendo.data.ObservableArray)) {\n                data = [data];\n            }\n\n            if ($.isPlainObject(data[0]) || data[0] instanceof kendo.data.ObservableObject || !that.options.dataValueField) {\n                that.dataSource.data(data);\n                that.value(value || that._initialValues);\n                that._retrieveData = true;\n            }\n        },\n\n        _setOption: function(value, selected) {\n            var option = this.element[0].children[this._optionsMap[value]];\n\n            if (option) {\n                option.selected = selected;\n            }\n        },\n\n        _fetchData: function() {\n            var that = this;\n            var hasItems = !!that.dataSource.view().length;\n            var isEmptyArray = that.listView.value().length === 0;\n\n            if (isEmptyArray || that._request) {\n                return;\n            }\n\n            if (that._retrieveData || (!that._fetch && !hasItems)) {\n                that._fetch = true;\n                that._retrieveData = false;\n                that.dataSource.read().done(function() {\n                    that._fetch = false;\n                });\n            }\n        },\n\n        _isBound: function() {\n            return this.listView.bound() && !this._retrieveData;\n        },\n\n        _dataSource: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                dataSource = options.dataSource || {};\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            dataSource.select = element;\n            dataSource.fields = [{ field: options.dataTextField },\n                                 { field: options.dataValueField }];\n\n            if (that.dataSource && that._refreshHandler) {\n                that._unbindDataSource();\n            } else {\n                that._progressHandler = that._showBusy;\n                that._endRequestHandler = that._hideBusy;\n                that._errorHandler = function() {\n                    that._hideBusy();\n                };\n            }\n\n            that.dataSource = kendo.data.DataSource.create(dataSource)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(\"requestEnd\", that._endRequestHandler)\n                                   .bind(\"error\", that._errorHandler);\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(that._initialValues);\n                        that._placeholder();\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _initValue: function() {\n            var value = this.options.value || this.element.val();\n\n            this._old = this._initialValues = this._normalizeValues(value);\n        },\n\n        _normalizeValues: function(value) {\n            var that = this;\n\n            if (value === null) {\n                value = [];\n            } else if (value && $.isPlainObject(value)) {\n                value = [that._value(value)];\n            } else if (value && $.isPlainObject(value[0])) {\n                value = $.map(value, function(dataItem) { return that._value(dataItem); });\n            } else if (!isArray(value) && !(value instanceof ObservableArray)) {\n                value = [value];\n            } else if (isArray(value)) {\n                value = value.slice();\n            }\n\n            return value;\n        },\n\n        _change: function() {\n            var that = this,\n                value = that.value();\n\n            if (!compare(value, that._old)) {\n                that._old = value.slice();\n\n                that.trigger(CHANGE);\n\n                // trigger the DOM change event so any subscriber gets notified\n                that.element.trigger(CHANGE);\n            }\n            that.popup.position();\n\n            that._toggleCloseVisibility();\n        },\n\n        _click: function(e) {\n            var that = this;\n            var item = e.item;\n\n            e.preventDefault();\n\n            that._select(item).done(function() {\n                that._activeItem = item;\n                that._change();\n                that._close();\n            });\n        },\n\n        _getActiveItem: function() {\n            return this._activeItem || $(this.listView.items()[this._getSelectedIndices().length - 1]) || this.listView.focus();\n        },\n\n        _getSelectedIndices: function() {\n            return this.listView._selectedIndices || this.listView._selectedIndexes;\n        },\n\n        _keydown: function(e) {\n            var that = this;\n            var key = e.keyCode;\n            var tag = that._currentTag;\n            var listView = that.listView;\n            var hasValue = that.input.val();\n            var isRtl = kendo.support.isRtl(that.wrapper);\n            var visible = that.popup.visible();\n            var dir = 0;\n            var activeItemIdx;\n            var handled = false;\n\n            if (key !== keys.ENTER) {\n                this._multipleSelection = false;\n            }\n\n            if (key === keys.DOWN) {\n                e.preventDefault();\n\n                if (!visible) {\n                    that.open();\n\n                    if (!listView.focus()) {\n                        listView.focusFirst();\n                    }\n                    e.stopPropagation();\n                    return;\n                }\n\n                if (listView.focus()) {\n                    if (!that._activeItem && e.shiftKey) {\n                        that._activeItem = listView.focus();\n                        dir = -1;\n                    }\n                    activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n\n                    listView.focusNext();\n                    if (!listView.focus()) {\n                        listView.focusLast();\n                    } else {\n                        if (e.shiftKey && !that.options.virtual) {\n                            this._multipleSelection = true;\n                            that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                        }\n                    }\n                } else {\n                    listView.focusFirst();\n                }\n                handled = true;\n\n            } else if (key === keys.UP) {\n                if (visible) {\n                    if (!that._activeItem && e.shiftKey) {\n                        that._activeItem = listView.focus();\n                        dir = 1;\n                    }\n                    activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n                    listView.focusPrev();\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.shiftKey && !that.options.virtual) {\n                            this._multipleSelection = true;\n                            that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                        }\n                    }\n                }\n                handled = true;\n                e.preventDefault();\n            } else if ((key === keys.LEFT && !isRtl) || (key === keys.RIGHT && isRtl)) {\n                if (!hasValue) {\n                    tag = tag ? tag.prev(CHIP) : that.tagList.children(CHIP).last();\n                    if (tag[0]) {\n                        that.currentTag(tag);\n                    }\n                }\n                handled = true;\n            } else if ((key === keys.RIGHT && !isRtl) || (key === keys.LEFT && isRtl)) {\n                if (!hasValue && tag) {\n                    tag = tag.next(CHIP);\n                    that.currentTag(tag[0] ? tag : null);\n                }\n                handled = true;\n            } else if (e.ctrlKey && !e.altKey && key === keys.A && visible && !that.options.virtual) {\n                this._multipleSelection = true;\n                if (this._getSelectedIndices().length === listView.items().length) {\n                    that._activeItem = null;\n                }\n\n                if (listView.items().length) {\n                    that._selectRange(0, listView.items().length - 1);\n                }\n                handled = true;\n            } else if (key === keys.ENTER && visible) {\n                if (!listView.focus()) {\n                    e.stopPropagation();\n                    return;\n                }\n\n                e.preventDefault();\n\n                if (this._multipleSelection) {\n                    this._multipleSelection = false;\n                     if (listView.focus().hasClass(SELECTEDCLASS)) {\n                        that._close();\n                        e.stopPropagation();\n                        return;\n                    }\n                }\n\n                that._select(listView.focus()).done(function() {\n                    that._change();\n                    that._close();\n                });\n                handled = true;\n            } else if (key === keys.SPACEBAR && e.ctrlKey && visible) {\n                if (that._activeItem && listView.focus() && listView.focus()[0] === that._activeItem[0]) {\n                    that._activeItem = null;\n                }\n                if (!$(listView.focus()).hasClass(SELECTEDCLASS)) {\n                    that._activeItem = listView.focus();\n                }\n                that._select(listView.focus()).done(function() {\n                    that._change();\n                });\n                handled = true;\n                e.preventDefault();\n            } else if (key === keys.SPACEBAR && e.shiftKey && visible && !that.options.virtual) {\n                var activeIndex = listView.getElementIndex(that._getActiveItem());\n                var currentIndex = listView.getElementIndex(listView.focus());\n\n                if (activeIndex !== undefined$1 && currentIndex !== undefined$1) {\n                    that._selectRange(activeIndex, currentIndex);\n                }\n                handled = true;\n                e.preventDefault();\n            } else if (key === keys.ESC) {\n                if (visible) {\n                    e.preventDefault();\n                } else {\n                    that.tagList.children(CHIP).each(function(index, tag) {\n                        that._removeTag($(tag), false);\n                    });\n                    that._change();\n                }\n\n                that.close();\n                handled = true;\n            } else if (key === keys.HOME) {\n                if (visible) {\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                            that._selectRange(listView.getElementIndex(listView.focus()[0]), 0);\n                        }\n                        listView.focusFirst();\n                    }\n                } else if (!hasValue) {\n                    tag = that.tagList.children(CHIP).first()[0];\n\n                    if (tag) {\n                        that.currentTag($(tag));\n                    }\n                }\n                handled = true;\n            } else if (key === keys.END) {\n                if (visible) {\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                            that._selectRange(\n                                listView.getElementIndex(listView.focus()[0]),\n                                listView.element.children().length - 1\n                            );\n                        }\n                        listView.focusLast();\n                    }\n                } else if (!hasValue) {\n                    tag = that.tagList.children(CHIP).last()[0];\n\n                    if (tag) {\n                        that.currentTag($(tag));\n                    }\n                }\n                handled = true;\n            } else if ((key === keys.DELETE || key === keys.BACKSPACE) && !hasValue) {\n                that._state = ACCEPT;\n\n                if (that.options.tagMode === \"single\") {\n                    that._clearSingleTagValue();\n\n                    that._change();\n                    that._close();\n                    e.stopPropagation();\n                    return;\n                }\n\n                if (key === keys.BACKSPACE && !tag) {\n                    tag = that.tagList.children(CHIP).last();\n                }\n\n                if (tag && tag[0]) {\n                    that._removeTag(tag, true);\n                }\n                handled = true;\n            } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                e.preventDefault();\n\n                var direction = key === keys.PAGEDOWN ? 1 : -1;\n                listView.scrollWith(direction * listView.screenHeight());\n                handled = true;\n            } else {\n                clearTimeout(that._typingTimeout);\n                that._search();\n                handled = true;\n            }\n\n            if (handled) {\n                e.stopPropagation();\n            }\n        },\n\n        _placeholder: function(show, skipCaret) {\n            var that = this;\n            var input = that.input;\n            var active = activeElement();\n            var placeholder = that.options.placeholder;\n            var inputValue = input.val();\n            var isActive = input[0] === active;\n            var caretPos = inputValue.length;\n\n            if (!isActive || that.options.autoClose || inputValue === placeholder) {\n                caretPos = 0;\n                inputValue = \"\";\n            }\n\n            if (show === undefined$1) {\n                show = false;\n                if (input[0] !== active) {\n                    show = !that.listView.selectedDataItems()[0];\n                }\n            }\n\n            that._prev = inputValue;\n            input.toggleClass(\"k-readonly\", show).val(show ? placeholder : inputValue);\n\n            if (isActive && !skipCaret) {\n                kendo.caret(input[0], caretPos, caretPos);\n            }\n        },\n\n        _option: function(dataValue, dataText, selected) {\n            var option = \"<option\";\n\n            if (dataValue !== undefined$1) {\n                dataValue += \"\";\n\n                if (dataValue.indexOf('\"') !== -1) {\n                    dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                }\n\n                option += ' value=\"' + dataValue + '\"';\n            }\n\n            if (selected) {\n                option += ' selected';\n            }\n\n            option += \">\";\n\n            if (dataText !== undefined$1) {\n                option += kendo.htmlEncode(dataText);\n            }\n\n            return option += \"</option>\";\n        },\n\n        _render: function(data) {\n            var selectedItems = this.listView.selectedDataItems();\n            var values = this.listView.value();\n            var length = data.length;\n            var selectedIndex;\n            var options = \"\";\n            var dataItem;\n            var value;\n            var idx;\n\n            if (values.length !== selectedItems.length) {\n                selectedItems = this._buildSelectedItems(values);\n            }\n\n            var custom = {};\n            var optionsMap = {};\n\n            for (idx = 0; idx < length; idx++) {\n                dataItem = data[idx];\n                value = this._value(dataItem);\n\n                selectedIndex = this._selectedItemIndex(value, selectedItems);\n                if (selectedIndex !== -1) {\n                    selectedItems.splice(selectedIndex, 1);\n                }\n\n                optionsMap[value] = idx;\n                options += this._option(value, this._text(dataItem), selectedIndex !== -1);\n            }\n\n            if (selectedItems.length) {\n                for (idx = 0; idx < selectedItems.length; idx++) {\n                    dataItem = selectedItems[idx];\n\n                    value = this._value(dataItem);\n                    custom[value] = length;\n                    optionsMap[value] = length;\n\n                    length += 1;\n                    options += this._option(value, this._text(dataItem), true);\n                }\n            }\n\n            this._customOptions = custom;\n            this._optionsMap = optionsMap;\n\n            this.element.html(options);\n        },\n\n        _buildSelectedItems: function(values) {\n            var valueField = this.options.dataValueField;\n            var textField = this.options.dataTextField;\n            var result = [];\n            var item;\n\n            for (var idx = 0; idx < values.length; idx++) {\n                item = {};\n                item[valueField] = values[idx];\n                item[textField] = values[idx];\n\n                result.push(item);\n            }\n\n            return result;\n        },\n\n        _selectedItemIndex: function(value, selectedItems) {\n            var valueGetter = this._value;\n            var idx = 0;\n\n            for (; idx < selectedItems.length; idx++) {\n                if (value === valueGetter(selectedItems[idx])) {\n                    return idx;\n                }\n            }\n\n            return -1;\n        },\n\n        _search: function(noDelay) {\n            let that = this;\n\n            // noDelay may come as an even object, that is why an explicit === true check is needed.\n            if (noDelay === true) {\n                that._performSearch();\n                return;\n            }\n\n            clearTimeout(that._typingTimeout);\n\n            that._typingTimeout = setTimeout(function() {\n                that._performSearch();\n            }, that.options.delay);\n        },\n\n        _performSearch: function() {\n            var that = this,\n                value = that._inputValue();\n\n            if (that._prev !== value) {\n                that._prev = value;\n                that.search(value);\n                that._toggleCloseVisibility();\n            }\n        },\n\n        _toggleCloseVisibility: function() {\n            if (this.value().length || (this.input.val() && this.input.val() !== this.options.placeholder)) {\n                this._showClear();\n            } else {\n                this._hideClear();\n            }\n        },\n\n        _allowOpening: function() {\n            return this._allowSelection() && List.fn._allowOpening.call(this);\n        },\n\n        _allowSelection: function() {\n            var max = this.options.maxSelectedItems;\n            return max === null || max > this.listView.value().length;\n        },\n\n        updatePersistTagList: function(added, removed) {\n            if (this.persistTagList.added &&\n                this.persistTagList.added.length === removed.length &&\n                this.persistTagList.removed &&\n                this.persistTagList.removed.length === added.length) {\n                    this.persistTagList = false;\n             } else {\n                 this.listView._removedAddedIndexes = this._old.slice();\n                 this.persistTagList = {\n                     added: added,\n                     removed: removed\n                 };\n             }\n        },\n\n        _selectValue: function(added, removed) {\n            var that = this;\n            var total = that.dataSource.total();\n            var tagList = that.tagList;\n            var getter = that._value;\n            var removedItem;\n            var addedItem;\n            var idx;\n\n            if (this.persistTagList) {\n                this.updatePersistTagList(added, removed);\n                that._refreshTagListAria();\n\n                return;\n            }\n\n            if (that.options.tagMode === \"multiple\") {\n                for (idx = removed.length - 1; idx > -1; idx--) {\n                    removedItem = removed[idx];\n\n                    if (tagList.children(CHIP).length) {\n                        tagList[0].removeChild(tagList[0].children[removedItem.position]);\n                        that._setOption(getter(removedItem.dataItem), false);\n                    }\n                }\n\n                for (idx = 0; idx < added.length; idx++) {\n                    addedItem = added[idx];\n\n                    that.tagList.append(that.tagTemplate(addedItem.dataItem));\n\n                    that._setOption(getter(addedItem.dataItem), true);\n                }\n\n                kendo.applyStylesFromKendoAttributes(that.tagList, [\"background-color\"]);\n            } else {\n                if (!that._maxTotal || that._maxTotal < total) {\n                    that._maxTotal = total;\n                }\n\n                this._updateTagListHTML();\n\n                for (idx = removed.length - 1; idx > -1; idx--) {\n                    that._setOption(getter(removed[idx].dataItem), false);\n                }\n\n                for (idx = 0; idx < added.length; idx++) {\n                    that._setOption(getter(added[idx].dataItem), true);\n                }\n            }\n\n            that._refreshTagListAria();\n            that._refreshFloatingLabel();\n\n            that._placeholder();\n        },\n\n        _refreshTagListAria: function() {\n            var that = this;\n            html.renderChipList(that.tagList, $.extend({ selectable: that.value().length === 0 ? \"none\" : \"multiple\" }, that.options));\n        },\n\n        _updateTagListHTML: function() {\n            var that = this;\n            var values = that.value();\n            var total = that.dataSource.total();\n            var tagList = that.tagList;\n\n            tagList.children(CHIP).each(function(index, tag) {\n                $(tag).remove();\n            });\n\n            if (values.length) {\n                that.tagList.append(that.tagTemplate({\n                    values: values,\n                    dataItems: that.dataItems(),\n                    maxTotal: that._maxTotal,\n                    currentTotal: total\n                }));\n\n                kendo.applyStylesFromKendoAttributes(that.tagList, [\"background-color\"]);\n            }\n\n            that._refreshTagListAria();\n        },\n\n        _select: function(candidate) {\n            var resolved = $.Deferred().resolve();\n\n            if (!candidate) {\n                return resolved;\n            }\n\n            var that = this;\n            var listView = that.listView;\n            var dataItem = listView.dataItemByIndex(listView.getElementIndex(candidate));\n            var isSelected = candidate.hasClass(\"k-selected\");\n\n            if (that._state === REBIND) {\n                that._state = \"\";\n            }\n\n            if (!that._allowSelection() && !isSelected) {\n                return resolved;\n            }\n\n            if (that.trigger(isSelected ? DESELECT : SELECT, { dataItem: dataItem, item: candidate })) {\n                that._close();\n                return resolved;\n            }\n\n            that.persistTagList = false;\n            return listView.select(candidate).done(function() {\n                that._placeholder();\n\n                if (that._state === FILTER) {\n                    that._state = ACCEPT;\n                    listView.skipUpdate(true);\n                }\n            });\n        },\n\n        _selectIndices: function(indices) {\n            let listView = this.listView;\n            let that = this;\n\n            listView.select(indices).done(function() {\n                indices.forEach(function(index) {\n                    var dataItem = listView.dataItemByIndex(index);\n                    var candidate = listView.element.children()[index];\n                    var isSelected = $(candidate).hasClass(\"k-selected\");\n\n                    that.trigger(isSelected ? SELECT : DESELECT, { dataItem: dataItem, item: $(candidate) });\n                });\n                that._change();\n            });\n        },\n\n        _selectRange: function(startIndex, endIndex) {\n            var that = this;\n            var maxSelectedItems = this.options.maxSelectedItems;\n            var indices = this._getSelectedIndices().slice();\n            var indicesToSelect = [];\n            var i;\n\n            if (indices.length - 1 === endIndex - startIndex) {\n                return that._selectIndices(indices);\n            }\n\n            if (startIndex < endIndex) {\n                for (i = startIndex; i <= endIndex; i++) {\n                    indicesToSelect.push(i);\n                }\n            } else {\n                for (i = startIndex; i >= endIndex; i--) {\n                    indicesToSelect.push(i);\n                }\n            }\n\n            if (maxSelectedItems !== null && indicesToSelect.length > maxSelectedItems) {\n                indicesToSelect = indicesToSelect.slice(0, maxSelectedItems);\n            }\n\n            for (i = 0; i < indicesToSelect.length; i++) {\n                var index = indicesToSelect[i];\n\n                if (this._getSelectedIndices().indexOf(index) == -1) {\n                    indices.push(index);\n                } else {\n                    indices.splice(indices.indexOf(index), 1);\n                }\n            }\n\n            if (!indices.length) {\n                return;\n            }\n\n            that.persistTagList = false;\n            return that._selectIndices(indices);\n        },\n\n        _input: function() {\n            var that = this;\n            var element = that.element;\n            var accessKey = element[0].accessKey;\n            var input = that._inputValuesContainer.children(\"input.k-input-inner\");\n\n            if (!input[0]) {\n                input = $('<input class=\"k-input-inner\" />').appendTo(that._inputValuesContainer);\n            }\n\n            element.removeAttr(\"accesskey\");\n            input.attr(\"data-validate\", \"false\");\n            input.attr(\"inputmode\", that.options.inputMode);\n\n            that._focused = that.input = input.attr({\n                \"autocomplete\": AUTOCOMPLETEVALUE,\n                \"title\": element[0].title\n            });\n\n            if (accessKey) {\n                that._focused.attr(\"accesskey\", accessKey);\n            }\n        },\n\n        _inputValuesContainer: function() {\n            var that = this,\n                inputValuesContainer = that.wrapper.children(\".k-input-values\");\n\n            if (!inputValuesContainer[0]) {\n                inputValuesContainer = $('<div class=\"k-input-values\"></div>').appendTo(that.wrapper);\n            }\n\n            that._inputValuesContainer = inputValuesContainer;\n        },\n\n        _tagList: function() {\n            var that = this,\n                options = that.options,\n                tagList = that._inputValuesContainer.children(\".k-chip-list\");\n\n            if (!tagList[0]) {\n                tagList = $(html.renderChipList('<div unselectable=\"on\" class=\"k-selection-multiple\" />', $.extend({ selectable: \"none\" }, options))).appendTo(that._inputValuesContainer);\n            }\n\n            that.tagList = tagList;\n        },\n\n        _tagTemplate: function() {\n            var that = this;\n            var options = that.options;\n            var tagTemplate = options.tagTemplate;\n            var hasDataSource = options.dataSource;\n            var isMultiple = options.tagMode === \"multiple\";\n            var singleTag = options.messages.singleTag;\n            var defaultTemplate;\n            var multipleTemplateFunc;\n            var singleTemplateFunc;\n\n            if (that.element[0].length && !hasDataSource) {\n                options.dataTextField = options.dataTextField || \"text\";\n                options.dataValueField = options.dataValueField || \"value\";\n            }\n\n            multipleTemplateFunc = data => encode(kendo.getter(options.dataTextField)(data));\n            singleTemplateFunc = ({ values }) => `${values.length} ${encode(singleTag)}`;\n\n            defaultTemplate = isMultiple ? multipleTemplateFunc : singleTemplateFunc;\n\n            that.tagTextTemplate = tagTemplate = tagTemplate ? kendo.template(tagTemplate) : defaultTemplate;\n\n            that.tagTemplate = function(data) {\n                return html.renderChip('<span unselectable=\"on\">' +\n                '</span>', $.extend({}, options, {\n                        fillMode: \"solid\",\n                        rounded: \"medium\",\n                        enabled: true,\n                        themeColor: \"base\",\n                        text: tagTemplate(data),\n                        attr: {\n                            unselectable: \"on\",\n                            \"aria-selected\": true,\n                            role: \"option\",\n                            \"aria-keyshortcuts\": isMultiple ? \"Enter Delete\" : \"Enter\"\n                        },\n                        removable: isMultiple,\n                        removableAttr: {\n                            unselectable: \"on\",\n                            \"aria-hidden\": true,\n                            \"aria-label\": that.options.messages.deleteTag,\n                            title: that.options.messages.deleteTag\n                        },\n                        icon: !isMultiple ? \"caret-alt-down\" : \"\",\n                        iconAttr: {\n                            unselectable: \"on\",\n                            \"aria-hidden\": true,\n                            \"aria-label\": 'open'\n                        }\n                    })\n                );\n            };\n        },\n\n        _popup: function() {\n            List.fn._popup.call(this);\n            this.popup.element.addClass(\"k-multiselect-popup\");\n        },\n\n        _clearButton: function() {\n            List.fn._clearButton.call(this);\n\n            if (this.options.clearButton) {\n                this._clear.insertAfter(this._inputValuesContainer);\n            }\n        },\n\n        _arrowButton: function() {\n            var arrowTitle = encode(this.options.messages.downArrow),\n                arrow = $(html.renderButton('<button type=\"button\" aria-label=\"' + arrowTitle + '\" class=\"k-input-button\"></button>', $.extend({}, this.options, {\n                    icon: \"caret-alt-down\",\n                    rounded: null\n                })));\n\n            if (this._arrow) {\n                this._arrow.remove();\n                this._arrow = null;\n            }\n\n            if (this.options.downArrow) {\n                this._arrow = arrow.attr({\n                    \"tabIndex\": -1\n                });\n\n                this._arrow.appendTo(this.wrapper);\n            }\n        },\n\n        _textContainer: function() {\n            var computedStyles = kendo.getComputedStyles(this.input[0], styles);\n\n            computedStyles.position = \"absolute\";\n            computedStyles.visibility = \"hidden\";\n            computedStyles.top = -3333;\n            computedStyles.left = -3333;\n\n            this._span = $(\"<span/>\").css(computedStyles).appendTo(this.wrapper);\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper = element.parent(\"span.k-multiselect\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap('<span class=\"k-multiselect k-input\" unselectable=\"on\" />').parent();\n                wrapper[0].style.cssText = element[0].style.cssText;\n            }\n\n            that.wrapper = wrapper\n                            .addClass(element[0].className)\n                            .removeClass('input-validation-error').css(\"display\", \"\");\n        },\n\n        _closeHandler: function(e) {\n            if (this.trigger(CLOSE)) {\n                e.preventDefault();\n            } else {\n                this.input.attr(ARIA_EXPANDED, false);\n                this.ul.attr(ARIA_HIDDEN, true);\n            }\n        },\n\n        _openHandler: function(e) {\n            this._adjustListWidth();\n\n            if (this.trigger(OPEN)) {\n                e.preventDefault();\n            } else {\n                this.input.attr(ARIA_EXPANDED, true);\n                this.ul.attr(ARIA_HIDDEN, false);\n            }\n        }\n    });\n\n    function compare(a, b) {\n        var length;\n\n        if ((a === null && b !== null) || (a !== null && b === null)) {\n            return false;\n        }\n\n        length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n\n        while (length--) {\n            if (a[length] !== b[length]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    ui.plugin(MultiSelect);\n\n    kendo.cssProperties.registerPrefix(\"MultiSelect\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"MultiSelect\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
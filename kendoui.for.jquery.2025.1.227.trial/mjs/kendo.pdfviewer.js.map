{"version":3,"sources":["raw-mjs/kendo.pdfviewer.js"],"names":["PdfViewerInteractionMode","DEFAULT_ZOOM_LEVEL","scrollToPage","PdfViewer","Scroller","currentPage","isLoaded","window","pdfjsLib","GlobalWorkerOptions","workerSrc","pdfjsWorker","console","error","$","kendo","extend","DPLProcessor","Class","init","options","viewer","that","this","read","upload","download","fetchDocument","deferred","Deferred","errorMessages","messages","ajax","type","url","dataType","success","data","stringify","resolve","JSON","parse","xhr","_triggerError","responseText","message","parseError","fetchPageData","number","page","document","pages","pageField","geometries","length","downloadFile","fileName","location","fromJSON","json","_clearPages","total","_renderPages","resize","activatePage","pdfviewer","dpl","processor","jQuery","pdfjs","lib","parseJSON","progress","ui","UploadHelper","_initUpload","uploadElement","extendUploadOptions","uploadOptions","select","_onSelect","bind","_onSuccess","_onError","complete","_onComplete","showFileList","multiple","validation","allowedExtensions","async","saveUrl","autoUpload","saveField","kendoUpload","getKendoUpload","pageContainer","e","response","isPlainObject","XMLHttpRequest","notSupported","fileToUpload","files","trigger","file","extension","toLowerCase","reader","FileReader","onload","target","result","loadParams","_isDPLProcessor","fromFile","onerror","readAsArrayBuffer","rawFile","noop","drawing","Group","Surface","geometryTypes","Path","MultiPath","Rect","Image","Text","Page","pageNumber","element","attr","_updatePageSize","width","height","ratio","pageElement","Math","min","size","destroy","render","BlankPage","_externalDropZoneId","_uploadHelper","_upload","find","dropZone","DPLPage","draw","group","surface","_drawGeometries","load","loaded","then","_initSurface","surfaceOptions","view","kGeometry","i","geometry","_drawPath","_drawRect","_drawImage","_drawText","append","rectGeo","point","transform","_getMatrix","fill","fillOptions","stroke","strokeOptions","imageRect","src","font","content","path","paths","subPath","segments","moveTo","apply","j","segment","points","lineTo","curveTo","closed","close","matrix","Object","create","Matrix","prototype","deleteAnnotation","widget","setHighlightTextColor","color","setHighlightColor","setFreeTextFontColor","setFreeTextColor","setFreeTextFontSize","fontSize","setAnnotationEditorMode","args","interactionMode","mode","setInteractionMode","resetAnnotationEditorMode","$$1","AnnotationEditorType","DISABLE","NONE","FREETEXT","HIGHLIGHT","AnnotationToolbar","constructor","pdfViewerCommon","annotationsToolbar","insertAfter","toolbar","ToolBar","fillMode","tools","name","command","icon","togglable","showText","parentMessages","highlight","freeText","onToolbarClick","viewerToolbar","TextSelection","toggle","unbind","remove","Command","OpenCommand","fn","call","exec","click","PageChangeCommand","current","targetPage","value","isNaN","_pageNum","numPages","Number","DownloadCommand","notFound","info","title","defaultFileName","ExportCommand","dialog","_saveDialog","_initDialog","_updateModel","pagesCount","open","viewModel","exportImage","exportSVG","dialogs","ExportAsDialog","EnableSelectionCommand","enable","EnablePanCommand","Pan","OpenSearchCommand","searchDialog","SearchDialog","pageContainerWrapper","position","top","offset","left","search","_open","next","_next","prev","_prev","_close","changeHandler","_change","searchModel","clearSearch","matches","matchIndex","_updateSearchModel","ev","text","matchCase","field","searchText","goToNextSearchMatch","goToPreviousSearchMatch","model","set","_closeDialog","ZoomCommand","scale","_calculateZoom","zoomLevel","zoomScale","_preventRenderEvent","_currentPage","getCurrentPageIndex","zoom","zoomLevelType","_triggerZoomEnd","preventZoom","viewerOptions","scaleValue","_allowResize","_autoFit","zoomIn","zoomRate","zoomOut","_autoZoomScale","parseFloat","toString","match","parseInt","replace","zoomMin","zoomMax","updateComboBox","_updateZoomComboBox","PrintCommand","setTimeout","printFile","AnnotationsCommand","encode","htmlEncode","Draggable","outerWidth","_outerWidth","EXTENSIONS","keys","ErrorDialog","actions","okText","_dialog","kendoDialog","getKendoDialog","center","fileFormats","description","exportAsDialog","png","svg","_initializeDialog","autoFocus","resizable","modal","preventScroll","maxWidth","template","labels","saveAsType","save","cancel","dialogMessages","kendoWindow","getKendoWindow","observable","dragHandle","iconClass","inputLabel","of","previous","_showSearchDialog","_hideSearchDialog","css","innerWidth","kendoStop","kendoAnimate","effects","direction","fade","duration","properties","hide","dialogElm","prepend","_draggable","filter","axis","dragstart","wnd","containment","startPosition","x","client","getOffset","_innerWidth","clientWidth","support","scrollbar","maxLeft","drag","indexOf","max","userEvents","stopPropagation","boundValue","matchCaseClick","onKeyup","key","keyCode","navigationFn","shiftKey","ENTER","preventDefault","ESC","onInput","AnnotationPopup","anchor","editor","popupOpenHandler","onPopupOpen","annotationPopupToolbarElement","guid","popup","Popup","html","popupToolbar","palette","onAnnotationPopupToolbarClick","initEditor","destroyPopup","flatColorPicker","_view","_hueSlider","_opacitySlider","anchorExists","getElementById","id","destroyEditor","editorPopup","HighlightAnnotationPopup","super","activate","initFlatColorPicker","FlatColorPicker","format","opacity","change","currentColor","FreeTextAnnotationPopup","initFontSizeForm","currentFontSize","propertiesToUpdate","fontSizeForm","Form","buttonsTemplate","formData","layout","grid","cols","items","label","colSpan","editorOptions","dataSource","sender","__meta__","category","depends","NS","PLUS","MINUS","ZERO","NUMPAD_ZERO","Widget","RENDER","ERROR","KEYDOWN","UPDATE","PAGE_CHANGE","ZOOMEND","ZOOMCOMMAND","CLICK","CHANGE","DISABLED","PROCESSORS","styles","PREDEFINED_ZOOM_VALUES","PDFViewer","deepExtend","_processMessages","_wrapper","_renderToolbar","_initProcessor","_renderPageContainer","_loadDPLDocument","_loadPdfJSDocument","notify","_showWatermarkOverlay","wrapper","events","pdfjsProcessing","loadOnDemand","dplProcessing","contextMenu","defaultPageSize","actualWidth","autoWidth","fitToWidth","fitToPage","exportAs","print","toggleSelection","togglePan","annotations","popupBlocked","pdf","defaultTools","overflow","menuButtons","attributes","separator","pager","component","componentOptions","navigatable","_isToolbarItem","spacer","zoomInOut","buttons","dataTextField","dataValueField","valuePrimitive","clearOnEscape","commandOn","selected","spacer2","exportAsTool","addClass","on","_keydown","_resizeHandler","onResize","plusShortcuts","NUMPAD_PLUS","minusShortcuts","NUMPAD_MINUS","zeroShortcuts","shouldExecute","ctrlKey","_blankPage","processingLib","includes","execute","_handlePageChangeEvent","event","_pageChangeFromScroll","index","_showPagerInputLabels","inputElements","children","eq","add","is","show","_resizePager","responsive","pagerWidth","visibleToolbarItems","Array","from","containerWidth","visibleToolsWidth","gap","temp","elementsToShrink","hidden","removeClass","input","processingOptions","_hasPagerTool","hasPager","tool","toolbarOptions","_processTools","pagerMessages","currentPagerOptions","toolbarElement","appendTo","_toolbarClick","update","_updateToolbar","flatMap","t","zoomLevels","percent","comboOptions","map","concat","contextMenuIndex","findIndex","splice","separatorIndex","pageOptions","toolbarEl","zoomCombo","toFocus","first","_getAllItems","isBlank","action","updatePager","pageChangeFromScroll","_updatePager","_updateOnBlank","_resetTabIndex","downloadButton","printButton","parent","pagerDataSource","DataSource","pageSize","setDataSource","_togglePagerDisabledClass","totalPages","hasClass","isPredefined","round","currentTarget","val","_initErrorDialog","_errorDialog","dialogInstance","pagesData","viewerPage","pageData","push","pdfScroller","enablePanEventsTracking","_attachContainerEvents","_getVisiblePagesCount","_renderBlankPage","_removeBlankPage","_resize","clearTimeout","_resizePages","pagesElements","getPagesElements","forEach","pageWidth","_pageIndex","currentRatio","_scroll","pageToLoadNum","containerHeight","pageNum","pageIndex","_preventScroll","_scrollingStarted","nextPageIndex","_loadVisiblePages","preventComboBoxChange","commandOptions","done","parentNode","ArrayBuffer","loadOnDemandPageSize","fileDescriptor","pagesLoad","pdfDoc","pdfPages","pageRendered","pdfPage","_setPageNumberAttributes","zoomStart","zoomEnd","printEnd","scroll","isPageChanged","annotationEditorToolBarShow","onAnnotationEditorToolBarShow","_enablePanning","documentScroller","_disablePanning","disablePanEventsTracking","each","el","loadPage","Promise","_scrollToActivatedPage","activatePageNumber","loadedPagesHeight","updatedVisiblePagesCount","clientHeight","_visiblePagesCount","minVisiblePageNum","maxVisiblePageNum","_visiblePages","slice","_loadAllPages","promises","_updateDocument","loadFile","rootGroup","background","fromRect","saveAs","dataURI","proxyURL","forceProxy","proxyTarget","setOptions","unbindResize","off","empty","annotationEditorMode","annotationPopup","source","firstSelectedEditor","visible","_closing","plugin","kendo$1"],"mappings":"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","file":"kendo.pdfviewer.js","sourcesContent":["import './kendo.mobile.scroller.js';\nimport './kendo.toolbar.js';\nimport './kendo.pager.js';\nimport './kendo.combobox.js';\nimport './kendo.textbox.js';\nimport './kendo.core.js';\nimport './kendo.drawing.js';\nimport './kendo.upload.js';\nimport { P as PdfViewerInteractionMode, D as DEFAULT_ZOOM_LEVEL, s as scrollToPage, a as PdfViewer, S as Scroller, c as currentPage } from './kendo.pdfviewer-common.cmn.chunk.js';\nimport './kendo.dialog.js';\nimport './kendo.window.js';\nimport './kendo.binder.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.icons.js';\nimport './kendo.draganddrop.js';\nimport './kendo.pdfjs.loader.js';\nimport './kendo.form.js';\nimport './kendo.colorpicker.js';\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        Class = kendo.Class;\n\n    var DPLProcessor = Class.extend({\n        init: function(options, viewer) {\n            var that = this;\n\n            that.options = options;\n            that.read = options.read;\n            that.upload = options.upload;\n            that.download = options.download;\n\n            that.viewer = viewer;\n        },\n        fetchDocument: function() {\n            var that = this,\n                deferred = $.Deferred(),\n                errorMessages = that.viewer.options.messages.errorMessages;\n\n            if (!that.read) {\n                return deferred.resolve();\n            }\n\n            $.ajax({\n                type: that.read.type,\n                url: that.read.url,\n                dataType: that.read.dataType,\n                success: function(data) {\n                    if (typeof data != \"string\") {\n                        data = kendo.stringify(data);\n                    }\n                    deferred.resolve(JSON.parse(data));\n                },\n                error: function(xhr) {\n                    that.viewer._triggerError({\n                        error: xhr.responseText,\n                        message: errorMessages.parseError\n                    });\n                }\n            });\n\n            return deferred;\n        },\n        fetchPageData: function(number) {\n            var that = this;\n            var deferred = $.Deferred();\n            var page = that.viewer.document.pages[number - 1];\n            var data = {};\n            data[that.read.pageField] = number;\n\n            if (!page.geometries.length) {\n                $.ajax({\n                    type: that.read.type,\n                    url: that.read.url,\n                    data: data,\n                    success: function(data) {\n                        deferred.resolve(JSON.parse(data));\n                    },\n                    error: function(xhr) {\n                        that.viewer._triggerError({\n                            error: xhr.responseText,\n                            message: that.viewer.options.messages.errorMessages.parseError\n                        });\n                    }\n                });\n            } else {\n                deferred.resolve(page);\n            }\n\n            return deferred;\n        },\n        downloadFile: function(fileName) {\n            window.location = this.download.url + \"?file=\" + fileName;\n        },\n\n        fromJSON: function(json)\n        {\n            var viewer = this.viewer;\n            viewer._clearPages();\n\n            viewer.document = json;\n            viewer.document.total = viewer.document.pages.length;\n\n            viewer._renderPages();\n            viewer.resize(true);\n\n            viewer.activatePage(1);\n        }\n    });\n\n    extend(kendo, {\n        pdfviewer: {\n            dpl: {\n                processor: DPLProcessor\n            }\n        }\n    });\n})(window.kendo.jQuery);\n\n/* eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\nfunction isLoaded() {\n    if (!window.pdfjsLib) {\n        console?.error(`PDF.JS library is required. Make sure that it is properly loaded <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.6.82/pdf.mjs\" type=\"module\"></script>`);\n        return false;\n    }\n\n    if (!window.pdfjsLib?.GlobalWorkerOptions?.workerSrc && !window.pdfjsWorker) {\n        console?.error(`The pdf.worker.mjs script is not loaded. The PDF.JS library will not work correctly.\n    Either load the script:\n    \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.6.82/pdf.worker.mjs\" type=\"module\"></script>\n    \n    Or set it to the GlobalWorkerOptions.workerSrc property:\n    \n    <script type=\"module\">\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.6.82/pdf.worker.mjs';\n    </script>`);\n    return false;\n    }\n\n    return true;\n}\n\nkendo.pdfviewer.pdfjs = { lib: window.pdfjsLib };\n\n(function($, undefined$1) {\n    var Class = kendo.Class,\n        extend = $.extend,\n        parseJSON = JSON.parse,\n        progress = kendo.ui.progress,\n        Class = kendo.Class,\n        OPEN = \"open\";\n\n    var UploadHelper = Class.extend({\n        init: function(viewer) {\n            this.viewer = viewer;\n            this.errorMessages = this.viewer.options.messages.errorMessages;\n            this.upload = this.viewer.processor && this.viewer.processor.upload;\n        },\n        _initUpload: function(uploadElement, extendUploadOptions) {\n            var uploadOptions = extend({\n                select: this._onSelect.bind(this),\n                success: this._onSuccess.bind(this),\n                error: this._onError.bind(this),\n                complete: this._onComplete.bind(this),\n                showFileList: false,\n                multiple: false,\n                validation: {\n                    allowedExtensions: [\".pdf\"]\n                }\n            }, extendUploadOptions || {});\n\n            if (this.upload) {\n                extend(uploadOptions, {\n                    async: {\n                        saveUrl: this.upload.url,\n                        autoUpload: true,\n                        saveField: this.upload.saveField\n                    }\n                });\n            }\n\n            var upload = (uploadElement || $('<input name=\"files\" accept=\".pdf\" type=\"file\" />')).kendoUpload(uploadOptions).getKendoUpload();\n\n            return upload;\n        },\n        _onComplete: function() {\n            progress(this.viewer.pageContainer, false);\n        },\n        _onSuccess: function(e) {\n            var json = parseJSON(e.response);\n\n            if ($.isPlainObject(json)) {\n                this.viewer.processor.fromJSON(json);\n            }\n            else {\n                this.viewer._triggerError({\n                    error: json,\n                    message: this.errorMessages.parseError\n                });\n            }\n        },\n        _onError: function(e) {\n            this.viewer._triggerError({\n                error: e.XMLHttpRequest.responseText,\n                message: this.errorMessages.notSupported\n            });\n        },\n        _onSelect: function(e) {\n            var that = this;\n            var fileToUpload = e.files[0];\n\n            progress(that.viewer.pageContainer, true);\n\n            if (that.viewer.trigger(OPEN, { file: fileToUpload }) || that.upload) {\n                return;\n            } else if (fileToUpload.extension.toLowerCase() !== \".pdf\") {\n                that.viewer._triggerError({\n                    error: fileToUpload,\n                    message: that.errorMessages.notSupported\n                });\n                return;\n            }\n\n            var reader = new FileReader();\n            reader.onload = function(e) {\n                var document = e.target.result;\n                const loadParams = that.viewer._isDPLProcessor() ? document : { data: document };\n                that.viewer.fromFile(loadParams);\n            };\n            reader.onerror = function() {\n                that.viewer._triggerError({\n                    error: fileToUpload,\n                    message: that.errorMessages.parseError\n                });\n            };\n\n            reader.readAsArrayBuffer(fileToUpload.rawFile);\n        }\n    });\n\n    extend(kendo.pdfviewer, {\n        UploadHelper: UploadHelper\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var extend = $.extend,\n        noop = $.noop,\n        drawing = kendo.drawing,\n        Group = drawing.Group,\n        Surface = drawing.Surface,\n        RENDER = \"render\",\n        Class = kendo.Class,\n        UploadHelper = kendo.pdfviewer.UploadHelper,\n\n        DEFAULT_DPR = 2;\n\n    var geometryTypes = {\n        Path: \"path\",\n        MultiPath: \"multipath\",\n        Rect: \"rect\",\n        Image: \"image\",\n        Text: \"text\"\n    };\n\n    var BLANK_PAGE_TEMPLATE = (dropzoneId) => `<div class=\"k-page k-blank-page\">\n        <div id=\"${dropzoneId}\" class=\"k-external-dropzone\">\n            <div class=\"k-dropzone-inner\">\n                <span class=\"k-dropzone-icon k-icon k-svg-icon k-icon-xxxl k-svg-i-upload\">\n                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                        <path d=\"M32 384v96h448v-96H32zm192-64h64V192h96L256 32 128 192h96v128z\"></path>\n                    </svg>\n                </span>\n                <span class=\"k-dropzone-hint\">Drag and drop files here to upload</span>\n            </div>\n        </div>\n        <input name=\"files\" accept=\".pdf\" type=\"file\" ref-pdfviewer-blank-page-upload>\n    </div>`;\n\n    var Page = Class.extend({\n        init: function(options, viewer) {\n            this.viewer = viewer;\n            this.processor = options.processor;\n            this.options = options;\n            this.pageNumber = options.number;\n\n            this.element = $(\"<div class='k-page' />\");\n            this.element.attr(kendo.attr(\"number\"), this.pageNumber);\n\n            this._updatePageSize(options);\n            this.width = options.width;\n            this.height = options.height;\n        },\n        resize: function(ratio) {\n            var pageElement = this.element;\n\n            this._updatePageSize({\n                width: Math.min(pageElement.width() * ratio, this.width),\n                height: Math.min(pageElement.height() * ratio, this.height)\n            });\n        },\n        _updatePageSize: function(size) {\n            this.element\n                    .width(size.width)\n                    .height(size.height);\n        },\n        destroy: function() {\n            kendo.destroy(this.element);\n        },\n        render: noop\n    });\n\n    var BlankPage = Page.extend({\n        init: function(options, viewer) {\n            this.viewer = viewer;\n            this.options = options;\n            this._externalDropZoneId = `${viewer.element.attr(\"id\")}-external-dropzone`;\n            this.element = $(BLANK_PAGE_TEMPLATE(this._externalDropZoneId));\n            this._uploadHelper = new UploadHelper(viewer);\n        },\n        _initUpload: function() {\n            this._upload = this._uploadHelper._initUpload(this.element.find(\"input[ref-pdfviewer-blank-page-upload]\"), {\n                dropZone: `#${this._externalDropZoneId}`,\n                showFileList: false,\n                async: {\n                    autoUpload: false,\n                    saveUrl: \"save\"\n                }\n            });\n        },\n        resize: noop,\n        _updatePageSize: noop,\n        destroy: function() {\n            if (this._upload) {\n                this._upload.destroy();\n            }\n\n            kendo.destroy(this.element);\n        },\n        render: noop\n    });\n\n    var DPLPage = Page.extend({\n        draw: function() {\n            var that = this,\n                geometries = that.options.geometries;\n\n            that.group = new Group();\n            that.surface.draw(that.group);\n\n            that._drawGeometries(geometries);\n\n            that.viewer.trigger(RENDER, { page: this });\n            kendo.ui.progress(that.element, false);\n        },\n        load: function() {\n            var that = this;\n\n            if (that.loaded || !that.processor)\n            {\n                return;\n            }\n\n            that.processor.fetchPageData(that.pageNumber).then(function(data) {\n                that.options = data;\n                that._initSurface();\n                that.draw();\n            });\n\n            that.loaded = true;\n        },\n        _initSurface: function() {\n            var size = {\n                width: this.element.width(),\n                height: this.element.height()\n            };\n            var surfaceOptions = extend({ width: this.width, height: this.height }, this.viewer.options.view);\n            this.surface = new Surface(this.element, surfaceOptions);\n            this._updatePageSize(size);\n        },\n        _drawGeometries: function(geometries) {\n            var that = this,\n                kGeometry;\n\n            if (!geometries) {\n                return;\n            }\n\n            for (var i = 0; i <= geometries.length; i++) {\n                var geometry = geometries[i];\n\n                if (!geometry) {\n                    continue;\n                }\n\n                switch (geometry.type) {\n                    case geometryTypes.Path:\n                    case geometryTypes.MultiPath:\n                        kGeometry = that._drawPath(geometry);\n                        break;\n                    case geometryTypes.Rect:\n                        kGeometry = that._drawRect(geometry);\n                        break;\n                    case geometryTypes.Image:\n                        kGeometry = that._drawImage(geometry);\n                        break;\n                    case geometryTypes.Text:\n                        kGeometry = that._drawText(geometry);\n                        break;\n                    default:\n                        kGeometry = null;\n                        break;\n                }\n\n                if (kGeometry)\n                {\n                    that.group.append(kGeometry);\n                }\n            }\n        },\n        _drawRect: function(geometry)\n        {\n            var rectGeo = new kendo.geometry.Rect(geometry.point, geometry.size);\n\n            return new drawing.Rect(rectGeo, {\n                transform: this._getMatrix(geometry.transform),\n                fill: geometry.fillOptions,\n                stroke: geometry.strokeOptions\n            });\n        },\n\n        _drawImage: function(geometry)\n        {\n            var imageRect = new kendo.geometry.Rect(geometry.point, geometry.size);\n            return new drawing.Image(geometry.src, imageRect, {\n                transform: this._getMatrix(geometry.transform)\n            });\n        },\n\n        _drawText: function(geometry)\n        {\n            var options = {\n                transform: this._getMatrix(geometry.transform),\n                stroke: geometry.strokeOptions,\n                fill: geometry.fillOptions,\n                font: geometry.font\n            };\n            return new kendo.drawing.Text(geometry.content, geometry.point, options);\n        },\n\n        _drawPath: function(geometry)\n        {\n            var options = {\n                transform: this._getMatrix(geometry.transform),\n                stroke: geometry.strokeOptions,\n                fill: geometry.fillOptions\n            };\n            var path = new drawing.MultiPath(options);\n\n            for (var i = 0; i < geometry.paths.length; i++) {\n                var subPath = geometry.paths[i];\n\n                if (!subPath.segments)\n                {\n                    return;\n                }\n\n                path.moveTo.apply(path, subPath.point);\n\n                for (var j = 0; j < subPath.segments.length; j++) {\n                    var segment = subPath.segments[j];\n                    var drawAction = segment.points.length === 1 ? path.lineTo : path.curveTo;\n                    drawAction.apply(path, segment.points);\n                }\n\n                if (subPath.closed) {\n                    path.close();\n                }\n            }\n\n            return path;\n        },\n\n        _getMatrix: function(transform) {\n            var matrix = Object.create(kendo.geometry.Matrix.prototype);\n            kendo.geometry.Matrix.apply(matrix, transform);\n            return matrix;\n        }\n    });\n\n    extend(kendo.pdfviewer.dpl, {\n        geometryTypes: geometryTypes,\n        Page: DPLPage\n    });\n    extend(kendo.pdfviewer, {\n        BlankPage: BlankPage\n    });\n})(window.kendo.jQuery);\n\nconst deleteAnnotation = (widget) => {\n    widget.deleteAnnotation();\n};\n\nconst setHighlightTextColor = (widget, color) => {\n    widget.setHighlightColor(color);\n};\n\nconst setFreeTextFontColor = (widget, color) => {\n    widget.setFreeTextColor(color);\n};\n\nconst setFreeTextFontSize = (widget, fontSize) => {\n    widget.setFreeTextFontSize(fontSize);\n};\n\nconst setAnnotationEditorMode = (widget, args) => {\n    if (widget.interactionMode !== args.mode) {\n        widget.setInteractionMode({\n            mode: args.mode\n        });\n    }\n\n    widget.setAnnotationEditorMode(args);\n};\n\nconst resetAnnotationEditorMode = (widget) => {\n    widget.resetAnnotationEditorMode();\n};\n\nconst setInteractionMode = (widget, mode) => {\n    widget.setInteractionMode({ mode: mode });\n};\n\nconst $$1 = jQuery;\nconst AnnotationEditorType = {\n    DISABLE: -1,\n    NONE: 0,\n    FREETEXT: 3,\n    HIGHLIGHT: 9\n};\n\nclass AnnotationToolbar {\n    constructor(viewer) {\n        this.viewer = viewer;\n        this.widget = viewer.pdfViewerCommon;\n        this.init();\n    }\n\n    init() {\n        const annotationsToolbar = this.element = $$1(\"<div></div>\");\n\n        annotationsToolbar.insertAfter(this.viewer.toolbar.element);\n        const toolbar = this.toolbar = new kendo.ui.ToolBar(annotationsToolbar, {\n            fillMode: 'flat',\n            tools: [\n                { name: \"highlight\", command: \"highlight\", icon: \"highlight\", type: \"button\", togglable: true, showText: \"overflow\", group: \"annotations\", fillMode: \"flat\" },\n                { type: \"separator\" },\n                { name: \"freeText\", command: \"freeText\", icon: \"free-text\", type: \"button\", togglable: true, showText: \"overflow\", group: \"annotations\", fillMode: \"flat\" },\n                { type: \"spacer\" },\n                { name: \"close\", command: \"close\", icon: \"x\", type: \"button\", showText: \"overflow\", fillMode: \"flat\" }\n            ],\n            parentMessages: {\n                highlight: \"Highlight\",\n                freeText: \"Free text\",\n                close: \"Close\"\n            }\n        });\n\n        toolbar.bind(\"click\", this.onToolbarClick.bind(this));\n        toolbar.bind(\"toggle\", this.onToolbarClick.bind(this));\n    }\n\n    onToolbarClick(e) {\n        const widget = this.widget;\n        const target = $$1(e.target);\n        const command = target.data(\"command\");\n        const viewerToolbar = this.viewer.toolbar;\n\n        switch (command) {\n            case \"close\":\n                this.destroy();\n                viewerToolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                break;\n            case \"highlight\":\n                setAnnotationEditorMode(widget, { interactionMode: PdfViewerInteractionMode.TextSelection, mode: AnnotationEditorType.HIGHLIGHT });\n                break;\n            case \"freeText\":\n                setAnnotationEditorMode(widget, { interactionMode: PdfViewerInteractionMode.TextSelection, mode: AnnotationEditorType.FREETEXT });\n                break;\n        }\n    }\n\n    destroy() {\n        if (this.toolbar) {\n            this.viewer.toolbar.toggle(\"[title='Annotations']\", false);\n            this.toolbar.unbind(\"click\");\n            this.toolbar.unbind(\"toggle\");\n            this.toolbar.destroy();\n            this.toolbar = null;\n            this.element.remove();\n            this.element = null;\n            this.viewer.annotationsToolbar = null;\n            resetAnnotationEditorMode(this.widget);\n        }\n    }\n}\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        progress = kendo.ui.progress,\n        Class = kendo.Class,\n        UploadHelper = kendo.pdfviewer.UploadHelper,\n        ZOOMSTART = \"zoomStart\",\n        ZOOMEND = \"zoomEnd\";\n\n    var Command = Class.extend({\n        init: function(options) {\n            this.options = options;\n            this.viewer = options.viewer;\n            this.errorMessages = this.viewer.options.messages.errorMessages;\n        }\n    });\n\n    var OpenCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n            this._uploadHelper = new UploadHelper(this.viewer);\n        },\n        exec: function() {\n            this.viewer._upload = this.viewer._upload || this._uploadHelper._initUpload();\n            this.viewer._upload.element.click();\n        },\n    });\n\n    var PageChangeCommand = Command.extend({\n        exec: function() {\n            var targetPage = this.options.value,\n                viewer = this.viewer,\n                current, total;\n\n            if (isNaN(targetPage)) {\n                current = viewer._pageNum;\n                total = viewer.document.total || viewer.document.numPages;\n\n                switch (targetPage) {\n                    case \"first\": targetPage = 1;\n                        break;\n                    case \"prev\": targetPage = current > 1 ? current - 1 : 1;\n                        break;\n                    case \"next\": targetPage = current < total ? current + 1 : total;\n                        break;\n                    case \"last\": targetPage = total;\n                        break;\n                }\n            } else {\n                targetPage = Number(targetPage);\n            }\n\n            viewer.activatePage(targetPage, false);\n        }\n    });\n\n    var DownloadCommand = Command.extend({\n        exec: function() {\n            const that = this;\n            if (!that.viewer.document) {\n                that.viewer._triggerError({\n                    message: that.errorMessages.notFound\n                });\n                return;\n            }\n\n            const fileName = (that.viewer.document.info && that.viewer.document.info.title) ||\n            that.viewer.options.messages.defaultFileName;\n\n            if (that.viewer._isDPLProcessor()) {\n                that.viewer.processor.downloadFile(fileName);\n            } else {\n                that.viewer.pdfViewerCommon.downloadFile(fileName);\n            }\n        }\n    });\n\n    var ExportCommand = Command.extend({\n        init: function(options) {\n            options = $.extend(options, this.options);\n            Command.fn.init.call(this, options);\n        },\n        exec: function() {\n            var dialog = (this.viewer._saveDialog || this._initDialog());\n\n            dialog._updateModel({\n                pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                page: this.viewer.options.page\n            });\n\n            dialog.open();\n        },\n        apply: function(viewModel) {\n            var extension = viewModel.extension;\n\n            if (extension === \".png\") {\n                this.viewer.exportImage(viewModel);\n            } else if (extension === \".svg\") {\n                this.viewer.exportSVG(viewModel);\n            }\n        },\n        _initDialog: function() {\n            this.viewer._saveDialog = new kendo.pdfviewer.dialogs.ExportAsDialog({\n                apply: this.apply.bind(this),\n                pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                messages: this.viewer.options.messages\n            });\n            return this.viewer._saveDialog;\n        }\n    });\n\n    var EnableSelectionCommand = Command.extend({\n        exec: function() {\n            const that = this,\n                viewer = that.viewer;\n\n            viewer.toolbar.enable(viewer.toolbar.element.find(\"[data-command=AnnotationsCommand]\"), true);\n            setInteractionMode(viewer.pdfViewerCommon, PdfViewerInteractionMode.TextSelection);\n        }\n    });\n\n    var EnablePanCommand = Command.extend({\n        exec: function() {\n            const that = this,\n                viewer = that.viewer;\n\n            viewer.toolbar.enable(viewer.toolbar.element.find(\"[data-command=AnnotationsCommand]\"), false);\n            if (viewer.annotationsToolbar) {\n                viewer.annotationsToolbar.destroy();\n            }\n            resetAnnotationEditorMode(viewer.pdfViewerCommon);\n            setInteractionMode(viewer.pdfViewerCommon, PdfViewerInteractionMode.Pan);\n        }\n    });\n\n    const OpenSearchCommand = Command.extend({\n        init: function(options) {\n            const that = this;\n\n            that.viewer = options.viewer;\n\n            if (!that.viewer.searchDialog) {\n                that.viewer.searchDialog = new kendo.pdfviewer.dialogs.SearchDialog({\n                    pageContainer: that.viewer.pageContainerWrapper,\n                    position: {\n                        top: that.viewer.pageContainer.offset().top,\n                        left: that.viewer.pageContainer.offset().left\n                    },\n                    messages: that.viewer.options.messages.dialogs.search,\n                    open: that._open.bind(that),\n                    next: that._next.bind(that),\n                    prev: that._prev.bind(that),\n                    close: that._close.bind(that)\n                });\n            }\n\n            Command.fn.init.call(that, options);\n        },\n        exec: function() {\n            const that = this;\n\n            that.viewer.searchDialog.open();\n        },\n        _open: function() {\n            const that = this;\n\n            that.changeHandler = that._change.bind(that);\n            that.viewer.searchDialog.searchModel.bind(\"change\", that.changeHandler);\n        },\n        _close: function() {\n            const that = this;\n            that.viewer.pdfViewerCommon.clearSearch();\n            that.viewer.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n            that.viewer.searchDialog.searchModel.unbind(\"change\", that.changeHandler);\n            that.matches = [];\n            that.matchIndex = null;\n            that._updateSearchModel();\n        },\n        _change: function(ev) {\n            const that = this,\n                text = that.viewer.searchDialog.searchModel[\"searchText\"],\n                matchCase = that.viewer.searchDialog.searchModel[\"matchCase\"];\n\n            if (ev.field === \"searchText\" || ev.field === \"matchCase\") {\n                that.matches = that.viewer.pdfViewerCommon.searchText({ text: text, matchCase: matchCase });\n                that.matchIndex = that.matches.length ? 1 : 0;\n                that._updateSearchModel();\n            }\n        },\n        _next: function() {\n            const that = this;\n\n            that.viewer.pdfViewerCommon.goToNextSearchMatch();\n            that.matchIndex = that.matchIndex + 1 > that.matches.length ? 1 : that.matchIndex + 1;\n            that._updateSearchModel();\n        },\n        _prev: function() {\n            const that = this;\n\n            that.viewer.pdfViewerCommon.goToPreviousSearchMatch();\n            that.matchIndex = that.matchIndex - 1 < 1 ? that.matches.length : that.matchIndex - 1;\n            that._updateSearchModel();\n        },\n        _updateSearchModel: function() {\n            const that = this,\n                model = that.viewer.searchDialog.searchModel;\n\n            if (that.matches && that.matches.length) {\n                model.set(\"matches\", that.matches.length);\n                model.set(\"matchIndex\", that.matchIndex);\n            } else {\n                model.set(\"searchText\", \"\");\n                model.set(\"matches\", 0);\n                model.set(\"matchIndex\", 0);\n            }\n        },\n        _closeDialog: function() {\n            const that = this;\n            that.viewer.searchDialog.close();\n        }\n    });\n\n    var ZoomCommand = Command.extend({\n        exec: function() {\n            const that = this;\n            const scale = that._calculateZoom();\n\n            if (scale === undefined$1) {\n                return;\n            }\n\n            let zoomLevel = scale.zoomLevel;\n\n            if (that.viewer.zoomScale !== scale.zoomLevel) {\n                that.viewer._preventRenderEvent = true;\n                that.viewer._currentPage = that.viewer.pdfViewerCommon.getCurrentPageIndex() + 1;\n                that.viewer.pdfViewerCommon.zoom({ zoomLevel: scale.zoomLevel, zoomLevelType: scale.zoomLevelType });\n                zoomLevel = that.viewer.pdfViewerCommon.options.zoomLevel;\n                that._triggerZoomEnd(zoomLevel);\n            }\n\n            that.viewer.zoomScale = zoomLevel;\n        },\n\n        _calculateZoom: function() {\n            var options = this.options,\n                viewer = this.viewer,\n                viewerOptions = viewer.options,\n                scale = options.value || options.scale,\n                scaleValue = scale,\n                zoomLevelType = \"\",\n                preventZoom;\n\n            viewer._allowResize = false;\n            viewer._autoFit = false;\n\n            if (options.zoomIn) {\n                scaleValue = scale = viewer.zoomScale + viewerOptions.zoomRate;\n            } else if (options.zoomOut) {\n                scaleValue = scale = viewer.zoomScale - viewerOptions.zoomRate;\n            } else if (scale === \"auto\") {\n                viewer._allowResize = true;\n                scaleValue = viewer._autoZoomScale;\n            } else if (typeof scale === \"string\" && !kendo.parseFloat(scale)) {\n                zoomLevelType = scale;\n            } else if (scale && scale.toString().match(/^[0-9]+%?$/)) {\n                scale = parseInt(scale.replace('%', ''), 10) / 100;\n                scaleValue = scale;\n            } else {\n                preventZoom = isNaN(scale);\n            }\n\n            if (!preventZoom) {\n                preventZoom = scale < viewerOptions.zoomMin || scale > viewerOptions.zoomMax;\n            }\n\n            if (preventZoom || viewer.trigger(ZOOMSTART, { scale: scale })) {\n                return;\n            }\n\n            if (options.updateComboBox && viewer.toolbar)\n            {\n                viewer._updateZoomComboBox(scale);\n            }\n\n            return { zoomLevel: scaleValue, zoomLevelType: zoomLevelType };\n        },\n\n        _triggerZoomEnd: function(scale) {\n            var that = this,\n                viewer = that.viewer;\n\n            viewer.trigger(ZOOMEND, { scale: scale });\n        }\n    });\n\n    var PrintCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n        },\n        exec: function() {\n            const that = this;\n\n             if (!that.viewer.document) {\n                that.viewer._triggerError({\n                    message: this.errorMessages.notFound\n                });\n                return;\n            }\n\n            progress(that.viewer.pageContainerWrapper, true);\n            // Used to ensure that loading indicator appears before the browser hangs.\n            setTimeout(() => {\n               that.viewer.pdfViewerCommon.printFile();\n            }, 100);\n        }\n    });\n\n    const AnnotationsCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n        },\n        exec: function() {\n            const viewer = this.viewer;\n            if (viewer.annotationsToolbar) {\n                viewer.annotationsToolbar.destroy();\n            } else {\n                viewer.annotationsToolbar = new AnnotationToolbar(viewer);\n            }\n        }\n    });\n\n    extend(kendo.pdfviewer, {\n        OpenCommand: OpenCommand,\n        PageChangeCommand: PageChangeCommand,\n        DownloadCommand: DownloadCommand,\n        EnableSelectionCommand: EnableSelectionCommand,\n        EnablePanCommand: EnablePanCommand,\n        ExportCommand: ExportCommand,\n        PrintCommand: PrintCommand,\n        OpenSearchCommand: OpenSearchCommand,\n        ZoomCommand: ZoomCommand,\n        AnnotationsCommand: AnnotationsCommand\n    });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n        Class = kendo.Class,\n        Draggable = kendo.ui.Draggable,\n        outerWidth = kendo._outerWidth,\n        EXTENSIONS = {\n            svg: \".svg\",\n            png: \".png\"\n        },\n        keys = kendo.keys;\n\n    var ErrorDialog = Class.extend({\n        init: function(options) {\n            this.options = extend(options, {\n                actions: [{\n                    text: options.messages.dialogs.okText\n                }]\n            });\n            this._dialog = $(\"<div />\")\n                    .kendoDialog(this.options)\n                    .getKendoDialog();\n        },\n        open: function() {\n            this._dialog.center().open();\n        }\n    });\n\n    var ExportAsDialog = Class.extend({\n        init: function(options) {\n            this.options = extend(options, this.options, {\n                fileFormats: [{\n                    description: options.messages.dialogs.exportAsDialog.png,\n                    extension: EXTENSIONS.png\n                }, {\n                    description: options.messages.dialogs.exportAsDialog.svg,\n                    extension: EXTENSIONS.svg\n                }],\n                title: options.messages.dialogs.exportAsDialog.title,\n                open: function() {\n                    this.center();\n                }\n            });\n            this._initializeDialog();\n            return this;\n        },\n        options: {\n            extension: EXTENSIONS.png,\n            autoFocus: true,\n            resizable: false,\n            modal: {\n                preventScroll: true\n            },\n            width: \"90%\",\n            maxWidth: 520,\n            template: ({ messages, total }) =>\n                `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.fileName)}:</label></div>` +\n                \"<div class='k-edit-field'>\" +\n                    \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input class='k-input-inner' data-bind='value: name' /></span>\" +\n                \"</div>\" +\n                \"<div>\" +\n                    `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.saveAsType)}:</label></div>` +\n                    \"<div class='k-edit-field'>\" +\n                    \"<select data-role='dropdownlist' class='k-file-format' \" +\n                        \"data-text-field='description' \" +\n                        \"data-value-field='extension' \" +\n                        \"data-bind='value: extension, source: fileFormats'></select>\" +\n                    \"</div>\" +\n                \"</div>\" +\n                `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.page)}:</label></div>` +\n                \"<div class='k-edit-field'>\" +\n                    `<input data-role='numerictextbox' data-format='n0' data-min='1' data-max='${encode(total)}' data-bind='value: page' />` +\n                \"</div>\" +\n                \"<div class='k-actions'>\" +\n                    `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-bind='click: apply'><span class='k-button-text'>${encode(messages.save)}</span></button>` +\n                    `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-bind='click: close'><span class='k-button-text'>${encode(messages.cancel)}</span></button>` +\n                \"</div>\"\n        },\n        _updateModel: function(options) {\n            if (options.pagesCount) {\n                this.viewModel.set(\"pagesCount\", options.pagesCount);\n            }\n            if (options.page) {\n                this.viewModel.set(\"page\", options.page);\n            }\n        },\n        _initializeDialog: function() {\n            var that = this;\n            var options = that.options;\n            var dialogMessages = options.messages.dialogs;\n            var dialog = $(\"<div class='k-pdf-viewer-window k-action-window k-popup-edit-form' />\")\n                    .append(kendo.template(options.template)({\n                        total: options.pagesCount,\n                        messages: dialogMessages\n                    }))\n                    .kendoWindow(options)\n                    .getKendoWindow();\n\n            that.viewModel = kendo.observable({\n                title: dialogMessages.exportAsDialog.title,\n                name: dialogMessages.exportAsDialog.defaultFileName,\n                extension: options.extension,\n                fileFormats: options.fileFormats,\n                pagesCount: options.pagesCount,\n                page: 1,\n                apply: that.apply.bind(this),\n                close: function() {\n                    dialog.close();\n                }\n            });\n\n            that._dialog = dialog;\n\n            kendo.bind(dialog.element, that.viewModel);\n            return dialog;\n        },\n        open: function() {\n            this._dialog.center().open();\n        },\n        apply: function() {\n            this._dialog.close();\n            this.options.apply({\n                fileName: this.viewModel.name + this.viewModel.extension,\n                extension: this.viewModel.extension,\n                page: this.viewModel.page\n            });\n        }\n    });\n\n    var SearchDialog = Class.extend({\n        init: function(options) {\n            var that = this;\n            that.options = extend({}, options, that.options);\n        },\n        options: {\n            resizable: false,\n            template: ({ messages }) => '<div class=\"k-search-panel k-pos-sticky k-top-center\">' +\n                          `<button aria-label='${encode(messages.dragHandle)}' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-search-dialog-draghandle'>${kendo.ui.icon({ icon: \"handle-drag\", iconClass: \"k-button-icon\" })}</button>` +\n                          \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'>\" +\n                              `<input class='k-search-dialog-input k-input-inner' data-bind='value: boundValue, events: { keyup: onKeyup, input: onInput }' aria-label='${encode( messages.inputLabel)}' title='${encode(messages.inputLabel)}' />` +\n                              `<span class='k-input-suffix'><button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-match-case-button k-match-case-button' data-bind='css: {k-selected: matchCase}, click: matchCaseClick' aria-label='${encode(messages.matchCase)}' title='${encode(messages.matchCase)}'>${kendo.ui.icon({ icon: \"convert-lowercase\", iconClass: \"k-button-icon\" })}</button></span>` +\n                          \"</span>\" +\n                          `<span class='k-search-matches'><span data-bind='text: matchIndex'></span> ${encode(messages.of)} <span data-bind='text: matches'></span></span>` +\n                          `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: prev' aria-label='${encode(messages.previous)}' title='${encode(messages.previous)}'>${kendo.ui.icon({ icon: \"arrow-up\", iconClass: \"k-button-icon\" })}</button>` +\n                          `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: next' aria-label='${encode(messages.next)}' title='${encode(messages.next)}'>${kendo.ui.icon({ icon: \"arrow-down\", iconClass: \"k-button-icon\" })}</button>` +\n                          `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: close' aria-label='${encode(messages.close)}' title='${encode(messages.close)}'>${kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" })}</button>` +\n                      \"</div>\"\n        },\n        open: function() {\n            var that = this;\n\n            if (!that.dialog) {\n                that._initializeDialog();\n            }\n\n            that.options.open();\n            that._showSearchDialog();\n        },\n        close: function() {\n            var that = this;\n            that.options.close();\n            that._hideSearchDialog();\n        },\n        _showSearchDialog: function() {\n            var that = this;\n\n            that.dialog.css(\"left\",`${(that.options.pageContainer.innerWidth() / 2) - (outerWidth(that.dialog, true) / 2)}px`);\n\n            that.dialog.kendoStop().kendoAnimate({\n                effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                duration: 350,\n                complete: function(ev) {\n                    that.dialog.find(\".k-search-dialog-input\").trigger(\"focus\");\n                }\n            });\n        },\n        _hideSearchDialog: function() {\n            var that = this;\n\n            that.dialog.kendoStop().kendoAnimate({\n                effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                duration: 350,\n                hide: true\n            });\n        },\n        _initializeDialog: function() {\n            var that = this;\n            var template = kendo.template(that.options.template);\n            var dialogElm = $(template({\n                messages: that.options.messages\n            }));\n\n            that.options.pageContainer.prepend(dialogElm);\n            that.dialog = dialogElm;\n\n            that._draggable = new Draggable(dialogElm, {\n                filter: \".k-search-dialog-draghandle\",\n                axis: \"x\",\n                dragstart: function(e) {\n                    var wnd = that.dialog;\n                    var containment = that.options.pageContainer;\n\n                    wnd.startPosition = {\n                        left: e.x.client - kendo.getOffset(wnd, \"position\").left,\n                    };\n\n                    if (!containment) {\n                        return null;\n                    }\n\n                    containment._innerWidth = containment.innerWidth();\n\n                    if (parseInt(containment._innerWidth, 10) > containment[0].clientWidth) {\n                        containment._innerWidth -= kendo.support.scrollbar();\n                    }\n\n                    wnd.maxLeft = containment._innerWidth - outerWidth(wnd, true);\n                },\n                drag: function(e) {\n                    var wnd = that.dialog;\n                    var position = {};\n                    var left;\n\n                    left = e.x.client - wnd.startPosition.left;\n\n                    if (left && isNaN(left) && left.toString().indexOf(\"px\") < 0) {\n                        position.left = left;\n                    } else {\n                        position.left = Math.max(\n                            Math.min(parseInt(left, 10), parseInt(wnd.maxLeft, 10)),\n                            0\n                        );\n                    }\n\n                    wnd.css(position);\n                },\n            });\n\n            that._draggable.userEvents.stopPropagation = false;\n\n            that.searchModel = kendo.observable({\n                boundValue: \"\",\n                searchText: \"\",\n                matchCase: false,\n                matchIndex: 0,\n                matches: 0,\n                matchCaseClick: function() {\n                    this.set(\"matchCase\", !this.matchCase);\n                },\n                next: that.options.next,\n                prev: that.options.prev,\n                close: function() {\n                    this.set(\"boundValue\", \"\");\n                    that.close();\n                },\n                onKeyup: function(ev) {\n                    var key = ev.keyCode;\n                    var navigationFn = ev.shiftKey ? this.prev : this.next;\n\n                    if (key === keys.ENTER) {\n                        navigationFn();\n                        ev.preventDefault();\n                    } else if (key == keys.ESC) {\n                        this.close();\n                    }\n                },\n                onInput: function(ev) {\n                    this.set(\"searchText\", ev.target.value);\n                }\n            });\n\n            kendo.bind(dialogElm, that.searchModel);\n        }\n    });\n\n    extend(kendo.pdfviewer, {\n        dialogs: {\n            ErrorDialog: ErrorDialog,\n            ExportAsDialog: ExportAsDialog,\n            SearchDialog: SearchDialog\n        }\n    });\n})(window.kendo.jQuery);\n\nconst $ = jQuery;\n\nclass AnnotationPopup {\n    constructor(viewer, anchor, editor) {\n        this.viewer = viewer;\n        this.widget = viewer.pdfViewerCommon;\n        this.anchor = anchor;\n        this.editor = editor;\n        this.popupOpenHandler = this.onPopupOpen.bind(this);\n        this.init();\n    }\n\n    init() {\n        const anchor = this.anchor;\n        const annotationPopupToolbarElement = $(`<div data-uid=\"${kendo.guid()}\"></div>`);\n\n        this.popup = new kendo.ui.Popup($(`<div class=\"k-pdf-viewer-annotation-editor-toolbar\"></div>`), {\n            anchor: anchor\n        });\n\n        this.popup.element.html(annotationPopupToolbarElement);\n        const popupToolbar =\n            this.popupToolbar =\n            new kendo.ui.ToolBar(annotationPopupToolbarElement, {\n                fillMode: \"flat\",\n                tools: [\n                    { name: \"palette\", command: \"palette\", icon: \"palette\", type: \"button\", showText: \"overflow\", fillMode: \"flat\" },\n                    { name: \"remove\", command: \"remove\", icon: \"trash\", type: \"button\", showText: \"overflow\", fillMode: \"flat\" },\n                ],\n                parentMessages: {\n                    palette: \"Palette\",\n                    remove: \"Remove\"\n                }\n            });\n\n        popupToolbar.bind(\"click\", this.onAnnotationPopupToolbarClick.bind(this));\n\n        this.popup.open();\n    }\n\n    initEditor() {\n    }\n\n    onAnnotationPopupToolbarClick(e) {\n        const widget = this.widget;\n        const target = $(e.target);\n        const command = target.data(\"command\");\n\n        switch (command) {\n            case \"palette\":\n                this.initEditor();\n                break;\n            case \"remove\":\n                deleteAnnotation(widget);\n                this.destroyPopup();\n                break;\n            default:\n                break;\n        }\n    }\n\n    onPopupOpen() {\n        this.flatColorPicker._view._hueSlider.resize();\n        this.flatColorPicker._view._opacitySlider.resize();\n    }\n\n    anchorExists() {\n        return document.getElementById(this.anchor.id);\n    }\n\n    destroyPopup() {\n        if (this.popup) {\n            this.popup.destroy();\n            this.popup = null;\n        }\n    }\n\n    destroyEditor() {\n        if (this.editorPopup) {\n            this.editorPopup.destroy();\n            this.editorPopup = null;\n        }\n    }\n\n    destroy() {\n        if (this.popupToolbar) {\n            this.popupToolbar.unbind(\"click\");\n            this.popupToolbar.unbind(\"toggle\");\n            this.popupToolbar.destroy();\n            this.popupToolbar = null;\n        }\n\n        this.destroyPopup();\n    }\n}\n\nclass HighlightAnnotationPopup extends AnnotationPopup {\n    constructor(viewer, anchor, editor) {\n        super(viewer, anchor, editor);\n    }\n\n    initEditor() {\n        const anchor = this.anchor;\n\n        if (!this.anchorExists()) {\n            this.destroy();\n            return;\n        }\n\n        this.destroyEditor();\n\n        this.editorPopup = new kendo.ui.Popup($(`\n            <div class=\"k-pdf-viewer-annotation-editor\">\n                <span class=\"k-column-menu-group-header\">\n                    <span class=\"k-column-menu-group-header-text\">Color</span>\n                </span>\n                <div ref-annotation-editor-flat-color-picker></div>\n            </div>\n`), {\n            anchor: anchor,\n            activate: this.popupOpenHandler\n        });\n\n        this.initFlatColorPicker();\n\n        this.editorPopup.open();\n\n        this.destroy();\n    }\n\n    initFlatColorPicker() {\n        this.flatColorPicker = new kendo.ui.FlatColorPicker(this.editorPopup.element.find(\"[ref-annotation-editor-flat-color-picker]\"), {\n            format: \"rgb\",\n            opacity: true,\n            change: (e) => setHighlightTextColor(this.widget, e.value)\n        });\n    }\n\n    onPopupOpen() {\n        const currentColor = this.editor.color;\n\n        super.onPopupOpen();\n        this.flatColorPicker.value(currentColor);\n    }\n}\n\nclass FreeTextAnnotationPopup extends AnnotationPopup {\n    constructor(viewer, anchor, editor) {\n        super(viewer, anchor, editor);\n    }\n\n    initEditor() {\n        const anchor = this.anchor;\n\n        if (!this.anchorExists()) {\n            this.destroy();\n            return;\n        }\n\n        this.destroyEditor();\n\n        this.editorPopup = new kendo.ui.Popup($(`\n            <div class=\"k-pdf-viewer-annotation-editor\">\n                <span class=\"k-column-menu-group-header\">\n                        <span class=\"k-column-menu-group-header-text\">Text style</span>\n                    </span>\n                    <form ref-annotation-text-editor-popup-form></form>\n                <span class=\"k-column-menu-group-header\">\n                    <span class=\"k-column-menu-group-header-text\">Color</span>\n                </span>\n                <div ref-annotation-editor-flat-color-picker></div>\n            </div>\n`), {\n            anchor: anchor,\n            activate: this.popupOpenHandler\n        });\n\n        this.initFontSizeForm();\n        this.initFlatColorPicker();\n\n        this.editorPopup.open();\n\n        this.destroy();\n    }\n\n    initFontSizeForm() {\n        const currentFontSize = this.editor.propertiesToUpdate[0][1];\n        const fontSizeList = [8, 9, 10, 11, 12, 13, 14, 16, 20, 22, 24, 26, 28, 36, 48, 72];\n\n        this.fontSizeForm = new kendo.ui.Form($(\"[ref-annotation-text-editor-popup-form]\"), {\n            buttonsTemplate: () => \"\",\n            formData: {\n                fontSize: currentFontSize\n            },\n            layout: \"grid\",\n            grid: {\n                cols: 3\n            },\n            items: [\n                {\n                    field: \"fontSize\",\n                    label: \"Font size\",\n                    editor: \"DropDownList\",\n                    colSpan: 1,\n                    editorOptions: {\n                        fillMode: \"flat\",\n                        dataSource: fontSizeList,\n                        change: (e) => {\n                            const value = e.sender.value();\n                            setFreeTextFontSize(this.widget, value);\n                        }\n                    }\n                }\n            ]\n        });\n\n        this.fontSizeForm.element.find(\".k-form-buttons\").remove();\n    }\n\n    initFlatColorPicker() {\n        this.flatColorPicker = new kendo.ui.FlatColorPicker(this.editorPopup.element.find(\"[ref-annotation-editor-flat-color-picker]\"), {\n            format: \"rgb\",\n            opacity: true,\n            change: (e) => setFreeTextFontColor(this.widget, e.value)\n        });\n    }\n\n    onPopupOpen() {\n        const currentColor = this.editor.propertiesToUpdate[1][1];\n\n        super.onPopupOpen();\n        this.flatColorPicker.value(currentColor);\n    }\n}\n\nconst __meta__ = {\n    id: \"pdfviewer\",\n    name: \"PDFViewer\",\n    category: \"web\",\n    description: \"PDFViewer to display pdfs in the browser\",\n    depends: [\"core\", \"window\", \"dialog\", \"toolbar\", \"draganddrop\", \"upload\", \"combobox\", \"drawing\", \"binder\", \"dropdownlist\", \"numerictextbox\", \"textbox\", \"pager\", \"form\", \"colorpicker\", \"pdfviewer-common.cmn.chunk\"]\n};\n\n(function($, undefined$1) {\n    var NS = \".kendoPDFViewer\",\n        kendo = window.kendo,\n        ui = kendo.ui,\n        extend = $.extend,\n        drawing = kendo.drawing,\n        keys = $.extend({ PLUS: 187, MINUS: 189, ZERO: 48, NUMPAD_ZERO: 96 }, kendo.keys),\n        Page,\n        BlankPage = kendo.pdfviewer.BlankPage,\n        Widget = ui.Widget,\n        progress = kendo.ui.progress,\n        SCROLL = \"scroll\",\n        RENDER = \"render\",\n        OPEN = \"open\",\n        ERROR = \"error\",\n        KEYDOWN = \"keydown\" + NS,\n        MOUSEWHEEL = \"DOMMouseScroll\" + NS + \" mousewheel\" + NS,\n        UPDATE = \"update\",\n        PAGE_CHANGE = \"pagechange\",\n        ZOOMSTART = \"zoomStart\",\n        ZOOMEND = \"zoomEnd\",\n        ZOOMCOMMAND = \"ZoomCommand\",\n        WHITECOLOR = \"#ffffff\",\n        TABINDEX = \"tabindex\",\n        CLICK = \"click\",\n        CHANGE = \"change\",\n        TOGGLE = \"toggle\",\n        DISABLED = 'k-disabled',\n        PROCESSORS = {\n            pdfjs: \"pdfjs\",\n            dpl: \"dpl\"\n        },\n        styles = {\n            viewer: \"k-pdf-viewer\",\n            scroller: \"k-canvas k-pdf-viewer-canvas k-pos-relative k-overflow-auto\",\n            enableTextSelection: \"k-enable-text-select\",\n            enablePanning: \"k-enable-panning\",\n            highlightClass: \"k-search-highlight\",\n            highlightMarkClass: \"k-search-highlight-mark\",\n            charClass: \"k-text-char\"\n        },\n        PREDEFINED_ZOOM_VALUES = {\n            auto: \"auto\",\n            actual: \"ActualWidth\",\n            fitToWidth: \"FitToWidth\",\n            fitToPage: \"FitToPage\"\n        };\n\n    var PDFViewer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, kendo.deepExtend({}, this.options, options));\n\n            that._processMessages();\n\n            that._wrapper();\n\n            if (that.options.toolbar) {\n                that._renderToolbar();\n            }\n\n            that._initProcessor(options || {});\n            that._renderPageContainer();\n\n            if (that._isDPLProcessor()) {\n                that._loadDPLDocument();\n            } else {\n                that._loadPdfJSDocument();\n            }\n\n            kendo.notify(that, kendo.ui);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay(that.wrapper[0]);\n            }\n        },\n\n        events: [\n            RENDER,\n            OPEN,\n            ERROR,\n            ZOOMSTART,\n            ZOOMEND\n        ],\n\n        options: {\n            name: \"PDFViewer\",\n            view: {\n                type: \"canvas\"\n            },\n            pdfjsProcessing: {\n                file: null,\n                loadOnDemand: true\n            },\n            dplProcessing: {\n                read: {\n                    url: null,\n                    type: \"GET\",\n                    dataType: \"json\",\n                    pageField: \"pageNumber\"\n                },\n                upload: {\n                    url: null,\n                    saveField: \"file\"\n                },\n                download: {\n                    url: null\n                },\n                loadOnDemand: false\n            },\n            toolbar: {\n                items: [],\n                contextMenu: false\n            },\n            width: 1000,\n            height: 1200,\n            page: 1,\n            defaultPageSize: {\n                width: 794,\n                height: 1123\n            },\n            scale: null,\n            zoomMin: 0.5,\n            zoomMax: 4,\n            zoomRate: 0.25,\n            messages: {\n                defaultFileName: \"Document\",\n                toolbar: {\n                    zoom: {\n                        zoomLevel: \"zoom level\",\n                        zoomOut: \"Zoom Out\",\n                        zoomIn: \"Zoom In\",\n                        actualWidth: \"Actual Width\",\n                        autoWidth: \"Automatic Width\",\n                        fitToWidth: \"Fit to Width\",\n                        fitToPage: \"Fit to Page\"\n                    },\n                    contextMenu: \"Menu\",\n                    open: \"Open\",\n                    exportAs: \"Export\",\n                    download: \"Download\",\n                    print: \"Print\",\n                    toggleSelection: \"Enable Selection\",\n                    togglePan: \"Enable Panning\",\n                    search: \"Search\",\n                    annotations: \"Annotations\"\n                },\n                errorMessages: {\n                    notSupported: \"Only pdf files allowed.\",\n                    parseError: \"PDF file fails to process.\",\n                    notFound: \"File is not found.\",\n                    popupBlocked: \"Popup is blocked.\"\n                },\n                dialogs: {\n                    exportAsDialog: {\n                        title: \"Export...\",\n                        defaultFileName: \"Document\",\n                        pdf: \"Portable Document Format (.pdf)\",\n                        png: \"Portable Network Graphics (.png)\",\n                        svg: \"Scalable Vector Graphics (.svg)\",\n                        labels: {\n                            fileName: \"File name\",\n                            saveAsType: \"Save as\",\n                            page: \"Page\"\n                        }\n                    },\n                    okText: \"OK\",\n                    save: \"Save\",\n                    cancel: \"Cancel\",\n                    search: {\n                        inputLabel: \"Search Text\",\n                        matchCase: \"Match Case\",\n                        next: \"Next Match\",\n                        previous: \"Previous Match\",\n                        close: \"Close\",\n                        of: \"of\",\n                        dragHandle: \"Drag search\"\n                    }\n                }\n            }\n        },\n\n        defaultTools: {\n            contextMenu: {\n                type: \"dropDownButton\",\n                name: \"contextMenu\",\n                showText: \"overflow\",\n                id: \"pdfviewer-toolbar-context-menu\",\n                overflow: \"never\",\n                icon: \"menu\",\n                fillMode: \"flat\",\n                menuButtons: [\n                    { id: \"open\", text: \"Open\", icon: \"folder-open\", attributes: { \"data-command\": \"OpenCommand\" } },\n                    { id: \"download\", text: \"Download\", icon: \"download\", attributes: { \"data-command\": \"DownloadCommand\" }, enable: false },\n                    { id: \"print\", text: \"Print\", icon: \"print\", attributes: { \"data-command\": \"PrintCommand\" }, enable: false }\n                ]\n            },\n            separator: { type: \"separator\" },\n            pager: {\n                type: \"component\",\n                name: \"pager\",\n                overflow: \"never\",\n                component: \"Pager\",\n                element: '<div></div>',\n                componentOptions: {\n                    navigatable: true,\n                    _isToolbarItem: true,\n                }\n            },\n            spacer: { type: \"spacer\" },\n            zoomInOut: {\n                type: \"buttonGroup\",\n                fillMode: \"flat\",\n                buttons: [\n                    { type: \"button\", icon: \"zoom-out\", name: \"zoomOut\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomOut\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                    { type: \"button\", icon: \"zoom-in\", name: \"zoomIn\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomIn\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                ]\n            },\n            zoom: {\n                type: \"component\",\n                name: \"zoom\",\n                command: \"ZoomCommand\",\n                overflow: \"never\",\n                component: \"ComboBox\",\n                data: [50, 100, 150, 200, 300, 400],\n                componentOptions: {\n                    enable: false,\n                    dataTextField: \"text\",\n                    dataValueField: \"percent\",\n                    valuePrimitive: true,\n                    clearOnEscape: false,\n                    commandOn: \"change\",\n                    fillMode: 'flat',\n                }\n            },\n            toggleSelection: {\n                type: \"buttonGroup\",\n                fillMode: \"flat\",\n                buttons: [\n                    {\n                        togglable: true,\n                        command: \"EnableSelectionCommand\",\n                        icon: \"pointer\",\n                        showText: \"overflow\",\n                        name: \"toggleSelection\",\n                        group: \"toggle-pan\",\n                        fillMode: \"flat\"\n                    }, {\n                        togglable: true,\n                        command: \"EnablePanCommand\",\n                        icon: \"hand\",\n                        showText: \"overflow\",\n                        name: \"togglePan\",\n                        group: \"toggle-pan\",\n                        selected: true,\n                        fillMode: \"flat\"\n                    }\n                ]\n            },\n            spacer2: { type: \"spacer\" },\n            search: {\n                type: \"button\",\n                command: \"OpenSearchCommand\",\n                icon: \"search\",\n                name: \"search\",\n                showText: \"overflow\",\n                enable: false,\n                fillMode: \"flat\"\n            },\n            open: {\n                type: \"button\",\n                showText: \"overflow\",\n                name: \"open\",\n                icon: \"folder-open\",\n                command: \"OpenCommand\",\n                fillMode: \"flat\"\n            },\n            download: {\n                type: \"button\",\n                showText: \"overflow\",\n                name: \"download\",\n                icon: \"download\",\n                command: \"DownloadCommand\",\n                enable: false,\n                fillMode: \"flat\"\n            },\n            print: {\n                type: \"button\",\n                showText: \"overflow\",\n                name: \"print\",\n                icon: \"print\",\n                command: \"PrintCommand\",\n                enable: false,\n                fillMode: \"flat\"\n            },\n            annotations: {\n                togglable: true,\n                type: \"button\",\n                showText: \"overflow\",\n                name: \"annotations\",\n                icon: \"edit-annotations\",\n                command: \"AnnotationsCommand\",\n                enable: false,\n                fillMode: \"flat\"\n            }\n        },\n\n        exportAsTool: {\n            exportAs: { type: \"button\", showText: \"overflow\", name: \"exportAs\", icon: \"image-export\", command: \"ExportCommand\", fillMode: \"flat\" }\n        },\n\n\n        _processMessages: function() {\n            var messages = this.options.messages.toolbar,\n                zoom = messages.zoom;\n\n            if ($.isPlainObject(zoom)) {\n                this.options.messages.toolbar = $.extend({}, this.options.messages.toolbar, zoom);\n                this.options.messages.toolbar.zoom = zoom.zoomLevel || this.options.messages.toolbar.zoom;\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                options = that.options;\n\n            that.wrapper = that.element;\n\n            that.wrapper\n                    .width(options.width)\n                    .height(options.height)\n                    .addClass(styles.viewer)\n                    .on(KEYDOWN, that._keydown.bind(that));\n\n            that._allowResize = that.options.scale === null;\n            that._autoZoomScale = DEFAULT_ZOOM_LEVEL;\n            that.zoomScale = that.options.scale || that._autoZoomScale;\n\n            that._resizeHandler = kendo.onResize(function() {\n                that.resize();\n            });\n\n            that._pageNum = that.options.page;\n        },\n\n        _keydown: function(e) {\n            var plusShortcuts = [keys.PLUS, keys.NUMPAD_PLUS],\n                minusShortcuts = [keys.MINUS, keys.NUMPAD_MINUS],\n                zeroShortcuts = [keys.ZERO, keys.NUMPAD_ZERO],\n                shouldExecute = false,\n                args = {\n                    command: ZOOMCOMMAND,\n                    options: { updateComboBox: true }\n                };\n\n            if (!e.ctrlKey || this._blankPage || this.processingLib === PROCESSORS.dpl) {\n                return;\n            }\n\n            if (plusShortcuts.includes(e.keyCode)) {\n                args.options.zoomIn = true;\n                shouldExecute = true;\n            } else if (minusShortcuts.includes(e.keyCode)) {\n                args.options.zoomOut = true;\n                shouldExecute = true;\n            } else if (zeroShortcuts.includes(e.keyCode)) {\n                args.options.value = DEFAULT_ZOOM_LEVEL;\n                shouldExecute = true;\n            }\n\n            if (shouldExecute) {\n                this.execute(args);\n                e.preventDefault();\n            }\n        },\n\n        _handlePageChangeEvent: function(event) {\n            const that = this;\n\n            if (!that._pageChangeFromScroll) {\n                this.activatePage(event.index, false);\n                that._showPagerInputLabels();\n            }\n\n            delete that._pageChangeFromScroll;\n        },\n\n        _showPagerInputLabels: function() {\n            const that = this;\n            const inputElements = that.pager.element.find(\".k-pager-input\").children();\n            if (inputElements) {\n                const labels = inputElements.eq(0).add(inputElements.eq(2));\n\n                if (!$(labels).is(\":visible\")) {\n                    labels.show();\n                }\n            }\n        },\n\n        _resizePager: function() {\n            const that = this;\n\n            if (!that.pager || !that.pager.options.responsive) {\n                return;\n            }\n\n            const pagerWidth = kendo._outerWidth(that.pager.element);\n            const visibleToolbarItems = Array.from(that.toolbar.element.children(':not(.k-hidden):not(:has(.k-pager))'));\n            const containerWidth = kendo._outerWidth(that.element);\n\n            let visibleToolsWidth = 0;\n\n            const pattern = /(em|ex|%|px|cm|mm|in|pt|pc|ch|rem|vh|vw|vmin|vmax)$/;\n            const gap = Number(that.toolbar.element.css(\"gap\").replace(pattern,''));\n\n            if (visibleToolbarItems.length > 0) {\n                let temp = 0;\n                for (let i = 0; i < visibleToolbarItems.length; i++) {\n                    temp += kendo._outerWidth(visibleToolbarItems[i]) + gap;\n                }\n                if (temp) {\n                    visibleToolsWidth = temp;\n                }\n            }\n\n            const elementsToShrink = that.pager.element.find(\".k-pager-nav\");\n\n            if ((pagerWidth + visibleToolsWidth + gap) > containerWidth) {\n\n                for (var i = elementsToShrink.length - 1; i >= 0; i--) {\n                    const element = elementsToShrink.eq(i);\n                        element.addClass(\"k-hidden\");\n                }\n            }\n\n            if ((pagerWidth + visibleToolsWidth + gap) < containerWidth) {\n                const hidden = that.pager.element.find(\".k-hidden\");\n\n                for (var i = 0; i < hidden.length; i++) {\n                    const hiddenElement = hidden.eq(i);\n\n                    hiddenElement.removeClass('k-hidden');\n                }\n            }\n\n            if (that.pager.options.input) {\n                that._showPagerInputLabels();\n            }\n        },\n\n        _initProcessor: function(options) {\n            var that = this,\n                processingOptions;\n\n            processingOptions = options.dplProcessing ? that.options.dplProcessing : that.options.pdfjsProcessing;\n            that.processingLib = options.dplProcessing ? PROCESSORS.dpl : PROCESSORS.pdfjs;\n\n            if (that._isDPLProcessor()) {\n                that.processor = new kendo.pdfviewer[that.processingLib].processor(processingOptions, that);\n                Page = kendo.pdfviewer[that.processingLib].Page;\n            } else {\n                isLoaded();\n            }\n        },\n\n        _isDPLProcessor: function() {\n            return this.processingLib === PROCESSORS.dpl;\n        },\n\n        _hasPagerTool: function(tools) {\n            let hasPager = false;\n            let index;\n\n            for (let i = 0; i < tools.length; i++) {\n                const tool = tools[i];\n                if (typeof tool === 'string') {\n                    hasPager = tool.toLowerCase() === 'pager';\n                    index = i;\n                } else {\n                    if (tool.type) {\n                        hasPager = tool.type.toLowerCase() === 'pager';\n                        index = i;\n                    } else if (tool.name) {\n                        hasPager = tool.name.toLowerCase() === 'pager';\n                        if (hasPager) {\n                            delete tool.name;\n                        }\n                        index = i;\n                    }\n                }\n\n                if (hasPager) {\n                    break;\n                }\n            }\n\n            return {\n                hasPager,\n                index\n            };\n        },\n\n        _renderToolbar: function() {\n            var that = this,\n                options = that.options,\n                toolbarOptions = extend({}, options.toolbar),\n                tools = toolbarOptions.items && toolbarOptions.items.length ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n\n            const { hasPager, index } = that._hasPagerTool(tools);\n\n\n            tools = that._processTools(tools);\n\n            if (hasPager) {\n                let pagerMessages = that.options.messages.toolbar.pager;\n\n                if (pagerMessages) {\n                    if (pagerMessages.of) {\n                        pagerMessages.of = `${pagerMessages.of} {0}`;\n                        if (pagerMessages.pages) {\n                            pagerMessages.of = pagerMessages.of + ' ' + pagerMessages.pages;\n                            delete pagerMessages.pages;\n                        }\n                    }\n                }\n                that.defaultTools.pager.componentOptions.messages = pagerMessages;\n                options.messages.toolbar.pager = \"Pager\";\n\n                const currentPagerOptions = that.defaultTools.pager.componentOptions;\n                if (typeof tools[index] !== 'string') {\n                    that.defaultTools.pager.componentOptions = $.extend(tools[index], currentPagerOptions);\n\n                    tools[index] = that.defaultTools.pager;\n                }\n            }\n\n            toolbarOptions = {\n                defaultTools: $.extend({}, that.defaultTools, that.exportAsTool),\n                parentMessages: options.messages.toolbar,\n                tools: tools,\n                resizable: true,\n                fillMode: 'flat',\n                overflow: toolbarOptions.overflow\n            };\n\n            var toolbarElement = $(\"<div />\");\n\n            toolbarElement.appendTo(that.element);\n            that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n            that.options.toolbar = that.toolbar.options;\n\n            that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n            that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n            that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n            // If the context menu is enabled, bind the click event to the items of the dropdown button as well.\n            if (toolbarOptions.contextMenu) {\n                that.toolbar.element.find('[data-role=dropdownbutton]').on(CLICK, that._toolbarClick.bind(that));\n            }\n\n            if (hasPager) {\n                that.pager = that.toolbar.element.find('.k-pager');\n                if (that.pager.length > 0) {\n                    that.pager = that.pager.data('kendoPager');\n                }\n                that.pager.bind(CHANGE, that._handlePageChangeEvent.bind(that));\n            }\n\n            that.bind({\n                update: that._updateToolbar.bind(that)\n            });\n\n            return that.toolbar;\n        },\n\n        _processTools: function(tools) {\n            var that = this,\n                toolbar = that.options.toolbar,\n                messages = that.options.messages.toolbar;\n\n            tools = tools.flatMap(t => {\n                if (t === \"zoom\") {\n                    t = that.defaultTools.zoom;\n                }\n\n                if (t.name === \"zoom\") {\n                    t = $.extend({}, that.defaultTools.zoom, t);\n\n                    var zoomLevels = [{\n                        percent: PREDEFINED_ZOOM_VALUES.auto,\n                        text: messages.autoWidth\n                    }, {\n                        percent: PREDEFINED_ZOOM_VALUES.actual,\n                        text: messages.actualWidth\n                    }, {\n                        percent: PREDEFINED_ZOOM_VALUES.fitToWidth,\n                        text: messages.fitToWidth\n                    }, {\n                        percent: PREDEFINED_ZOOM_VALUES.fitToPage,\n                        text: messages.fitToPage\n                    }];\n\n                    // eslint-disable-next-line\n                    var comboOptions = t.data.map(i => { return { percent: i, text: i + \"%\" } });\n                    var value = that.options.scale ? that.options.scale * 100 + \"%\" : \"auto\";\n\n                    zoomLevels = zoomLevels.concat(comboOptions);\n                    t.componentOptions.dataSource = zoomLevels;\n                    t.componentOptions.value = value;\n                }\n\n                return t;\n            });\n\n            if (!toolbar.contextMenu) {\n                // If the option is not enabled we don't want to render the context menu button and the separator.\n                const contextMenuIndex = tools.findIndex(t => t === \"contextMenu\");\n                if (contextMenuIndex !== -1) {\n                    tools.splice(contextMenuIndex, 1);\n                }\n\n                const separatorIndex = tools.findIndex(t => t === \"separator\");\n                if (separatorIndex !== -1) {\n                    tools.splice(separatorIndex, 1);\n                }\n            } else {\n                // If it is enabled, we don't want the open, download and print buttons to be rendered.\n                tools = tools.filter(t => t !== \"open\" && t !== \"download\" && t !== \"print\");\n            }\n\n            return tools;\n        },\n\n        _updateToolbar: function(e) {\n            var pageOptions = {\n                    page: e.page || 1,\n                    total: e.total || 1\n                },\n                toolbar = this.toolbar,\n                toolbarEl = toolbar.element,\n                zoomCombo = toolbarEl.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\"),\n                toFocus = toolbarEl.find(\".k-focus\");\n\n            if (toFocus.length === 0) {\n                toFocus = toolbarEl.find(\"[tabindex=0]\").first();\n\n                if (toFocus.length === 0) {\n                    toFocus = toolbar._getAllItems().first();\n                }\n            }\n\n            if (zoomCombo) {\n                zoomCombo.enable(!e.isBlank);\n                if (e.action === \"zoom\") {\n                    this._updateZoomComboBox(e.zoom);\n                }\n            }\n\n            if (((e.action === \"pagechange\" && e.updatePager !== false) || e.isBlank) && this.pager) {\n                if (e.updatePager) {\n                    pageOptions.updatePager = true;\n                }\n\n                if (e.pageChangeFromScroll) {\n                    pageOptions.pageChangeFromScroll = true;\n                }\n\n                this._updatePager(pageOptions);\n            }\n\n            this._updateOnBlank(e.isBlank);\n\n            toolbar._resetTabIndex(toFocus);\n        },\n\n        _updateOnBlank: function(isBlank) {\n            const toolbar = this.toolbar,\n                toolbarEl = toolbar.element;\n\n            const contextMenu = $(\"#pdfviewer-toolbar-context-menu_buttonmenu\");\n            let downloadButton = toolbarEl.find(\"[data-command='DownloadCommand']\");\n            let printButton = toolbarEl.find(\"[data-command='PrintCommand']\");\n\n            if (contextMenu.length) {\n                downloadButton = contextMenu.find(\"[data-command='DownloadCommand']\");\n                printButton = contextMenu.find(\"[data-command='PrintCommand']\");\n            }\n\n            toolbar.enable(toolbarEl.find(\"[data-command=EnableSelectionCommand]\").parent(), !isBlank);\n            toolbar.enable(toolbarEl.find(\"[data-command=ZoomCommand][role=button]\").parent(), !isBlank);\n\n            toolbar.enable(toolbarEl.find(\"[data-command='OpenSearchCommand']\"), !isBlank);\n            toolbar.enable(downloadButton, !isBlank);\n            toolbar.enable(printButton, !isBlank);\n        },\n\n        _updatePager: function(options) {\n            const that = this;\n            if (options.updatePager) {\n                const isDPLProcessed = that.processingLib === 'dpl';\n\n                const data = isDPLProcessed ? (that.document && that.document.pages ? that.document.pages : []) : that.pages ?? [];\n\n                const pagerDataSource = new kendo.data.DataSource({\n                data: data ?? [],\n                pageSize: 1,\n                page: options.page\n            });\n                that.pager.setDataSource(pagerDataSource);\n                that._resizePager();\n            } else {\n                const current = that.pager.page();\n\n                if (current !== options.page) {\n                    if (options.pageChangeFromScroll) {\n                        that._pageChangeFromScroll = true;\n                    }\n                    that.pager.page(options.page);\n                }\n            }\n            that._showPagerInputLabels();\n            that._togglePagerDisabledClass();\n        },\n\n        _togglePagerDisabledClass: function() {\n            const that = this;\n            const pager = that.pager;\n\n            if (pager.totalPages() <= 1 ) {\n                pager.element.addClass(DISABLED);\n            } else if (pager.element.hasClass(DISABLED)) {\n                pager.element.removeClass(DISABLED);\n            }\n        },\n\n        _updateZoomComboBox: function(value) {\n            var isPredefined = value === PREDEFINED_ZOOM_VALUES.auto ||\n                value === PREDEFINED_ZOOM_VALUES.actual ||\n                value === PREDEFINED_ZOOM_VALUES.fitToPage ||\n                value === PREDEFINED_ZOOM_VALUES.fitToWidth,\n                zoomCombo = this.toolbar.element.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\");\n\n            if (!isPredefined) {\n                value = Math.round(value * 100) + '%';\n            }\n\n            if (zoomCombo) {\n                zoomCombo.value(value);\n            }\n        },\n\n        _toolbarClick: function(ev) {\n            let target = $(ev.target),\n                command = target.data(\"command\"),\n                options = target.data(\"options\");\n\n            if (!command && !options) {\n                target = $(ev.currentTarget);\n                command = target.data(\"command\");\n                options = target.data(\"options\");\n            }\n\n            options = extend({}, { value: target.val() }, options);\n\n            if (!command) {\n                return;\n            }\n\n            this.execute({\n                command: command,\n                options: options\n            });\n        },\n\n        _initErrorDialog: function(options) {\n            var that = this;\n\n            if (!that._errorDialog) {\n                options = extend(options, {\n                    messages: that.options.messages\n                });\n                var dialogInstance = new kendo.pdfviewer.dialogs.ErrorDialog(options);\n                that._errorDialog = dialogInstance._dialog;\n            }\n            return that._errorDialog;\n        },\n\n        _renderPageContainer: function() {\n            var that = this;\n\n            if (!that.pageContainer) {\n                that.pageContainerWrapper = $(\"<div />\");\n                that.pageContainerWrapper.addClass(styles.scroller);\n\n                that.pageContainer = $(`<div class=\"k-pdf-viewer-pages\" />`);\n                that.pageContainer.attr(TABINDEX, 0);\n\n                that.pageContainerWrapper.append(that.pageContainer);\n                that.wrapper.append(that.pageContainerWrapper);\n            }\n        },\n\n        _triggerError: function(options) {\n            var dialog = this._initErrorDialog();\n            extend(options, {\n                dialog: dialog\n            });\n            if (this.pageContainer) {\n                progress(this.pageContainer, false);\n            }\n\n            if (this.trigger(ERROR, options))\n            {\n                return;\n            }\n\n            dialog.open().content(options.message);\n        },\n\n        _renderPages: function() {\n            var that = this,\n                document = that.document,\n                pagesData;\n\n            that.pages = [];\n\n            if (!document || !document.total) {\n                that._renderBlankPage();\n                return;\n            }\n\n            pagesData = document.pages;\n\n            for (var i = 1; i <= document.total; i++) {\n                var viewerPage,\n                    pageData = {\n                        processor: that.processor,\n                        number: i\n                    };\n\n                if (pagesData && pagesData.length) {\n                    pageData = extend(pageData, pagesData[i - 1]);\n                }\n\n                viewerPage = new Page(pageData, that);\n                that.pages.push(viewerPage);\n                that.pageContainer.append(viewerPage.element);\n            }\n\n            if (that.pdfScroller) {\n                that.pdfScroller.enablePanEventsTracking();\n            }\n\n            that._attachContainerEvents();\n            that._getVisiblePagesCount();\n            that._updatePager({ updatePager: true });\n        },\n\n        _renderBlankPage: function() {\n            this._blankPage = new BlankPage(this.options.defaultPageSize, this);\n\n            this.pageContainer.append(this._blankPage.element);\n\n            this._blankPage._initUpload();\n            this.trigger(UPDATE, { isBlank: true });\n        },\n\n        _removeBlankPage: function() {\n            if (this._blankPage) {\n                this._blankPage.destroy();\n                this._blankPage.element.remove();\n                this._blankPage = null;\n            }\n        },\n\n        _resize: function() {\n            var that = this,\n                containerWidth,\n                ratio;\n\n            if (!that._allowResize) {\n                return;\n            }\n\n            if (!that.pages || !that.pages.length) {\n                if (that._blankPage) {\n                    ratio = containerWidth / that._blankPage.element.width();\n                    that._blankPage.resize(ratio);\n                }\n                return;\n            }\n\n            if (that.toolbar) {\n                that.toolbar.resize(true);\n            }\n\n\n            if (that._resizeHandler) {\n                clearTimeout(that._resizeHandler);\n            }\n            that._resizeHandler = setTimeout(that._resizePages.bind(that), 100);\n        },\n\n        _resizePages: function() {\n            const that = this,\n                containerWidth = that.pageContainer[0].clientWidth,\n                pagesElements = that.pdfViewerCommon?.getPagesElements();\n            let ratio = 0;\n\n            that.pages.forEach(function(page) {\n                const pageWidth = page.element ? page.element.width() : $(pagesElements[page._pageIndex]).width();\n                const currentRatio = containerWidth / pageWidth;\n\n                if (currentRatio > ratio) {\n                    ratio = currentRatio;\n                }\n            });\n\n\n            if (that._autoFit) {\n                that.zoom(that._autoFit, true);\n                return;\n            }\n\n            ratio = Math.min(Math.max(ratio, that.options.zoomMin), DEFAULT_ZOOM_LEVEL);\n            if (ratio != that.zoomScale) {\n                that.zoom(ratio, true);\n                that.zoomScale = ratio;\n                that._allowResize = true;\n            }\n\n            if (that.pager && that.pager.element) {\n                that._resizePager();\n            }\n        },\n\n        _attachContainerEvents: function() {\n            const that = this;\n\n            that.pageContainer.addClass(styles.enablePanning);\n            that.pageContainerWrapper.bind(SCROLL, that._scroll.bind(that));\n        },\n\n        _scroll: function(e) {\n            var that = this,\n                containerHeight = that.pageContainerWrapper.height(),\n                total = that.pages.length,\n                pageNum = that._pageNum,\n                pageIndex = pageNum - 1,\n                pageToLoadNum = pageNum,\n                pageToLoad,\n                currentPage$1;\n\n                if (that._preventScroll || !total) {\n                    that._preventScroll = false;\n                    return;\n                }\n\n                that._scrollingStarted = true;\n                const nextPageIndex = currentPage(that.element[0]);\n                currentPage$1 = that.pages[pageIndex];\n                pageToLoadNum = pageNum + nextPageIndex - pageIndex;\n\n                if (pageNum !== pageToLoadNum && pageToLoadNum >= 1 && pageToLoadNum <= total) {\n                    pageToLoad = that.pages[pageToLoadNum - 1].element;\n\n                    if (pageToLoad.offset().top > containerHeight) {\n                        return;\n                    }\n\n                    that._pageNum = pageToLoadNum;\n                    that._loadVisiblePages();\n\n                    that.trigger(UPDATE, { action: PAGE_CHANGE, page: pageToLoadNum, total: total, pageChangeFromScroll: true });\n                }\n        },\n\n        zoom: function(scale, preventComboBoxChange) {\n            var that = this;\n\n            if (that._isDPLProcessor()) {\n                return;\n            }\n\n            if (!scale) {\n                return that.zoomScale;\n            }\n\n            return that.execute({\n                command: ZOOMCOMMAND,\n                options: {\n                    value: scale,\n                    updateComboBox: !preventComboBoxChange\n                }\n            });\n        },\n\n        execute: function(options) {\n            var commandOptions = extend({ viewer: this }, options.options);\n            var command = new kendo.pdfviewer[options.command](commandOptions);\n            return command.exec();\n        },\n\n        _loadDPLDocument: function() {\n            var that = this;\n            var page = that.options.page;\n\n            progress(that.pageContainer, true);\n            that.processor.fetchDocument().done(function(document) {\n                that._clearPages();\n                that.document = document;\n\n                that._renderPages();\n                that.resize(true);\n                if (document) {\n                    page = page >= 1 && page <= document.total ? page : 1;\n                    that.activatePage(page, true);\n                }\n\n                if (that.pdfScroller) {\n                    that.pdfScroller.destroy();\n                }\n\n                that.pdfScroller = new Scroller(that.pageContainer[0].parentNode, {\n                    filter: '.k-page',\n                    events: {}\n                });\n\n                that.pdfScroller.enablePanEventsTracking();\n\n                progress(that.pageContainer, false);\n            });\n        },\n\n        _loadPdfJSDocument: function(data) {\n            const that = this;\n            const options = that.options;\n            const page = options.page;\n            let file;\n\n            if (data) {\n                file = data;\n            } else {\n                file = options.pdfjsProcessing.file;\n            }\n\n            if (!file) {\n                that._renderBlankPage();\n                return;\n            }\n\n            if (typeof file === \"string\") {\n                file = {\n                    url: file\n                };\n            } else if (file instanceof ArrayBuffer) {\n                file = {\n                    data: file\n                };\n            }\n\n            that._removeBlankPage();\n\n            progress(that.pageContainer, true);\n            that.pdfViewerCommon = new PdfViewer(that.element[0], {\n                loadOnDemand: that.options.pdfjsProcessing.loadOnDemand,\n                loadOnDemandPageSize: 1,\n                zoomLevel: that.zoomScale,\n                fileDescriptor: file,\n                events: {\n                    pagesLoad: (e) => {\n                        that.document = e.pdfDoc;\n                        that.pages = e.pdfPages;\n\n                        // Enable panning by default.\n                        setInteractionMode(that.pdfViewerCommon, 1);\n\n                        that.activatePage(page, true);\n                        that.trigger(UPDATE);\n\n                        if (that._currentPage > -1) {\n                            that.pdfViewerCommon.scrollToPage({ pageNumber: that._currentPage });\n                            // Reset the internal current page property.\n                            that._currentPage = null;\n                        }\n\n                        progress(that.pageContainer, false);\n                    },\n                    pageRendered: (e) => {\n                        if (!that._preventRenderEvent) {\n                            that.trigger(RENDER, { page: e.page.pdfPage });\n                        }\n\n                        that._setPageNumberAttributes();\n\n                        that._preventRenderEvent = false;\n                    },\n                    zoomStart: (e) => {\n                        that._currentPage = that.pdfViewerCommon.getCurrentPageIndex() + 1;\n                    },\n                    zoomEnd: (e) => {\n                        that.zoomScale = e.zoomLevel;\n                        that._updateZoomComboBox(e.zoomLevel);\n                        that.trigger(ZOOMEND, { scale: e.zoomLevel });\n                    },\n                    printEnd: (e) => {\n                        progress(that.pageContainerWrapper, false);\n                    },\n                    scroll: (e) => {\n                        if (e.isPageChanged) {\n                            that.trigger(UPDATE, { action: PAGE_CHANGE, page: e.pageNumber, total: that.pages.length, pageChangeFromScroll: true });\n                        }\n                    },\n                    error: (e) => {\n                        that._triggerError({\n                            error: e.message,\n                            message: that.options.messages.errorMessages.parseError\n                        });\n                    },\n                    annotationEditorToolBarShow: that.onAnnotationEditorToolBarShow.bind(that),\n                }\n            });\n        },\n\n        _enablePanning: function() {\n            const that = this;\n            that.pdfViewerCommon.documentScroller.enablePanEventsTracking();\n        },\n\n        _disablePanning: function() {\n            const that = this;\n            that.pdfViewerCommon.documentScroller.disablePanEventsTracking();\n        },\n\n        _setPageNumberAttributes: function() {\n            const that = this;\n\n            that.pageContainer.find('.k-page').each((i, el) => {\n                $(el).attr(kendo.attr(\"number\"), i + 1);\n            });\n        },\n\n        loadPage: function(number) {\n            const that = this,\n                page = that.pages && that.pages[number - 1];\n\n            if (!page) {\n                return;\n            }\n\n            if (that._isDPLProcessor()) {\n                return page.load(that.zoomScale);\n            }\n\n            return Promise.resolve();\n        },\n\n        activatePage: function(number, updatePager) {\n            const that = this,\n                page = that.pages && that.pages[number - 1];\n\n            if (!page) {\n                return;\n            }\n\n            that._pageNum = number;\n\n            if (that._isDPLProcessor()) {\n                that._loadVisiblePages();\n                that._scrollToActivatedPage(number, updatePager);\n            } else {\n                that.pdfViewerCommon.activatePageNumber(number);\n                that.trigger(UPDATE, { action: PAGE_CHANGE, page: number, total: that.pages.length, updatePager: updatePager });\n            }\n        },\n\n        _scrollToActivatedPage: function(number, updatePager) {\n            const that = this,\n                pageContainer = that.pageContainerWrapper;\n\n            that._preventScroll = true;\n            scrollToPage(pageContainer[0], number - 1);\n            that.trigger(UPDATE, { action: PAGE_CHANGE, page: number, total: that.pages.length, updatePager: updatePager });\n        },\n\n        _getVisiblePagesCount: function() {\n            var that = this,\n                loadedPagesHeight = 0,\n                updatedVisiblePagesCount = 0,\n                containerHeight = that.pageContainer[0].clientHeight,\n                index = 0;\n\n            while (loadedPagesHeight <= containerHeight && index < that.pages.length)\n            {\n                loadedPagesHeight += that.pages[index].element.height();\n                updatedVisiblePagesCount++;\n                index++;\n            }\n\n            that._visiblePagesCount = updatedVisiblePagesCount;\n        },\n\n        _loadVisiblePages: function() {\n            var pagesCount = this.pages && this.pages.length,\n                minVisiblePageNum = Math.max(this._pageNum - this._visiblePagesCount, 1),\n                maxVisiblePageNum = Math.min(this._pageNum + this._visiblePagesCount, pagesCount);\n\n            this._visiblePages = this.pages.slice(minVisiblePageNum - 1, maxVisiblePageNum);\n\n            for (var i = minVisiblePageNum; i <= maxVisiblePageNum; i++)\n            {\n                this.loadPage(i);\n            }\n        },\n\n        _loadAllPages: function() {\n            const pagesCount = this.pages && this.pages.length;\n            const promises = [];\n\n            for (var i = 0; i <= pagesCount; i++)\n            {\n                promises.push(this.loadPage(i));\n            }\n\n            return promises;\n        },\n\n        fromFile: function(file) {\n            const that = this;\n            if (that._isDPLProcessor()) {\n                that.zoomScale = that.options.scale || DEFAULT_ZOOM_LEVEL;\n                that.zoom(that.zoomScale, true);\n                that.trigger(UPDATE, { action: \"zoom\", zoom: that.options.scale || \"auto\" });\n\n                that.processor._updateDocument(file);\n                that._loadDPLDocument();\n            } else {\n                if (that.pdfViewerCommon) {\n                    that.annotationsToolbar?.destroy();\n                    resetAnnotationEditorMode(that.pdfViewerCommon);\n                    that.toolbar.toggle(\"[title='Annotations']\", false);\n                    that.toolbar.toggle(\"[title='Enable Selection']\", false);\n                    that.toolbar.toggle(\"[title='Enable Panning']\", true);\n\n                    const loadParams = $.isPlainObject(file) ? file : { url: file };\n\n                    that.pdfViewerCommon.loadFile(loadParams);\n                } else {\n                    that._loadPdfJSDocument(file);\n                }\n            }\n        },\n\n        exportImage: function(options) {\n            var that = this;\n            var pageNumber = options.page;\n            var page = that.pages[pageNumber - 1] || that._blankPage;\n            var rootGroup = new drawing.Group();\n\n            page.load();\n\n            var background = kendo.drawing.Path.fromRect(new kendo.geometry.Rect([0, 0], [page.width, page.height]), {\n                fill: {\n                    color: WHITECOLOR\n                },\n                stroke: null\n            });\n\n            progress(that.pageContainer, true);\n            rootGroup.append(background, page.group);\n\n            drawing.exportImage(rootGroup).done(function(data) {\n                progress(that.pageContainer, false);\n                kendo.saveAs({\n                    dataURI: data,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL || \"\",\n                    forceProxy: options.forceProxy,\n                    proxyTarget: options.proxyTarget\n                });\n            });\n        },\n\n        exportSVG: function(options) {\n            var that = this;\n            var pageNumber = options.page;\n            var page = that.pages[pageNumber - 1] || that._blankPage;\n\n            progress(that.pageContainer, true);\n\n            page.load();\n\n            drawing.exportSVG(page.group).done(function(data) {\n                progress(that.pageContainer, false);\n                kendo.saveAs({\n                    dataURI: data,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL || \"\",\n                    forceProxy: options.forceProxy,\n                    proxyTarget: options.proxyTarget\n                });\n            });\n        },\n\n        setOptions: function(options)\n        {\n            var that = this;\n\n            if (options.pdfjsProcessing || options.dplProcessing) {\n                that._initProcessor(options || {});\n            }\n\n            options = $.extend(that.options, options);\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (options.page) {\n                that._pageNum = options.page;\n                that.activatePage(options.page, false);\n            }\n\n            if (options.width) {\n                that.element.width(options.width);\n            }\n\n            if (options.height) {\n                that.element.height(options.height);\n            }\n        },\n\n        destroy: function()\n        {\n            if (this._resizeHandler)\n            {\n                kendo.unbindResize(this._resizeHandler);\n            }\n\n            //destroy nested components\n            if (this._errorDialog) {\n                this._errorDialog.destroy();\n            }\n\n            if (this._saveDialog) {\n                this._saveDialog.destroy();\n            }\n\n            if (this._upload) {\n                this._upload.destroy();\n            }\n\n            if (this.pager) {\n                this.pager.destroy();\n            }\n\n            if (this.toolbar) {\n                this.toolbar.unbind();\n                this.toolbar.destroy();\n                this.toolbar = null;\n            }\n\n            if (this.pages && this.pages.length && this._isDPLProcessor()) {\n                this.pages.forEach(function(page) {\n                    page.destroy();\n                });\n                this.pages = [];\n            }\n\n            if (this.pdfScroller) {\n                this.pdfScroller.destroy();\n            }\n            this.pageContainer.off(NS);\n            this.pageContainerWrapper.off(NS);\n\n            Widget.fn.destroy.call(this);\n        },\n\n        _clearPages: function() {\n            this.pages = [];\n            this.document = null;\n            this._pageNum = 1;\n\n            this.pageContainer.off(NS);\n            this.pageContainer.empty();\n\n            if (this.pdfScroller)\n            {\n                this.pdfScroller.destroy();\n            }\n        },\n\n        onAnnotationEditorToolBarShow: function(e) {\n            const that = this;\n            const type = e.annotationEditorMode;\n            const anchor = e.anchor;\n            const popup = that.annotationPopup?.popup;\n            const editor = e.source.firstSelectedEditor;\n\n            // Do not continue if popup is already visible.\n            if (popup && popup.visible() && !popup._closing && type === \"freeText\") {\n                return;\n            }\n\n            if (that.annotationPopup) {\n                that.annotationPopup.destroy();\n                that.annotationPopup.destroyEditor();\n                that.annotationPopup = null;\n            }\n\n            switch (type) {\n                case \"highlight\":\n                    that.annotationPopup = new HighlightAnnotationPopup(that, anchor, editor);\n                    break;\n                case \"freeText\":\n                    that.annotationPopup = new FreeTextAnnotationPopup(that, anchor, editor);\n                    break;\n            }\n        }\n    });\n\n    ui.plugin(PDFViewer);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
{"version":3,"sources":["raw-mjs/kendo.reorderable.js"],"names":["__meta__","id","name","category","depends","advanced","$","kendo","window","outerWidth","_outerWidth","outerHeight","_outerHeight","getOffset","Widget","ui","CHANGE","Reorderable","extend","init","element","options","that","this","fn","call","_initDraggable","dropFilter","draggable","filter","reorderDropCue","find","kendoDropTarget","group","dragenter","e","externalDraggableInstance","_externalDraggable","_draggable","_handleExternalDraggable","offset","dropTarget","denied","_isPartOfSortable","_dropTargetAllowed","_isLastDraggable","toggleHintClass","hint","cueOffset","top","left","isHorizontal","orientation","smartPosition","inSameContainer","source","target","sourceIndex","_index","targetIndex","_dropTarget","css","height","zIndex","positionDropCue","appendTo","document","body","dragleave","drop","dropIndex","isAfter","allowDropAfterLastItem","trigger","oldIndex","newIndex","position","remove","bind","dragcancel","_dragcancel","dragend","_dragend","dragstart","_dragstart","drag","_drag","deniedIcon","allowIcon","events","length","icon","eq","Draggable","guid","autoScroll","elementUnderCursorFunc","_elementUnderCursor","shouldModifyCue","is","hide","show","draggableFilter","trimStart","substring","_dragcancelHandler","_dragendHandler","_dragstartHandler","_dragHandler","currentTarget","closest","_draggableInstance","_elements","unbind","sender","dropStartOffset","width","pageX","dropStartTop","pageY","dragOverContainers","clickMoveClick","hasClass","elementUnderCursor","index","externalDraggable","item","elements","get","found","pop","destroy","each","data","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.reorderable.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.draganddrop.js';\nimport './kendo.icons.js';\n\nconst __meta__ = {\n    id: \"reorderable\",\n    name: \"Reorderable\",\n    category: \"framework\",\n    depends: [ \"core\", \"draganddrop\", \"icons\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        getOffset = kendo.getOffset,\n        Widget = kendo.ui.Widget,\n        CHANGE = \"change\";\n\n    var Reorderable = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n            that._initDraggable();\n\n            if (!that.options.dropFilter) {\n                that.options.dropFilter = that.draggable.options.filter;\n            }\n\n            that.reorderDropCue = that.options.reorderDropCue;\n\n            element.find(options.dropFilter).kendoDropTarget({\n                group: that.draggable.options.group,\n                dragenter: function(e) {\n                    var externalDraggableInstance = that._externalDraggable(e);\n\n                    if (!that._draggable && !externalDraggableInstance) {\n                        return;\n                    }\n\n                    if (externalDraggableInstance) {\n                        that._handleExternalDraggable(externalDraggableInstance);\n                    }\n\n                    var dropTarget = this.element, offset;\n\n                    var denied = that._isPartOfSortable(that._draggable) ? (!that._dropTargetAllowed(dropTarget) || that._isLastDraggable()) : false;\n\n                    that.toggleHintClass(e.draggable.hint, denied);\n\n                    if (!denied) {\n                        offset = getOffset(dropTarget);\n                        var cueOffset = { top: offset.top, left: offset.left };\n                        var isHorizontal = options.orientation === \"horizontal\";\n\n                        if (!options.smartPosition || (options.inSameContainer && !options.inSameContainer({\n                            source: dropTarget,\n                            target: that._draggable,\n                            sourceIndex: that._index(dropTarget),\n                            targetIndex: that._index(that._draggable)\n                        }))) {\n                            that._dropTarget = dropTarget;\n                        } else {\n                            if (that._index(dropTarget) > that._index(that._draggable) && options.smartPosition) {\n                                cueOffset[isHorizontal ? \"left\" : \"top\"] += isHorizontal ? outerWidth(dropTarget) : outerHeight(dropTarget);\n                            }\n                        }\n\n                        that.reorderDropCue.css({\n                            height: outerHeight(dropTarget),\n                            top: cueOffset.top,\n                            left: cueOffset.left,\n                            zIndex: 19000\n                        });\n\n                        if (options.positionDropCue) {\n                            options.positionDropCue(that.reorderDropCue, dropTarget);\n                        }\n                        that.reorderDropCue.appendTo(document.body);\n                    }\n                },\n                dragleave: function(e) {\n                    that._dropTarget = null;\n                },\n                drop: function() {\n                    that._dropTarget = null;\n\n                    if (!that._draggable) {\n                        return;\n                    }\n                    var dropTarget = this.element;\n                    var draggable = that._draggable;\n                    var dropIndex = that._index(dropTarget);\n\n                    var isAfter = that.options.orientation === \"horizontal\" ?\n                        getOffset(that.reorderDropCue).left > getOffset(dropTarget).left :\n                        getOffset(that.reorderDropCue).top > getOffset(dropTarget).top;\n\n                    dropIndex = isAfter ? dropIndex + 1 : dropIndex;\n\n                    if (that._dropTargetAllowed(dropTarget) &&\n                        !that._isLastDraggable() &&\n                        (that._index(draggable) !== dropIndex || that.options.allowDropAfterLastItem)) {\n                        that.trigger(CHANGE, {\n                            element: that._draggable,\n                            target: dropTarget,\n                            oldIndex: that._index(draggable),\n                            newIndex: that._index(dropTarget),\n                            position: isAfter ? \"after\" : \"before\"\n                        });\n                    }\n\n                    if (that.reorderDropCue) {\n                        that.reorderDropCue.remove();\n                    }\n                }\n            });\n\n            that.draggable.bind([ \"dragcancel\", \"dragend\", \"dragstart\", \"drag\" ], {\n                dragcancel: that._dragcancel.bind(that),\n                dragend: that._dragend.bind(that),\n                dragstart: that._dragstart.bind(that),\n                drag: that._drag.bind(that)\n            });\n        },\n\n        options: {\n            name: \"Reorderable\",\n            filter: \"*\",\n            orientation: \"horizontal\",\n            deniedIcon: \"cancel\",\n            allowIcon: \"plus\",\n            reorderDropCue: $('<div class=\"k-reorder-cue\"></div></div>'),\n            smartPosition: true\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        toggleHintClass: function(hint, denied) {\n            var that = this,\n                options = that.options;\n\n            hint = $(hint);\n\n            if (hint.find(\".k-drag-status\").length > 0) {\n                kendo.ui.icon(hint.find(\".k-drag-status\").eq(0), { icon: denied ? options.deniedIcon : options.allowIcon });\n            }\n        },\n\n        _initDraggable: function() {\n            let that = this,\n                options = that.options;\n\n            that.draggable = options.draggable || new kendo.ui.Draggable(that.element, {\n                group: kendo.guid() + \"-reorderable\",\n                autoScroll: true,\n                filter: options.filter,\n                hint: options.hint\n            });\n\n            let elementUnderCursorFunc = that.draggable._elementUnderCursor;\n            that.draggable._elementUnderCursor = function(e) {\n                let shouldModifyCue = that.reorderDropCue && that.reorderDropCue.is(\":visible\");\n\n                if (shouldModifyCue) {\n                    that.reorderDropCue.hide();\n                }\n                let element = elementUnderCursorFunc.call(that.draggable, e);\n                if (shouldModifyCue) {\n                    that.reorderDropCue.show();\n                }\n                return element;\n            };\n        },\n\n        _handleExternalDraggable: function(draggable) {\n            var that = this;\n            var draggableFilter = that.options.dropFilter.trimStart();\n\n            // make direct child selectors compatible with .closest()\n            if (draggableFilter && draggableFilter[0] == \">\") {\n                draggableFilter = draggableFilter.substring(1);\n            }\n\n            that._dragcancelHandler = that._dragcancel.bind(that);\n            that._dragendHandler = that._dragend.bind(that);\n            that._dragstartHandler = that._dragstart.bind(that);\n            that._dragHandler = that._drag.bind(that);\n\n            that._draggable = draggable.currentTarget.closest(draggableFilter);\n            that._draggableInstance = draggable;\n            that._elements = that.element.find(that.options.dropFilter);\n\n            draggable.bind([ \"dragcancel\", \"dragend\", \"dragstart\", \"drag\" ], {\n                dragcancel: that._dragcancelHandler,\n                dragend: that._dragendHandler,\n                dragstart: that._dragstartHandler,\n                drag: that._dragHandler\n            });\n        },\n\n        _dragcancel: function() {\n            var that = this;\n\n            if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler ||\n                that._dragstartHandler || that._dragHandler)) {\n\n                    that._draggableInstance.unbind({\n                    dragcancel: that._dragcancelHandler,\n                    dragend: that._dragendHandler,\n                    dragstart: that._dragstartHandler,\n                    drag: that._dragHandler\n                });\n            }\n\n            if (that.reorderDropCue) {\n                that.reorderDropCue.remove();\n            }\n\n            that._draggable = null;\n            that._elements = null;\n\n        },\n        _dragend: function() {\n            var that = this;\n\n            if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler ||\n                that._dragstartHandler || that._dragHandler)) {\n\n                    that._draggableInstance.unbind({\n                    dragcancel: that._dragcancelHandler,\n                    dragend: that._dragendHandler,\n                    dragstart: that._dragstartHandler,\n                    drag: that._dragHandler\n                });\n            }\n\n            if (that.reorderDropCue) {\n                that.reorderDropCue.remove();\n            }\n\n            that._draggable = null;\n            that._elements = null;\n        },\n        _dragstart: function(e) {\n            var that = this;\n            var target = $(e.currentTarget);\n            var draggableFilter = that.options.dropFilter.trimStart();\n\n            // make direct child selectors compatible with .closest()\n            if (draggableFilter && draggableFilter[0] == \">\") {\n                draggableFilter = draggableFilter.substring(1);\n            }\n\n            that._draggable = target.is(draggableFilter) ? target : target.closest(draggableFilter);\n            that._elements = that.element.find(that.options.dropFilter);\n        },\n        _drag: function(e) {\n            var that = this,\n                dropIndex, sourceIndex, denied,\n                offset = {},\n                target,\n                draggableFilter = that.options.dropFilter.trimStart();\n\n            // make direct child selectors compatible with .closest()\n            if (draggableFilter && draggableFilter[0] == \">\") {\n                draggableFilter = draggableFilter.substring(1);\n            }\n\n            target = $(e.currentTarget).closest(draggableFilter);\n\n            if (!that._dropTarget || (that.options.smartPosition && e.sender.hint.find(\".k-drag-status\").is(\".k-i-cancel,.k-svg-i-cancel\"))) {\n                return;\n            }\n\n            dropIndex = that._index(that._dropTarget);\n            sourceIndex = that._index(target);\n            sourceIndex = dropIndex > sourceIndex ? sourceIndex + 1 : sourceIndex;\n\n            if (that.options.orientation === \"horizontal\") {\n                var dropStartOffset = getOffset(that._dropTarget).left;\n                var width = outerWidth(that._dropTarget);\n\n                if (e.pageX > dropStartOffset + width / 2) {\n                    offset.left = dropStartOffset + width;\n                    dropIndex += 1;\n                } else {\n                    offset.left = dropStartOffset;\n                }\n            } else {\n                var dropStartTop = getOffset(that._dropTarget).top;\n                var height = outerHeight(that._dropTarget);\n\n                if (e.pageY > dropStartTop + height / 2) {\n                    offset.top = dropStartTop + height;\n                    dropIndex += 1;\n                } else {\n                    offset.top = dropStartTop;\n                }\n            }\n\n            that.reorderDropCue.css(offset);\n\n            if (that.options.positionDropCue) {\n                that.options.positionDropCue(that.reorderDropCue, that._dropTarget);\n            }\n\n            if (that._isPartOfSortable(target)) {\n\n                denied = (sourceIndex === dropIndex && !that.options.allowDropAfterLastItem) ||\n                    (that.options.dragOverContainers && !that.options.dragOverContainers(sourceIndex, dropIndex)) ||\n                    e.clickMoveClick && e.currentTarget.hasClass(\"k-drag-cell\") && $(e.elementUnderCursor).closest(\".k-drag-cell\").length === 0;\n\n                that.toggleHintClass(e.sender.hint, denied);\n            }\n        },\n\n        _isPartOfSortable: function(draggable) {\n            var that = this;\n\n            return that._elements.index(draggable) >= 0;\n        },\n\n        _externalDraggable: function(e) {\n            var that = this,\n                options = that.options;\n\n            if (!that._draggable && options.externalDraggable) {\n                return options.externalDraggable(e);\n            }\n\n            return null;\n        },\n\n        _isLastDraggable: function() {\n            var inSameContainer = this.options.inSameContainer,\n                draggable = this._draggable[0],\n                elements = this._elements.get(),\n                found = false,\n                item;\n\n            if (!inSameContainer) {\n                return false;\n            }\n\n            while (!found && elements.length > 0) {\n                item = elements.pop();\n                found = draggable !== item && inSameContainer({\n                    source: draggable,\n                    target: item,\n                    sourceIndex: this._index(draggable),\n                    targetIndex: this._index(item)\n                });\n            }\n\n            return !found;\n        },\n\n        _dropTargetAllowed: function(dropTarget) {\n            var inSameContainer = this.options.inSameContainer,\n                dragOverContainers = this.options.dragOverContainers,\n                draggable = this._draggable;\n\n            if (draggable[0] === dropTarget[0]) {\n                return false;\n            }\n\n            if (!inSameContainer || !dragOverContainers) {\n                return true;\n            }\n\n            if (inSameContainer({ source: draggable,\n                target: dropTarget,\n                sourceIndex: this._index(draggable),\n                targetIndex: this._index(dropTarget)\n            })) {\n                return true;\n            }\n\n            return dragOverContainers(this._index(draggable), this._index(dropTarget));\n        },\n\n        _index: function(element) {\n            return this._elements.index(element);\n        },\n\n        destroy: function() {\n           var that = this;\n\n\n           Widget.fn.destroy.call(that);\n\n           that.element.find(that.options.dropFilter).each(function() {\n               var item = $(this);\n               if (item.data(\"kendoDropTarget\")) {\n                   item.data(\"kendoDropTarget\").destroy();\n                }\n            });\n\n            if (that.draggable) {\n                that.draggable.destroy();\n\n                that.draggable.element = that.draggable = null;\n            }\n\n            that.reorderDropCue.remove();\n            that.elements = that.reorderDropCue = that._elements = that._draggable = null;\n       }\n    });\n\n    kendo.ui.plugin(Reorderable);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
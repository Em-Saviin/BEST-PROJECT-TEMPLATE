{"version":3,"sources":["raw-mjs/kendo.tabstrip.js"],"names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","keys","map","each","trim","extend","isFunction","outerWidth","template","_outerWidth","outerHeight","_outerHeight","Widget","excludedNodesRegExp","NS","HREF","PREV","NEXT","SHOW","LINK","LINK_TEXT","LAST","CLICK","IMAGE","FIRST","SELECT","ACTIVATE","CONTENT","CONTENTURL","MOUSEENTER","CONTENTLOAD","DISABLEDSTATE","ACTIVESTATE","FOCUSEDSTATE","HOVERSTATE","NAVIGATABLEITEMS","KEYBOARDNAVIGATABLEITEMS","HOVERABLEITEMS","ARIA_HIDDEN","ARIA_CONTROLS","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABELLEDBY","templates","content","data","contentAttributes","item","textWrapper","tag","contentUrl","textAttributes","image","sprite","text","itemWrapper","wrapperCssClass","group","active","imageUrl","spriteCssClass","empty","rendering","result","index","enabled","push","length","join","url","sanitizeLink","encoded","htmlEncode","attr","updateTabClasses","tabs","children","addClass","filter","prop","parent","this","is","contents","nodeName","match","nodeType","nodeValue","wrapAll","updateFirstLast","tabGroup","removeClass","scrollButtonHtml","buttonClass","iconClass","icon","ajaxXhr","current","request","ajaxSettings","xhr","event","progressUpload","progress","upload","addEventListener","evt","noProgress","XMLHttpRequest","TabStrip","init","element","options","value","that","fn","call","_animations","_contentUrls","contentUrls","_wrapper","_isRtl","support","isRtl","wrapper","_updateClasses","_dataSource","_tabindex","dataSource","fetch","_removeAdditionalWrapperClasses","_tabSizes","_tabPosition","_scrollable","_tabAlignment","_sortable","_processContentUrls","_attachEvents","_initialActivate","notify","_showWatermarkOverlay","events","dataEncodedField","dataTextField","dataContentField","dataImageUrlField","dataUrlField","dataSpriteCssClass","dataContentUrlField","tabPosition","tabAlignment","size","tabTemplate","animation","open","effects","duration","close","collapsible","navigatable","applyMinHeight","scrollable","distance","scrollButtonsPosition","scrollButtons","sortable","setDataSource","setOptions","on","_keyDownProxy","off","activateTab","find","animationSettings","hasCloseAnimation","neighbours","oldTab","itemIndex","reverse","hide","kendoRemoveClass","contentAnimators","inRequest","abort","_current","trigger","_scrollableModeActive","_scrollTabsToItem","visibleContents","contentHolder","contentElement","closest","tabsHeight","parseInt","css","kendoStop","kendoAnimate","isAjaxContent","showContentElement","removeAttr","resize","complete","oldMinHeight","showContent","ajaxRequest","kendoAddClass","link","ajaxOptions","type","cache","dataType","error","status","success","destroy","html","e","ajax","append","tab","inserted","_create","idx","tabWrapper","before","_updateContentElements","isNaN","contentElements","kineticScrollNeeded","i","len","eq","scrollContainer","touch","deactivateTab","isHidden","_refreshHandler","unbind","_scrollPrevButton","remove","_scrollNextButton","disable","_toggleDisabled","enable","state","insertAfter","referenceTab","prev","referenceContent","fromIndex","newTabsCreated","after","_moveUrlItem","insertBefore","next","items","refresh","getter","view","action","model","indexOf","field","get","reload","elements","_removeUrlItem","select","arguments","hasClass","_active","setTimeout","_endItem","_appendUrlItem","_itemClick","bind","_toggleScrollButtons","_toggleHover","_keydown","_resize","_click","prevent","isAnchor","href","collapse","oldFocusedTab","_focused","charAt","ObservableArray","toJSON","isPlainObject","Array","isArray","renderItem","tabstripContent","renderContent","applyStylesFromKendoAttributes","test","parentNode","className","getAttribute","add","candidate","preventFocus","focused","DataSource","create","_elementId","elementId","wrapperId","guid","tabStripID","_getItem","selectedItems","childNodes","_item","endItem","document","activeElement","browser","msie","setActive","j","focus","currentTarget","preventDefault","key","keyCode","rtl","isHorizontal","target","DOWN","UP","RIGHT","LEFT","ENTER","SPACEBAR","HOME","END","from","to","splice","_getChildrenWidth","width","Math","floor","_getChildrenHeight","height","scrollButtonsVisibility","isVisible","wrapperOffset","tabGroupScroll","scrollPrevButton","scrollNextButton","_scrollableAllowed","offsetWidth","offsetHeight","scrollWidth","scrollHeight","condition","enableScroll","_removeScrollableClasses","_nowScrollingTabs","mouseDown","mouseUp","isRtlScrollDirection","edge","nextIcon","scrollLeft","scrollRight","prepend","_scrollTabsByDelta","itemPosition","currentScrollOffset","scrollTop","itemSize","itemOffset","position","left","first","top","tabGroupSize","mozilla","webkit","version","animationProps","finish","animate","delta","scrOffset","jQuery","fx","axis","Sortable","holdToDrag","allowTouchActions","container","hint","el","change","_sortChange","start","reference","newIndex","oldIndex","appendTo","toggleClass","ul","disableNextButton","abs","disablePrevButton","activeItem","activeTab","wrap","prependTo","display","isInitialUpdate","tabId","contentId","setAttribute","currentContent","mobile","Scroller","touchScroller","tabStrip","templateOptions","plugin","kendo$1"],"mappings":"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","file":"kendo.tabstrip.js","sourcesContent":["import './kendo.data.js';\nimport './kendo.icons.js';\nimport './kendo.sortable.js';\n\nconst __meta__ = {\n    id: \"tabstrip\",\n    name: \"TabStrip\",\n    category: \"web\",\n    description: \"The TabStrip widget displays a collection of tabs with associated tab content.\",\n    depends: [ \"data\", \"icons\", \"sortable\" ],\n    features: [ {\n        id: \"tabstrip-fx\",\n        name: \"Animation\",\n        description: \"Support for animation\",\n        depends: [ \"fx\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        keys = kendo.keys,\n        map = $.map,\n        each = $.each,\n        trim = kendo.trim,\n        extend = $.extend,\n        isFunction = kendo.isFunction,\n        template = kendo.template,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        Widget = ui.Widget,\n        excludedNodesRegExp = /^(a|div)$/i,\n        NS = \".kendoTabStrip\",\n        IMG = \"img\",\n        HREF = \"href\",\n        PREV = \"prev\",\n        NEXT = \"next\",\n        SHOW = \"show\",\n        LINK = \"k-link\",\n        LINK_TEXT = \"k-link-text\",\n        LAST = \"k-last\",\n        CLICK = \"click\",\n        ERROR = \"error\",\n        EMPTY = \":empty\",\n        IMAGE = \"k-image\",\n        FIRST = \"k-first\",\n        SELECT = \"select\",\n        ACTIVATE = \"activate\",\n        CONTENT = \"k-tabstrip-content\",\n        CONTENTURL = \"contentUrl\",\n        MOUSEENTER = \"mouseenter\",\n        MOUSELEAVE = \"mouseleave\",\n        CONTENTLOAD = \"contentLoad\",\n        DISABLEDSTATE = \"k-disabled\",\n        ACTIVESTATE = \"k-active\",\n        FOCUSEDSTATE = \"k-focus\",\n        HOVERSTATE = \"k-hover\",\n        NAVIGATABLEITEMS = \".k-item.k-tabstrip-item:not(.\" + DISABLEDSTATE + \")\",\n        KEYBOARDNAVIGATABLEITEMS = \".k-item.k-tabstrip-item\",\n        HOVERABLEITEMS = \".k-tabstrip-items > \" + NAVIGATABLEITEMS + \":not(.\" + ACTIVESTATE + \")\",\n        DEFAULTDISTANCE = 200,\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_CONTROLS = \"aria-controls\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_ORIENTATION = \"aria-orientation\",\n        ARIA_LABELLEDBY = \"aria-labelledby\",\n\n        templates = {\n            content: (data) =>\n                `<div class='k-tabstrip-content' ${data.contentAttributes(data)} tabindex='0'>${data.content(data.item)}</div>`,\n            textWrapper: ({ tag, item , contentUrl, textAttributes, image, sprite, text }) =>\n                `<${tag(item)} class='${LINK}' ${contentUrl(item)} ${textAttributes(item)}>` + `${image(item)}${sprite(item)}` +\n                        `<span class='${LINK_TEXT}'>${text(item)}</span>` +\n                `</${tag(item)}>`,\n            item: (data) =>templates.itemWrapper(data,`${data.textWrapper(data)}`),\n            itemWrapper: (data, item) =>\n                `<li class='${data.wrapperCssClass(data.group, data.item)}' role='tab' ${data.item.active ? \"aria-selected='true'\" : ''}>` +\n                    item +\n                \"</li>\",\n            image: ({ imageUrl }) => `<img class='k-image' alt='' src='${imageUrl}' />`,\n            sprite: ({ spriteCssClass }) => `<span class='k-sprite ${spriteCssClass}'></span>`,\n            empty: () => \"\",\n        },\n\n        rendering = {\n            wrapperCssClass: function(group, item) {\n                var result = [\"k-item\", \"k-tabstrip-item\"],\n                    index = item.index;\n\n                if (item.enabled === false) {\n                    result.push(\"k-disabled\");\n                }\n\n                if (index === 0) {\n                    result.push(\"k-first\");\n                }\n\n                if (index == group.length - 1) {\n                    result.push(\"k-last\");\n                }\n\n                return result.join(\" \");\n            },\n            textAttributes: function(item) {\n                return item.url ? \" href='\" + kendo.sanitizeLink(item.url) + \"'\" : \"\";\n            },\n            text: function(item) {\n                return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n            },\n            tag: function(item) {\n                return item.url ? \"a\" : \"span\";\n            },\n            contentAttributes: function(content) {\n                return content.active !== true ? ` ${kendo.attr(\"style-display\")}=\"none\" aria-hidden='true'` : \"\";\n            },\n            content: function(item) {\n                return item.content ? item.content : item.contentUrl ? \"\" : \"&nbsp;\";\n            },\n            contentUrl: function(item) {\n                return item.contentUrl ? kendo.attr(\"content-url\") + '=\"' + item.contentUrl + '\"' : \"\";\n            }\n        };\n\n    function updateTabClasses(tabs) {\n        tabs.children(IMG)\n            .addClass(IMAGE);\n\n        tabs.children(\"a\")\n            .addClass(LINK)\n            .children(IMG)\n            .addClass(IMAGE);\n\n        tabs.filter(\"li[disabled]\")\n            .addClass(DISABLEDSTATE)\n            .attr(ARIA_DISABLED, \"true\")\n            .prop(\"disabled\", false);\n\n        tabs.filter(\":not([class*=k-state])\")\n            .children(\"a\")\n            .filter(\":focus\")\n            .parent()\n            .addClass(ACTIVESTATE);\n\n        tabs.attr(\"role\", \"tab\");\n\n        tabs.each(function() {\n            var item = $(this);\n            item.attr(ARIA_SELECTED, item.is(\".\" + ACTIVESTATE));\n\n            if (!item.children(\".\" + LINK).length) {\n                item\n                    .contents() // exclude groups, real links, templates and empty text nodes\n                    .filter(function() { return (!this.nodeName.match(excludedNodesRegExp) && !(this.nodeType == 3 && !trim(this.nodeValue))); })\n                    .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK + \"'/>\")\n                    .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK_TEXT + \"'/>\");\n            }\n        });\n\n    }\n\n    function updateFirstLast(tabGroup) {\n        const tabs = tabGroup.children(\".k-item.k-tabstrip-item\");\n\n        tabs.filter(\".k-first:not(:first-child)\").removeClass(FIRST);\n        tabs.filter(\".k-last:not(:last-child)\").removeClass(LAST);\n        tabs.filter(\":first-child\").addClass(FIRST);\n        if (tabs.length > 1) {\n            tabs.filter(\":last-child\").addClass(LAST);\n        }\n    }\n\n    function scrollButtonHtml(buttonClass, iconClass) {\n        return `<span aria-hidden='true' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-tabstrip-${buttonClass}' unselectable='on'>${kendo.ui.icon({ icon: iconClass, iconClass: \"k-button-icon\" })}</span>`;\n    }\n\n    function ajaxXhr() {\n        var current = this,\n            request = $.ajaxSettings.xhr(),\n            event = current.progressUpload ? \"progressUpload\" : current.progress ? \"progress\" : false;\n\n        if (request) {\n            $.each([ request, request.upload ], function() {\n                if (this.addEventListener) {\n                    this.addEventListener(\"progress\", function(evt) {\n                        if (event) {\n                            current[event](evt);\n                        }\n                    }, false);\n                }\n            });\n        }\n\n        current.noProgress = !(window.XMLHttpRequest && ('upload' in new XMLHttpRequest()));\n        return request;\n    }\n\n    var TabStrip = Widget.extend({\n        init: function(element, options) {\n            var that = this, value;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._animations(that.options);\n\n            options = that.options;\n\n            that._contentUrls = options.contentUrls || [];\n\n            that._wrapper();\n            that._isRtl = kendo.support.isRtl(that.wrapper);\n\n            that._updateClasses();\n            that._dataSource();\n\n            that._tabindex(that.tabGroup);\n            that.tabGroup.attr(\"role\", \"tablist\");\n\n            if (options.dataSource) {\n                that.dataSource.fetch();\n            }\n\n            that._removeAdditionalWrapperClasses();\n\n            that._tabSizes();\n            that._tabPosition();\n            that._scrollable();\n            that._tabAlignment();\n            that._sortable();\n            that._processContentUrls();\n            that._attachEvents();\n\n            if (that.options.value) {\n                value = that.options.value;\n            }\n\n            that._initialActivate();\n            that.value(value);\n            kendo.notify(that);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay(that.element[0]);\n            }\n        },\n\n        events: [\n            SELECT,\n            ACTIVATE,\n            SHOW,\n            ERROR,\n            CONTENTLOAD,\n            \"change\",\n            \"dataBinding\",\n            \"dataBound\"\n        ],\n\n        options: {\n            name: \"TabStrip\",\n            dataEncodedField: \"\",\n            dataTextField: \"\",\n            dataContentField: \"\",\n            dataImageUrlField: \"\",\n            dataUrlField: \"\",\n            dataSpriteCssClass: \"\",\n            dataContentUrlField: \"\",\n            tabPosition: \"top\",\n            tabAlignment: \"start\",\n            size: \"medium\",\n            tabTemplate: null,\n            animation: {\n                open: {\n                    effects: \"expand:vertical fadeIn\",\n                    duration: 200\n                },\n                close: { // if close animation effects are defined, they will be used instead of open.reverse\n                    duration: 200\n                }\n            },\n            collapsible: false,\n            navigatable: true,\n            contentUrls: false,\n            applyMinHeight: true,\n            scrollable: {\n                distance: DEFAULTDISTANCE,\n                scrollButtonsPosition: \"split\",\n                scrollButtons: \"auto\",\n            },\n            sortable: false\n        },\n\n        setDataSource: function(dataSource) {\n            var that = this;\n\n            that.options.dataSource = dataSource;\n            that._dataSource();\n            that.dataSource.fetch();\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                animation = that.options.animation;\n\n            that._animations(options);\n\n            if (options.contentUrls) {\n                that._contentUrls = options.contentUrls;\n            }\n\n            options.animation = extend(true, animation, options.animation);\n\n            if (options.navigatable) {\n                that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n            } else {\n                that.tabGroup.off(\"keydown\" + NS, that._keyDownProxy);\n            }\n\n            Widget.fn.setOptions.call(that, options);\n        },\n\n        activateTab: function(item) {\n            if (this.tabGroup.children(\"[data-animating]\").length) { return; }\n\n            item = this.tabGroup.find(item);\n\n            var that = this,\n                animationSettings = that.options.animation,\n                animation = animationSettings.open,\n                close = extend({}, animationSettings.close),\n                hasCloseAnimation = close && \"effects\" in close,\n                neighbours = item.parent().children(),\n                oldTab = neighbours.filter(\".\" + ACTIVESTATE),\n                itemIndex = neighbours.index(item),\n                isAnimationEnabled = animation && \"duration\" in animation && \"effects\" in animation;\n\n            close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n            // deactivate previously active tab\n            if (kendo.size(animation.effects)) {\n                oldTab.kendoRemoveClass(ACTIVESTATE, { duration: close.duration });\n                item.kendoRemoveClass(HOVERSTATE, { duration: close.duration });\n            } else {\n                oldTab.removeClass(ACTIVESTATE);\n                item.removeClass(HOVERSTATE);\n            }\n\n            // handle content elements\n            var contentAnimators = that.contentAnimators;\n\n            if (that.inRequest) {\n                that.xhr.abort();\n                that.inRequest = false;\n            }\n\n            if (contentAnimators.length === 0) {\n                that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                item.addClass(ACTIVESTATE);\n                that._current(item, true);\n\n                that.trigger(\"change\");\n\n                if (that._scrollableModeActive) {\n                    that._scrollTabsToItem(item);\n                }\n\n                return false;\n            }\n\n            var visibleContents = contentAnimators.filter(\".\" + ACTIVESTATE),\n                contentHolder = that.contentHolder(itemIndex),\n                contentElement = contentHolder.closest(\".k-tabstrip-content\");\n\n            that.tabsHeight = outerHeight(that.tabGroup) +\n                              parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                              parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n            if (contentHolder.length === 0) {\n                visibleContents\n                    .removeClass( ACTIVESTATE )\n                    .attr(ARIA_HIDDEN, true)\n                    .kendoStop(true, true)\n                    .kendoAnimate( close );\n                return false;\n            }\n\n            item.attr(\"data-animating\", true);\n\n            var isAjaxContent = (item.children(\".\" + LINK).data(CONTENTURL) || that._contentUrls[itemIndex] || false) && contentHolder.is(EMPTY),\n                showContentElement = function() {\n                    oldTab.attr(ARIA_SELECTED, false);\n                    item.attr(ARIA_SELECTED, true);\n                    that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n\n                    that._current(item, true);\n\n                    contentElement\n                        .addClass(ACTIVESTATE)\n                        .removeAttr(ARIA_HIDDEN)\n                        .kendoStop(true, true)\n                        .kendoAnimate( extend({ init: function() {\n                            that.trigger(SHOW, { item: item[0], contentElement: contentHolder[0] });\n                            kendo.resize(contentHolder);\n                        } }, animation, {\n                            complete: function() {\n                                // See https://github.com/telerik/kendo-ui-core/issues/6660\n                                that.element.css('min-height', oldMinHeight);\n                                item.removeAttr(\"data-animating\");\n\n                                that.trigger(ACTIVATE, { item: item[0], contentElement: contentHolder[0] });\n                                kendo.resize(contentHolder);\n                            }\n                        } ) );\n                },\n                showContent = function() {\n                    if (!isAjaxContent) {\n                        showContentElement();\n                        that.trigger(\"change\");\n                    } else {\n                        item.removeAttr(\"data-animating\");\n                        that.ajaxRequest(item, contentHolder, function() {\n                            item.attr(\"data-animating\", true);\n                            showContentElement();\n                            that.trigger(\"change\");\n                        });\n                    }\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n\n                };\n\n            // See https://github.com/telerik/kendo-ui-core/issues/6660\n            var oldMinHeight = that.element.css('min-height');\n\n            if (that.options.applyMinHeight) {\n                that.element.css('min-height', that.element.outerHeight());\n            }\n\n            visibleContents.removeClass(ACTIVESTATE);\n            that.tabGroup.find(\".\" + ACTIVESTATE);\n\n            if (kendo.size(animation.effects)) {\n                item.kendoAddClass(ACTIVESTATE, { duration: animation.duration });\n            } else {\n                item.addClass(ACTIVESTATE);\n            }\n\n            visibleContents.attr(ARIA_HIDDEN, true);\n\n            if (visibleContents.length) {\n                visibleContents\n                    .kendoStop(true, true)\n                    .kendoAnimate(extend( {\n                        complete: showContent\n                   }, close ));\n            } else {\n                showContent();\n            }\n\n            return true;\n        },\n\n        ajaxRequest: function(element, content, complete, url) {\n            element = this.tabGroup.find(element);\n\n            var that = this,\n                link = element.find(\".\" + LINK),\n                data = {};\n\n            url = url || link.data(CONTENTURL) || that._contentUrls[element.index()] || link.attr(HREF);\n            that.inRequest = true;\n\n            var ajaxOptions = {\n                type: \"GET\",\n                cache: false,\n                url: url,\n                dataType: \"html\",\n                data: data,\n                xhr: ajaxXhr,\n\n                error: function(xhr, status) {\n                    if (that.trigger(\"error\", { xhr: xhr, status: status })) {\n                        this.complete();\n                    }\n                },\n\n                complete: function(xhr) {\n                    that.inRequest = false;\n                },\n\n                success: function(data) {\n                    try {\n                        kendo.destroy(content);\n                        content.html(data);\n                    } catch (e) {\n                        this.error(this.xhr, \"error\");\n                    }\n\n                    if (complete) {\n                        complete.call(that, content);\n                    }\n\n                    that.trigger(CONTENTLOAD, { item: element[0], contentElement: content[0] });\n                }\n            };\n\n            if (typeof url === \"object\") {\n                ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n\n                if (isFunction(ajaxOptions.url)) {\n                    ajaxOptions.url = ajaxOptions.url();\n                }\n\n                if (isFunction(ajaxOptions.data)) {\n                    ajaxOptions.data = ajaxOptions.data();\n                }\n            }\n\n            that.xhr = $.ajax(ajaxOptions);\n        },\n\n        append: function(tab) {\n            var that = this,\n                inserted = that._create(tab);\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                that.tabGroup.append(this);\n                if (that.options.tabPosition == \"bottom\") {\n                    that.tabWrapper.before(contents);\n                } else {\n                    that.wrapper.append(contents);\n                }\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements();\n            that.resize(true);\n\n            return that;\n        },\n\n        contentElement: function(itemIndex) {\n            if (isNaN(itemIndex - 0)) {\n                return undefined$1;\n            }\n\n            var contentElements = this.contentElements && this.contentElements[0] && !kendo.kineticScrollNeeded ? this.contentElements : this.contentAnimators;\n            var id = $(this.tabGroup.children()[itemIndex]).attr(ARIA_CONTROLS);\n\n            if (contentElements) {\n                for (var i = 0, len = contentElements.length; i < len; i++) {\n                    if (contentElements.eq(i).closest(\".k-tabstrip-content\")[0].id == id) {\n                        return contentElements[i];\n                    }\n                }\n            }\n\n            return undefined$1;\n        },\n\n        contentHolder: function(itemIndex) {\n            var contentElement = $(this.contentElement(itemIndex)),\n                scrollContainer = contentElement.children(\".km-scroll-container\");\n\n            return kendo.support.touch && scrollContainer[0] ? scrollContainer : contentElement;\n        },\n\n        deactivateTab: function(item) {\n            var that = this,\n                animationSettings = that.options.animation,\n                animation = animationSettings.open,\n                close = extend({}, animationSettings.close),\n                hasCloseAnimation = close && \"effects\" in close;\n            item = that.tabGroup.find(item);\n\n            close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\n            if (kendo.size(animation.effects)) {\n                item.kendoRemoveClass(ACTIVESTATE, { duration: animation.duration });\n            } else {\n                item.removeClass(ACTIVESTATE);\n            }\n\n            item.attr(ARIA_SELECTED, false);\n            that.tabGroup.removeAttr(\"aria-activedescendant\");\n\n            that.contentAnimators\n                    .filter(\".\" + ACTIVESTATE)\n                    .kendoStop(true, true)\n                    .kendoAnimate( close )\n                    .removeClass(ACTIVESTATE)\n                    .attr(ARIA_HIDDEN, true);\n        },\n\n        _removeAdditionalWrapperClasses: function() {\n            const that = this;\n\n            that.wrapper.removeClass(\"k-tabstrip-sm k-tabstrip-md k-tabstrip-lg\");\n            that.tabGroup.removeClass(\"k-tabstrip-items-start k-tabstrip-items-center k-tabstrip-items-end k-tabstrip-items-justify k-tabstrip-items-stretched\");\n        },\n\n        destroy: function() {\n            var that = this;\n            const isHidden = that.options.scrollable && that.options.scrollable.scrollButtons === \"hidden\";\n            Widget.fn.destroy.call(that);\n\n            if (that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler);\n            }\n\n            if (that.options.scrollable && isHidden) {\n                that.tabGroup.unbind(\"scroll\" + NS);\n            }\n\n            that._removeAdditionalWrapperClasses();\n\n            that.wrapper.off(NS);\n            that.tabGroup.off(NS);\n\n            if (that._scrollableModeActive && !isHidden) {\n                that._scrollPrevButton.off().remove();\n                that._scrollNextButton.off().remove();\n            }\n\n            kendo.destroy(that.wrapper);\n        },\n\n        disable: function(element) {\n            this._toggleDisabled(element, false);\n\n            return this;\n        },\n\n        enable: function(element, state) {\n            this._toggleDisabled(element, state !== false);\n\n            return this;\n        },\n\n        insertAfter: function(tab, referenceTab) {\n            if ($(tab).is($(referenceTab))) {\n                referenceTab = this.tabGroup.find(referenceTab).prev();\n            } else {\n                referenceTab = this.tabGroup.find(referenceTab);\n            }\n\n            var that = this,\n                inserted = that._create(tab),\n                referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                referenceTab.after(this);\n                referenceContent.after(contents);\n\n                that._moveUrlItem(fromIndex, $(this).index());\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements(inserted.newTabsCreated);\n            that.resize(true);\n\n            return that;\n        },\n\n        insertBefore: function(tab, referenceTab) {\n            if ($(tab).is($(referenceTab))) {\n                referenceTab = this.tabGroup.find(referenceTab).next();\n            } else {\n                referenceTab = this.tabGroup.find(referenceTab);\n            }\n\n            var that = this,\n                inserted = that._create(tab),\n                referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                referenceTab.before(this);\n                referenceContent.before(contents);\n\n                that._moveUrlItem(fromIndex, $(this).index());\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements(inserted.newTabsCreated);\n            that.resize(true);\n\n            return that;\n        },\n\n        items: function() {\n            return this.tabGroup[0].children;\n        },\n\n        refresh: function(e) {\n            var that = this,\n                options = that.options,\n                encoded = kendo.getter(options.dataEncodedField),\n                text = kendo.getter(options.dataTextField),\n                content = kendo.getter(options.dataContentField),\n                contentUrl = kendo.getter(options.dataContentUrlField),\n                image = kendo.getter(options.dataImageUrlField),\n                url = kendo.getter(options.dataUrlField),\n                sprite = kendo.getter(options.dataSpriteCssClass),\n                idx,\n                tabs = [],\n                tab,\n                action,\n                view = that.dataSource.view(),\n                length;\n\n\n            e = e || {};\n            action = e.action;\n\n            if (action) {\n               view = e.items;\n            }\n\n            for (idx = 0, length = view.length; idx < length; idx ++) {\n                tab = {\n                    text: text(view[idx])\n                };\n\n                if (options.tabTemplate) {\n                    tab.model = view[idx];\n                    tab.template = options.tabTemplate;\n                }\n\n                if (options.dataEncodedField) {\n                    tab.encoded = encoded(view[idx]);\n                }\n\n                if (options.dataContentField) {\n                    tab.content = content(view[idx]);\n                }\n\n                if (options.dataContentUrlField) {\n                    tab.contentUrl = contentUrl(view[idx]);\n                }\n\n                if (options.dataUrlField) {\n                    tab.url = url(view[idx]);\n                }\n\n                if (options.dataImageUrlField) {\n                    tab.imageUrl = image(view[idx]);\n                }\n\n                if (options.dataSpriteCssClass) {\n                    tab.spriteCssClass = sprite(view[idx]);\n                }\n\n                tabs[idx] = tab;\n            }\n\n            if (e.action == \"add\") {\n                if (e.index < that.tabGroup.children().length) {\n                    that.insertBefore(tabs, that.tabGroup.children().eq(e.index));\n                } else {\n                    that.append(tabs);\n                }\n            } else if (e.action == \"remove\") {\n                for (idx = 0; idx < view.length; idx++) {\n                   that.remove(e.index);\n                }\n            } else if (e.action == \"itemchange\") {\n                idx = that.dataSource.view().indexOf(view[0]);\n                if (e.field === options.dataTextField) {\n                    that.tabGroup.children().eq(idx).find(\".k-link\").text(view[0].get(e.field));\n                }\n\n                if (e.field === options.dataUrlField) {\n                    that._contentUrls[idx] = view[0].get(e.field);\n                }\n            } else {\n                that.trigger(\"dataBinding\");\n                that.remove(\"li\");\n                that._contentUrls = [];\n                that.append(tabs);\n                that.trigger(\"dataBound\");\n            }\n        },\n\n        reload: function(element) {\n            element = this.tabGroup.find(element);\n            var that = this;\n            var contentUrls = that._contentUrls;\n\n            element.each(function() {\n                var item = $(this),\n                    contentUrl = item.find(\".\" + LINK).data(CONTENTURL) || contentUrls[item.index()],\n                    content = that.contentHolder(item.index());\n\n                if (contentUrl) {\n                    that.ajaxRequest(item, content, null, contentUrl);\n                }\n            });\n\n            return that;\n        },\n\n        remove: function(elements) {\n            var that = this;\n            var type = typeof elements;\n            var contents;\n\n            if (type === \"string\") {\n                elements = that.tabGroup.find(elements);\n            } else if (type === \"number\") {\n                elements = that.tabGroup.children().eq(elements);\n            }\n\n            contents = elements.map(function() {\n                var idx = $(this).index();\n                var content = that.contentElement(idx);\n\n                kendo.destroy(content);\n                that._removeUrlItem(idx);\n\n                return content;\n            });\n\n            elements.remove();\n            contents.empty();\n            contents.remove();\n\n            that._updateContentElements();\n            that.resize(true);\n\n            return that;\n        },\n\n        select: function(element) {\n            var that = this;\n\n            if (arguments.length === 0) {\n                return that.tabGroup.children(\"li.\" + ACTIVESTATE);\n            }\n\n            if (!isNaN(element)) {\n                element = that.tabGroup.children().get(element);\n            }\n\n            element = that.tabGroup.find(element);\n            $(element).each(function(index, item) {\n                item = $(item);\n                if (!item.hasClass(ACTIVESTATE) && !that.trigger(SELECT, { item: item[0], contentElement: that.contentHolder(item.index())[0] })) {\n                    that.activateTab(item);\n                    that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n                }\n            });\n\n            return that;\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value !== undefined$1) {\n                if (value != that.value()) {\n                   that.tabGroup.children().each(function() {\n                        if (kendo.trim($(this).text()) == value) {\n                            that.select(this);\n                        }\n                   });\n                }\n            } else {\n                return that.select().text();\n            }\n        },\n\n        _tabAlignment: function() {\n            const that = this;\n\n            let tabAlignment = that.options.tabAlignment;\n\n            if (that._scrollableModeActive) {\n                tabAlignment = 'start';\n            }\n\n            that.tabGroup.addClass(\"k-tabstrip-items-\" + tabAlignment);\n\n        },\n\n        _active: function() {\n            var that = this;\n            setTimeout(function() {\n                var item = that.tabGroup.children().filter(\".\" + ACTIVESTATE);\n\n                item = item[0] ? item : that._endItem(\"first\");\n                if (item[0]) {\n                    that._current(item);\n                }\n            }, 100);\n        },\n\n        _animations: function(options) {\n            if (options && (\"animation\" in options) && !options.animation) {\n                options.animation = { open: { effects: {} }, close: { effects: {} } }; // No animation\n            }\n        },\n\n        _appendUrlItem: function(url) {\n            this._contentUrls.push(url);\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                options = that.options;\n\n            that.tabGroup\n                .on(CLICK + NS, \".k-disabled .k-link\", false)\n                .on(CLICK + NS, \" > \" + NAVIGATABLEITEMS, that._itemClick.bind(that));\n\n            that.wrapper.on(\"focus\" + NS, function() { that.tabGroup.trigger(\"focus\"); });\n\n            if (options.scrollable && options.scrollable.scrollButtons === \"hidden\") {\n                that.tabGroup.bind(\"scroll\", function(e) {\n                    that._toggleScrollButtons();\n                });\n            }\n\n            that.tabGroup\n                .on(MOUSEENTER + NS + \" \" + MOUSELEAVE + NS, HOVERABLEITEMS, that._toggleHover)\n                .on(\"focus\" + NS, that._active.bind(that))\n                .on(\"blur\" + NS, function() { that._current(null); });\n\n            that._keyDownProxy = that._keydown.bind(that);\n\n            if (options.navigatable) {\n                that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n            }\n\n            $(window).on('resize' + NS, that._resize.bind(that));\n        },\n\n        _click: function(item) {\n            var that = this,\n                link = item.find(\".\" + LINK),\n                href = link.attr(HREF),\n                collapse = that.options.collapsible,\n                index = item.index(),\n                contentHolder = that.contentHolder(index),\n                prevent, isAnchor,\n                neighbours = item.parent().children(),\n                oldFocusedTab = neighbours.filter(\".\" + FOCUSEDSTATE);\n\n            if (item.closest(\".k-tabstrip\")[0] != that.wrapper[0]) {\n                return;\n            }\n\n            if (item.is(\".\" + DISABLEDSTATE + (!collapse ? \",.\" + ACTIVESTATE : \"\"))) {\n                oldFocusedTab.removeClass(FOCUSEDSTATE);\n                that._focused = item;\n\n                item.addClass(FOCUSEDSTATE);\n                that._current(item);\n\n                if (that._scrollableModeActive) {\n                    that._scrollTabsToItem(item);\n                }\n                return true;\n            }\n\n            isAnchor = link.data(CONTENTURL) || that._contentUrls[index] || (href && (href.charAt(href.length - 1) == \"#\" || href.indexOf(\"#\" + that.element[0].id + \"-\") != -1));\n            prevent = !href || isAnchor;\n\n            if (that.tabGroup.children(\"[data-animating]\").length) {\n                return prevent;\n            }\n\n            if (that.trigger(SELECT, { item: item[0], contentElement: contentHolder[0] })) {\n                return true;\n            }\n\n            if (prevent === false) {\n                return;\n            }\n\n            if (collapse && item.is(\".\" + ACTIVESTATE)) {\n                that.deactivateTab(item);\n                return true;\n            }\n\n            if (that.activateTab(item)) {\n                that._current(item);\n                prevent = true;\n            }\n\n            return prevent;\n        },\n\n        _create: function(tab) {\n            var that = this,\n            tabs,\n            contents,\n            content,\n            newTabsCreated = false;\n\n            tab = tab instanceof kendo.data.ObservableArray ? tab.toJSON() : tab;\n\n            if ($.isPlainObject(tab) || Array.isArray(tab)) {\n                tab = Array.isArray(tab) ? tab : [tab];\n                newTabsCreated = true;\n\n                tabs = map(tab, function(value, idx) {\n                            that._appendUrlItem(tab[idx].contentUrl || null);\n\n                            return $(TabStrip.renderItem({\n                                group: that.tabGroup,\n                                item: extend(value, { index: idx })\n                            }));\n                        });\n\n                contents = map( tab, function(value, idx) {\n                            if (typeof value.content == \"string\" || value.contentUrl) {\n                                let tabstripContent = $(TabStrip.renderContent({\n                                    item: extend(value, { index: idx })\n                                }));\n\n                                kendo.applyStylesFromKendoAttributes(tabstripContent, [\"display\"]);\n                                return tabstripContent;\n                            }\n                        });\n            } else {\n                if (typeof tab == \"string\" && tab[0] != \"<\") {\n                    tabs = that.element.find(tab);\n                } else {\n                    tabs = $(tab);\n                }\n                contents = $();\n                tabs.each(function() {\n                    if (/k-tabstrip-items/.test(this.parentNode.className)) {\n                        var element = that.element.find(\"[id='\" + this.getAttribute(ARIA_CONTROLS) + \"']\");\n                        content = element;\n                    } else {\n                        content = $(\"<div class='\" + CONTENT + \"'/>\");\n                    }\n\n                    contents = contents.add(content);\n                });\n\n                updateTabClasses(tabs);\n            }\n\n            return { tabs: tabs, contents: contents, newTabsCreated: newTabsCreated };\n        },\n\n        _current: function(candidate, preventFocus) {\n            var that = this,\n                focused = that._focused;\n\n            if (candidate === undefined$1) {\n                return focused;\n            }\n\n            if (focused && candidate && focused[0] === candidate[0]) {\n                focused = false;\n            }\n\n            if (focused) {\n                focused.removeClass(FOCUSEDSTATE);\n            }\n\n            if (candidate && !preventFocus) {\n                candidate.addClass(FOCUSEDSTATE);\n            }\n\n            that._focused = candidate;\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            that.dataSource = kendo.data.DataSource.create(that.options.dataSource)\n                                .bind(\"change\", that._refreshHandler);\n        },\n\n        _elementId: function(element, idx, tab) {\n            var elementId = element.attr(\"id\"),\n                wrapperId = this.element.attr(\"id\"),\n                guid = kendo.guid();\n\n            if (!elementId || elementId.indexOf(wrapperId + \"-\") > -1) {\n                var tabStripID = (wrapperId || guid) + \"-\";\n\n                if (tab) {\n                    tabStripID += \"tab-\";\n                }\n\n                return tabStripID + (idx + 1);\n            }\n\n            return elementId;\n        },\n\n        _endItem: function(action) {\n            return this.tabGroup.children(NAVIGATABLEITEMS)[action]();\n        },\n\n        _getItem: function(action) {\n            return this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[action]();\n        },\n\n        _initialActivate: function() {\n            var that = this,\n                selectedItems = that.tabGroup.children(\"li.\" + ACTIVESTATE),\n                content = that.contentHolder(selectedItems.index());\n\n            if (selectedItems[0] && content.length > 0 && content[0].childNodes.length === 0) {\n                that.activateTab(selectedItems.eq(0));\n            }\n        },\n\n        _item: function(item, action) {\n            var endItem;\n            if (action === PREV) {\n                endItem = \"last\";\n            } else {\n                endItem = \"first\";\n            }\n\n            if (!item) {\n                return this._endItem(endItem);\n            }\n\n            item = item[action]();\n\n            if (!item[0]) {\n                item = this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[endItem]();\n            }\n\n            if (item.hasClass(DISABLEDSTATE)) {\n                item.addClass(FOCUSEDSTATE);\n            }\n            if (item.hasClass(DISABLEDSTATE) || item.hasClass(ACTIVESTATE)) {\n                this._focused = item;\n            }\n\n            return item;\n        },\n\n        _itemClick: function(e) {\n            var that = this,\n                tabGroup = that.tabGroup[0];\n\n            if (tabGroup !== document.activeElement) {\n                var msie = kendo.support.browser.msie;\n                if (msie) {\n                    try {\n                        // does not scroll to the active element\n                        tabGroup.setActive();\n                    } catch (j) {\n                        tabGroup.focus();\n                    }\n                } else {\n                    tabGroup.focus();\n                }\n            }\n\n            if (that._click($(e.currentTarget))) {\n                e.preventDefault();\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                current = that._current(),\n                rtl = that._isRtl,\n                isHorizontal = /top|bottom/.test(that.options.tabPosition),\n                action;\n\n            if (e.target != e.currentTarget || !current) {\n                return;\n            }\n\n            if (key === keys.DOWN && !isHorizontal) {\n                action = NEXT;\n            } else if (key === keys.UP && !isHorizontal) {\n                action = PREV;\n            } else if (key === keys.RIGHT && isHorizontal) {\n                action = rtl ? PREV : NEXT;\n            } else if (key === keys.LEFT && isHorizontal) {\n                action = rtl ? NEXT : PREV;\n            } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                that._click(current);\n                e.preventDefault();\n            } else if (key == keys.HOME) {\n                that._click(that._getItem(\"first\"));\n                e.preventDefault();\n                return;\n            } else if (key == keys.END) {\n                that._click(that._getItem(\"last\"));\n                e.preventDefault();\n                return;\n            }\n\n            if (action) {\n                that._click(that._item(current, action));\n                e.preventDefault();\n            }\n        },\n\n        _moveUrlItem: function(from, to) {\n            this._contentUrls.splice(to, 0, this._contentUrls.splice(from, 1)[0]);\n        },\n\n        _processContentUrls: function() {\n            var that = this;\n\n            if (that._contentUrls.length) {\n                that.tabGroup.children(\".k-item.k-tabstrip-item\")\n                    .each(function(index, item) {\n                        var url = that._contentUrls[index];\n\n                        if (typeof url === 'string') {\n                            $(item).find(\">.\" + LINK).data(CONTENTURL, url);\n                        }\n                    });\n            } else {\n                that._contentUrls.length = that.tabGroup.find(\"li.k-item.k-tabstrip-item\").length;\n            }\n        },\n\n        _removeUrlItem: function(index) {\n            this._contentUrls.splice(index, 1);\n        },\n\n        _resize: function() {\n            this._scrollable();\n        },\n\n        _getChildrenWidth: function(element) {\n            let width = 0;\n            element.children().each(function() {\n                width += outerWidth($(this));\n            });\n            return Math.floor(width);\n        },\n\n        _getChildrenHeight: function(element) {\n            let height = 0;\n            element.children().each(function() {\n                height += outerHeight($(this));\n            });\n            return Math.floor(height);\n        },\n\n        _scrollable: function() {\n            const that = this,\n                options = that.options,\n                scrollButtonsPosition = options.scrollable.scrollButtonsPosition,\n                scrollButtonsVisibility = options.scrollable.scrollButtons,\n                isHorizontal = options.tabPosition == \"top\" || options.tabPosition == \"bottom\",\n                isHidden = scrollButtonsVisibility === \"hidden\",\n                isVisible = scrollButtonsVisibility === \"visible\";\n\n            let wrapperOffset,\n            tabGroupScroll,\n                scrollPrevButton,\n                scrollNextButton;\n\n            if (that._scrollableAllowed()) {\n\n                that.wrapper.addClass(\"k-tabstrip-scrollable\");\n\n                wrapperOffset = isHorizontal ? that.wrapper[0].offsetWidth : that.wrapper[0].offsetHeight;\n                tabGroupScroll = isHorizontal ? that.tabGroup[0].scrollWidth : that.tabGroup[0].scrollHeight;\n                const condition = isHorizontal ? (that._getChildrenWidth(that.tabGroup) > that.tabGroup.outerWidth()) : (that._getChildrenHeight(that.tabGroup) > that.tabGroup.outerHeight());\n                const enableScroll = (tabGroupScroll > wrapperOffset) || condition;\n\n                if (enableScroll && !that._scrollableModeActive && isHidden) {\n                    that.tabGroup.addClass(\"k-tabstrip-items-scroll\");\n                    that.wrapper.addClass(\"k-tabstrip-scrollable-overlay\");\n\n                    that._scrollableModeActive = true;\n                    that._toggleScrollButtons();\n                } else if ((enableScroll || isVisible) && !that._scrollableModeActive) {\n                    that._nowScrollingTabs = false;\n                    that._isRtl = kendo.support.isRtl(that.element);\n                    const mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                    const mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                    const browser = kendo.support.browser;\n                    const isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n                    const prevIcon = isHorizontal ? \"caret-alt-left\" : \"caret-alt-up\";\n                    const nextIcon = isHorizontal ? \"caret-alt-right\" : \"caret-alt-down\";\n\n                    const scrollLeft = scrollButtonHtml(\"prev\", prevIcon);\n                    const scrollRight = scrollButtonHtml(\"next\", nextIcon);\n\n                    switch (scrollButtonsPosition) {\n                        case 'split':\n                            that.tabWrapper.prepend(scrollLeft);\n                            that.tabWrapper.append(scrollRight);\n                            break;\n                        case 'start':\n                            that.tabWrapper.prepend(scrollRight);\n                            that.tabWrapper.prepend(scrollLeft);\n                            break;\n                        case 'end':\n                            that.tabWrapper.append(scrollLeft);\n                            that.tabWrapper.append(scrollRight);\n                            break;\n                    }\n\n                    scrollPrevButton = that._scrollPrevButton = that.tabWrapper.children(\".k-tabstrip-prev\");\n                    scrollNextButton = that._scrollNextButton = that.tabWrapper.children(\".k-tabstrip-next\");\n\n                    scrollPrevButton.on(mouseDown + NS, function() {\n                        that._nowScrollingTabs = true;\n                        that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? 1 : -1));\n                    });\n\n                    scrollNextButton.on(mouseDown + NS, function() {\n                        that._nowScrollingTabs = true;\n                        that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? -1 : 1));\n                    });\n\n                    scrollPrevButton.add(scrollNextButton).on(mouseUp + NS, function() {\n                        that._nowScrollingTabs = false;\n                    });\n\n                    that._scrollableModeActive = true;\n\n                    that._toggleScrollButtons();\n                } else if (that._scrollableModeActive && !enableScroll && !isVisible) {\n                    that._scrollableModeActive = false;\n\n                   that._removeScrollableClasses();\n\n                   that._scrollPrevButton && that._scrollPrevButton.off().remove();\n                   that._scrollNextButton && that._scrollNextButton.off().remove();\n                } else if (!that._scrollableModeActive && !isVisible) {\n                    that._removeScrollableClasses();\n                } else {\n                    that._toggleScrollButtons();\n                }\n            }\n        },\n\n        _removeScrollableClasses: function() {\n            const that = this;\n            const isHidden = that.options.scrollable.scrollButtons === \"hidden\";\n\n            that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n\n            if (isHidden) {\n                that.wrapper.removeClass(\"k-tabstrip-scrollable-overlay\");\n                that.wrapper.removeClass(\"k-tabstrip-scrollable-start\");\n                that.wrapper.removeClass(\"k-tabstrip-scrollable-end\");\n\n                that.tabGroup.removeClass(\"k-tabstrip-items-scroll\");\n            }\n        },\n\n        _scrollableAllowed: function() {\n            var options = this.options;\n\n            if (options.scrollable && !options.scrollable.distance) {\n                options.scrollable = { distance: DEFAULTDISTANCE };\n            }\n            return options.scrollable && !isNaN(options.scrollable.distance);\n        },\n\n        _scrollTabsToItem: function(item) {\n            var that = this,\n                tabGroup = that.tabGroup,\n                isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\",\n                currentScrollOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop(),\n                itemSize = isHorizontal ? outerWidth(item) : outerHeight(item),\n                itemOffset = isHorizontal ? (that._isRtl ? item.position().left : item.position().left - tabGroup.children().first().position().left) : item.position().top,\n                tabGroupSize = isHorizontal ? tabGroup[0].offsetWidth : tabGroup[0].offsetHeight,\n                browser = kendo.support.browser,\n                itemPosition;\n\n            if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                currentScrollOffset = currentScrollOffset * -1;\n            }\n\n            if (that._isRtl && isHorizontal) {\n                if (itemOffset < 0) {\n                    itemPosition = currentScrollOffset + itemOffset - (tabGroupSize - currentScrollOffset);\n                } else if (itemOffset + itemSize > tabGroupSize) {\n                    itemPosition = currentScrollOffset + itemOffset - itemSize;\n                }\n            } else {\n                if (currentScrollOffset + tabGroupSize < itemOffset + itemSize) {\n                    itemPosition = itemOffset + itemSize - tabGroupSize;\n                } else if (currentScrollOffset > itemOffset) {\n                    itemPosition = itemOffset;\n                }\n            }\n\n            var animationProps = isHorizontal ? { \"scrollLeft\": itemPosition } : { \"scrollTop\": itemPosition };\n\n            tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                that._toggleScrollButtons();\n            });\n        },\n\n        _scrollTabsByDelta: function(delta) {\n            const that = this;\n            const tabGroup = that.tabGroup;\n            const isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n            let scrOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop();\n            const browser = kendo.support.browser;\n\n            if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrOffset = scrOffset * -1;\n            }\n\n            var animationProps = isHorizontal ? { \"scrollLeft\": scrOffset + delta } : { \"scrollTop\": scrOffset + delta };\n\n            tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                if (that._nowScrollingTabs && !jQuery.fx.off) {\n                    that._scrollTabsByDelta(delta);\n                } else {\n                    that._toggleScrollButtons();\n                }\n            });\n        },\n\n        _sortable: function() {\n            var that = this,\n            options = that.options,\n            position = options.tabPosition,\n            isHidden = options.scrollable && options.scrollable.scrollButtons === \"hidden\",\n            axis = position === 'left' || position === 'right' ? 'y' : 'x';\n\n            if (!that.options.sortable) {\n                return;\n            }\n\n            that.sortable = new kendo.ui.Sortable(that.tabGroup, {\n                filter: \"li.k-item.k-tabstrip-item\",\n                axis,\n                holdToDrag: isHidden,\n                allowTouchActions: isHidden,\n                container: that.tabWrapper,\n                hint: el => `<div id='hint' class='k-tabstrip k-tabstrip-${position}'>\n                                <div class= 'k-tabstrip-items-wrapper k-hstack'>\n                                    <ul class='k-tabstrip-items k-reset'>\n                                        <li class='k-item k-tabstrip-item k-first k-active'>${el.html()}</li>\n                                    </ul>\n                                </div>\n                            </div>`,\n                change: that._sortChange.bind(that),\n                start: e => that.activateTab(e.item)\n            });\n\n        },\n\n        _sortChange: function(e) {\n            var that = this,\n                reference = that.tabGroup.children().eq(e.newIndex);\n\n            if (e.oldIndex < e.newIndex) {\n                that.insertAfter(e.item, reference);\n            } else {\n                that.insertBefore(e.item, reference);\n            }\n        },\n\n        _tabSizes: function() {\n            const that = this;\n            const tabSize = that.options.size;\n\n            let className;\n            switch (tabSize) {\n                case \"small\":\n                    className = \"k-tabstrip-sm\";\n                    break;\n\n                case \"medium\":\n                    className = \"k-tabstrip-md\";\n                    break;\n\n                case \"large\":\n                    className = \"k-tabstrip-lg\";\n                    break;\n            }\n\n            that.wrapper.addClass(className);\n        },\n\n        _tabPosition: function() {\n            var that = this,\n                tabPosition = that.options.tabPosition;\n\n            that.wrapper.addClass(\"k-tabstrip-\" + tabPosition);\n\n            if (tabPosition == \"bottom\") {\n                that.tabWrapper.appendTo(that.wrapper);\n            }\n\n            if (tabPosition === \"left\" || tabPosition === \"right\") {\n                that.tabGroup.attr(ARIA_ORIENTATION, \"vertical\");\n            }\n\n            that.resize(true);\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVERSTATE, e.type == MOUSEENTER);\n        },\n\n        _toggleDisabled: function(element, enable) {\n            element = this.tabGroup.find(element);\n            element.each(function() {\n                $(this)\n                    .toggleClass(DISABLEDSTATE, !enable)\n                    .attr(ARIA_DISABLED, !enable);\n            });\n        },\n\n        _toggleScrollButtons: function() {\n            var that = this,\n                ul = that.tabGroup,\n                scrollLeft = Math.floor(kendo.scrollLeft(ul)),\n                scrollTop = Math.floor(ul.scrollTop()),\n                scrollButtonsVisibility = that.options.scrollable.scrollButtons,\n                isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                const disableNextButton = (isHorizontal ? Math.abs(scrollLeft - (ul[0].scrollWidth - ul[0].offsetWidth)) : Math.abs(scrollTop - (ul[0].scrollHeight - ul[0].offsetHeight))) <= 1;\n                const disablePrevButton = (isHorizontal ? scrollLeft : scrollTop) === 0;\n\n                if (scrollButtonsVisibility !== \"hidden\") {\n                    that._scrollPrevButton.toggleClass('k-disabled', disablePrevButton);\n                    that._scrollNextButton.toggleClass('k-disabled', disableNextButton);\n                } else {\n                    that.wrapper.toggleClass(\"k-tabstrip-scrollable-start\", disablePrevButton);\n                    that.wrapper.toggleClass(\"k-tabstrip-scrollable-end\", disableNextButton);\n                }\n        },\n\n        _updateClasses: function() {\n            var that = this,\n                tabs, activeItem, activeTab;\n            var isHorizontal = /top|bottom/.test(that.options.tabPosition);\n\n            that.wrapper.addClass(\"k-tabstrip\");\n\n            if (!that.tabGroup) {\n                that.tabGroup = that.wrapper.children(\"ul\");\n                that.tabGroup.wrap('<div />');\n                that.tabWrapper = that.tabGroup.parent();\n            }\n\n            if (!that.tabGroup[0]) {\n                that.tabGroup = $(\"<ul />\").prependTo(that.wrapper);\n                that.tabGroup.wrap('<div />');\n                that.tabWrapper = that.tabGroup.parent();\n            }\n\n            that.tabWrapper.addClass('k-tabstrip-items-wrapper');\n            that.tabWrapper.addClass(isHorizontal ? 'k-hstack' : 'k-vstack');\n            that.tabGroup.addClass('k-tabstrip-items k-reset');\n\n            tabs = that.tabGroup.find(\"li\").addClass(\"k-item k-tabstrip-item\");\n\n            if (tabs.length) {\n                activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n                activeTab = activeItem >= 0 ? activeItem : undefined$1;\n\n                that.tabGroup // Remove empty text nodes\n                    .contents()\n                    .filter(function() { return (this.nodeType == 3 && !trim(this.nodeValue)); })\n                    .remove();\n            }\n\n            that.contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n            that.contentElements\n                .addClass(CONTENT)\n                .eq(activeTab)\n                .addClass(ACTIVESTATE)\n                .css({ display: \"block\" });\n\n            if (tabs.length) {\n                updateTabClasses(tabs);\n                activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n\n                that.tabGroup.attr(\"aria-activedescendant\", tabs.eq(activeItem).attr(\"id\"));\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(true);\n            }\n        },\n\n        _updateContentElements: function(isInitialUpdate) {\n            var that = this,\n                contentUrls = that._contentUrls,\n                items = that.tabGroup.children(\".k-item.k-tabstrip-item\"),\n                contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"),\n                _elementId = that._elementId.bind(that);\n\n            if (contentElements.length && (items.length > contentElements.length)) {\n                contentElements.each(function(idx) {\n                    // Generate an ID for each content element\n                    var contentId = _elementId($(this), idx),\n                        item = items.filter(\"[aria-controls=\" + (contentId || 0) + \"]\")[0],\n                        tabId;\n\n                    if (!item && isInitialUpdate) {\n                        // On initialization of the widget get the tab by its index\n                        item = items[idx];\n                    }\n\n                    if (item) {\n                        // set the tab aria-controls attribute to the content ID\n                        item.setAttribute(ARIA_CONTROLS, contentId);\n                        tabId = item.id = _elementId($(item), idx, true);\n                        this.setAttribute(ARIA_LABELLEDBY, tabId);\n                    }\n\n                    // set the get (possibly existing) ID on the content element\n                    this.setAttribute(\"id\", contentId);\n                });\n            } else {\n                items.each(function(idx) {\n                    var currentContent = contentElements.eq(idx),\n                        contentId = _elementId(currentContent, idx),\n                        tabId;\n\n                    // set the tab aria-controls attribute to the content ID\n                    this.setAttribute(ARIA_CONTROLS, contentId);\n\n                    tabId = this.id = _elementId($(this), idx, true);\n\n                    if (!currentContent.length && contentUrls[idx]) {\n                        // Append content element in case contentUrl is used\n                        $(\"<div class='\" + CONTENT + \"'/>\").appendTo(that.wrapper).attr(\"id\", contentId);\n                    } else {\n                        // set the ID on the content element\n                        currentContent.attr(\"id\", contentId);\n                    }\n\n                    currentContent.attr(\"role\", \"tabpanel\");\n                    currentContent.attr(\"tabindex\", \"0\");\n                    currentContent.attr(ARIA_LABELLEDBY, tabId);\n                    currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n                });\n            }\n\n            that.contentElements = that.contentAnimators = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"); // refresh the contents\n\n            that.tabsHeight = outerHeight(that.tabGroup) +\n                              parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                              parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n            if (kendo.kineticScrollNeeded && kendo.mobile.ui.Scroller) {\n                kendo.touchScroller(that.contentElements);\n                that.contentElements = that.contentElements.children(\".km-scroll-container\");\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n\n            if (that.element.is(\"ul\")) {\n                that.wrapper = that.element.wrapAll(\"<div />\").parent();\n            } else {\n                that.wrapper = that.element;\n            }\n        }\n    });\n\n    // client-side rendering\n    extend(TabStrip, {\n        renderItem: function(options) {\n            options = extend({ tabStrip: {}, group: {} }, options);\n\n            var empty = templates.empty,\n                item = options.item,\n                templateOptions = extend(options, {\n                    image: item.imageUrl ? templates.image : empty,\n                    sprite: item.spriteCssClass ? templates.sprite : empty,\n                    textWrapper: templates.textWrapper\n                }, rendering);\n\n                if (item.template) {\n                    return templates.itemWrapper(templateOptions, kendo.template(item.template)(item.model));\n                }\n\n            return templates.item(templateOptions);\n        },\n\n        renderContent: function(options) {\n            return templates.content(extend(options, rendering));\n        }\n    });\n\n    kendo.ui.plugin(TabStrip);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
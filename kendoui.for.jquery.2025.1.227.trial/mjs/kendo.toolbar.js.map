{"version":3,"sources":["raw-mjs/kendo.toolbar.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","isFunction","keys","outerWidth","_outerWidth","ns","TOOLBAR","KBUTTON","BUTTON_GROUP","SPLIT_BUTTON","MENU_BUTTON","KSEPARATOR","SPACER_CLASS","STATE_SELECTED","STATE_DISABLED","STATE_HIDDEN","FORCE_HIDDEN","GROUP_START","GROUP_END","MENU_LINK","MENU_ITEM","OVERFLOW_ANCHOR","TEMPLATE_ITEM","MENU_LINK_TOGGLE","DROPDOWNLIST","INPUT_BUTTON","KFOCUS","TABINDEX_MINUS_1","TOOLBAR_TOOL","ARIA_CHECKED","ARIA_LABEL","CHANGE","CLICK","TOGGLE","OPEN","CLOSE","FOCUS","KEYDOWN","SPACER","ROLE","ITEM_REF","SEPARATOR","OVERFLOW","TABINDEX","INPUT","SELECT","GROUP","DATA_UID","DATA_ROLE_SELECTOR","DATA_TOGGLE_SELECTOR","DATA_ROLE_BUTTONMENU","ITEM_REF_SELECTOR","KENDO_FOCUSABLE","OVERFLOW_OPEN","OVERFLOW_CLOSE","OVERFLOW_NEVER","OVERFLOW_AUTO","OVERFLOW_ALWAYS","KENDO_UID_ATTR","attr","NOTHING","DASH","EMPTY","DOT","COMMA","ID","UID","K_DROP_DOWN_BUTTON","K_SPLIT_BUTTON","K_TOGGLE_BUTTON","K_BUTTON_GROUP","toolbar","WIDGET_TYPES","button","splitButton","dropDownButton","buttonGroup","popupButton","open","TOOLBAR_TOOLS_CLASSES","Button","ToggleButton","SplitButton","DropDownButton","ButtonGroup","ColorPicker","Switch","SAFE_COMPONENTS","POPUP_BUTTON_TEMPLATE","icon","SEPARATOR_EL","ToolBar","extend","init","element","options","fn","call","this","_isRtl","support","isRtl","uid","guid","wrapper","addClass","resizable","hasOverflowButton","includes","overflow","mode","_resizable","tools","length","items","_extendToolsOptions","_items","_scrollable","_attachEvents","_tabIndex","_applyCssClasses","containerWidth","find","offsetWidth","innerWidth","_shrink","overflowAnchorSeparator","appendTo","overflowAnchor","_toggleOverflowAnchor","_toggleScrollButtons","notify","events","navigateOnTab","evaluateTemplates","size","fillMode","scrollButtons","scrollButtonsPosition","scrollDistance","destroy","that","unbindResize","_resizeHandler","overflowMenu","overflowSection","unbind","_removeScrollableClasses","each","i","el","popup","popupWrapper","chooser","getKendoButton","remove","off","removeAttr","children","add","_add","resize","_scrollableAllowed","isNaN","_getScrollButtonHtml","buttonClass","html","renderButton","type","_getChildrenWidth","width","Math","floor","isHidden","removeClass","toolbarElement","scrollPrevButton","scrollNextButton","useNativeScrolling","wrapInner","scrollableElement","wrapperOffset","tabGroupScroll","scrollWidth","condition","enableScroll","_scrollableModeActive","_scrollPrevButton","_scrollNextButton","_nowScrollingTabs","mouseDown","touch","mouseUp","browser","isRtlScrollDirection","msie","edge","prevIcon","nextIcon","scrollLeftButtonHtml","scrollRightButtonHtml","prepend","append","on","_scrollTabsByDelta","delta","scrOffset","scrollLeft","mozilla","webkit","version","animationProps","finish","animate","jQuery","fx","forceHideButtons","scrollButtonsVisibility","disableNextButton","abs","disablePrevButton","toggleClass","shouldHideScrollButtons","enable","candidate","focused","_getUid","item","_getItem","overflowItem","_getOverflowItem","component","enableItem","hasClass","is","trigger","buttonsPopupItem","widgetInstance","closest","menuItem","getSelectedFromGroup","groupName","filter","hide","elements","parentGroupEl","hideItem","isOverflowItem","templateEl","toolbarEl","parent","data","_groupVisibleButtons","addBack","_resetTabIndex","_getAllItems","first","removeItem","siblings","show","showItem","toggle","checked","toggleItem","group","parentGroup","_toggleIndex","index","toggleTools","conditions","focusable","not","elm","tool","widget","toToggle","_generateToolElement","template","overflowTemplate","processed","_addTemplate","_addCustomWidget","_addDefaultTool","_addSpacer","_addSeparator","_processOptions","insertBefore","_overflowSectionContentElement","sectionElement","_addAttributes","attributes","classes","hidden","align","class","forEach","groupClass","result","overflowComponent","_addMenuItem","componentOptions","indexOf","wrap","op","_addToolbarTool","menuitem","selected","showIcon","imageUrl","showText","text","encoded","last","togglable","menuButtons","buttons","click","bind","e","_onMenuItemSelect","_addPopupButton","widgetElement","popupComponent","kendoPopup","anchor","preventDefault","commandOn","target","value","close","separator","overflowSeparator","sectionSeparator","sectionSeparatorOptions","destinationElement","spacer","inputsInTemplate","popupRef","hasButtons","primary","themeColor","url","sanitizeLink","preventKeyNav","_attachWidgetEvents","_resetOpen","extensions","_keydown","_focusIn","_focusOut","_onClick","_onToggle","_onSelect","_onOpen","_onClose","$el","originalEvent","event","_childrenWidth","gap","parseInt","css","childrenWidth","ceil","flatMap","_mapTool","parentMessages","defaultTools","isSection","style","visibility","knownUid","container","uidSelector","buttonsPopups","_getNextElement","direction","itemIndex","parentElement","focusableItem","visibleBtns","_hideItem","eq","menu","list","_showMenuItem","_hideMenuItem","keyCode","templateItem","isOverflowAnchor","isInSection","ESC","stopPropagation","_keyDeactivateTemplate","ENTER","_keyActivateTemplate","altKey","DOWN","SPACEBAR","_keyOpenOverflow","HOME","_keyFocusFirst","END","_keyFocusLast","RIGHT","LEFT","_keyFocusNext","innerFocusable","pagerTool","innerWidget","visible","next","_mapAttributes","toolOptions","messages","property","title","command","dialog","toggleCondition","_mapComponent","componentMessages","componentPlaceholder","placeholder","dataSource","default","Object","JSON","stringify","key","ev","sender","map","isBuiltInTool","originalTool","isArray","Array","isPlainObjectTool","isPlainObject","toolKeysCount","t","deepExtend","_menuItemSelect","shouldSelect","twin","replace","current","select","setTimeout","menuEl","dataUidSelector","mainItem","_processInner","parentUid","rootUid","some","b","every","selection","enabled","_renderOverflow","horizontalDirection","overflowMode","kendoButton","Popup","getValidCssClass","origin","position","activate","firstFocusableSectionItem","ContextMenu","showOn","alignToAnchor","uploadWrapper","input","one","files","toFocus","onResize","_resize","popupBtnElements","_stretch","commandElement","visibleCommands","activeElement","_showItem","itemOuterWidth","hiddenCommands","focusableItems","firstFocusable","Item","Class","OverflowButton","TemplateItem","ToolBarButton","registerComponent","cssProperties","registerPrefix","registerValues","prop","values","plugin","kendo$1"],"mappings":"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","file":"kendo.toolbar.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.splitbutton.js';\nimport './kendo.dropdownbutton.js';\nimport './kendo.buttongroup.js';\nimport './kendo.menu.js';\nimport './kendo.icons.js';\n\nconst __meta__ = {\n    id: \"toolbar\",\n    name: \"ToolBar\",\n    category: \"web\",\n    description: \"The ToolBar widget displays one or more command buttons divided into groups.\",\n    depends: [\"core\", \"splitbutton\", \"dropdownbutton\", \"buttongroup\", \"menu\", \"icons\"]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        isFunction = kendo.isFunction,\n        keys = kendo.keys,\n        outerWidth = kendo._outerWidth,\n        ns = \".kendoToolBar\",\n        TOOLBAR = \"toolbar\",\n        KTOOLBAR = \"k-toolbar\",\n        KBUTTON = \"k-button\",\n        BUTTON_GROUP = \"k-button-group\",\n        SPLIT_BUTTON = \"k-split-button\",\n        MENU_BUTTON = \"k-menu-button\",\n        POPUP_BUTTON = \"k-popup-button\",\n        KSEPARATOR = \"k-toolbar-separator k-separator\",\n        SPACER_CLASS = \"k-spacer\",\n        UPLOAD_BUTTON = \"k-upload-button\",\n        POPUP = \"k-popup\",\n        RESIZABLE_TOOLBAR = \"k-toolbar-resizable\",\n        STATE_SELECTED = \"k-selected\",\n        STATE_DISABLED = \"k-disabled\",\n        STATE_HIDDEN = \"k-hidden\",\n        FORCE_HIDDEN = \"k-force-hidden\",\n        GROUP_START = \"k-group-start\",\n        GROUP_END = \"k-group-end\",\n        MENU_LINK = \"k-menu-link\",\n        MENU_ITEM = \"k-menu-item\",\n        OVERFLOW_ANCHOR = \"k-toolbar-overflow-button\",\n        TEMPLATE_ITEM = \"k-toolbar-item\",\n        MENU_LINK_TOGGLE = \"k-menu-link-toggle\",\n        DROPDOWNLIST = \"k-dropdownlist\",\n        INPUT_BUTTON = \"k-input-button\",\n        MENU_POPUP = \"k-menu-popup\",\n        KFOCUS = \"k-focus\",\n        SINGLE = \"single\",\n        MULTIPLE = \"multiple\",\n        NONE = \"none\",\n        TABINDEX_MINUS_1 = \"[tabindex=-1]\",\n        TOOLBAR_TOOL = \"toolbar-tool\",\n\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_LABEL = \"aria-label\",\n\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        TOGGLE = \"toggle\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        FOCUS = \"focus\",\n        FOCUSIN = \"focusin\",\n        FOCUSOUT = \"focusout\",\n        KEYDOWN = \"keydown\",\n\n        SPACER = \"spacer\",\n        PRIMARY = \"primary\",\n        ROLE = \"role\",\n        ITEM_REF = \"ref-\",\n        SEPARATOR = \"separator\",\n        OVERFLOW = \"overflow\",\n        TABINDEX = \"tabindex\",\n        INPUT = \"input\",\n        SELECT = \"select\",\n        HIDDEN = \"hidden\",\n        GROUP = \"group\",\n        DATA_UID = \"data-uid\",\n        DATA_PARENTUID = \"data-parentuid\",\n        DATA_ROLE_SELECTOR = \"[data-role]\",\n        DATA_TOGGLE_SELECTOR = \"[data-toggle]\",\n        DATA_ROLE_BUTTONMENU = \"[data-role=buttonmenu]\",\n        ITEM_REF_SELECTOR = \"[ref-toolbar-tool]\",\n        KENDO_FOCUSABLE = \":kendoFocusable:not([class*='pager'])\",\n\n        OVERFLOW_OPEN = \"overflowOpen\",\n        OVERFLOW_CLOSE = \"overflowClose\",\n        OVERFLOW_NEVER = \"never\",\n        OVERFLOW_AUTO = \"auto\",\n        OVERFLOW_ALWAYS = \"always\",\n\n        KENDO_UID_ATTR = kendo.attr(\"uid\"),\n\n        NOTHING = \"\",\n        DASH = \"_\",\n        EMPTY = \" \",\n        DOT = \".\",\n        COMMA = \",\",\n        ID = \"id\",\n        UID = \"uid\",\n        NBSP = \"&nbsp;\",\n\n        K_DROP_DOWN_BUTTON = \"kendoDropDownButton\",\n        K_SPLIT_BUTTON = \"kendoSplitButton\",\n        K_TOGGLE_BUTTON = \"kendoToggleButton\",\n        K_BUTTON_GROUP = \"kendoButtonGroup\",\n\n        DEFAULT_SCROLL_DISTANCE = 200;\n\n    kendo.toolbar = {};\n\n    var WIDGET_TYPES = {\n        button: \"Button\",\n        splitButton: \"SplitButton\",\n        dropDownButton: \"DropDownButton\",\n        buttonGroup: \"ButtonGroup\",\n        popupButton: \"Button\",\n        open: \"Button\"\n    };\n\n    var TOOLBAR_TOOLS_CLASSES = {\n        Button: \"k-toolbar-button\",\n        ToggleButton: \"k-toolbar-toggle-button\",\n        SplitButton: \"k-toolbar-split-button\",\n        DropDownButton: \"k-toolbar-menu-button\",\n        ButtonGroup: \"k-toolbar-button-group\",\n        ColorPicker: \"k-toolbar-color-picker\",\n        Switch: \"k-toolbar-switch\"\n    };\n\n    var SAFE_COMPONENTS = [\"Button\", \"SplitButton\", \"DropDownButton\", \"ButtonGroup\", \"Switch\", \"ColorPicker\"];\n\n    var POPUP_BUTTON_TEMPLATE = `<button class=\"k-popup-button\"><span class=\"k-button-icon k-icon\"></span><span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`;\n    var TEMPLATE_WRAPPER = \"<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>\";\n    var CUSTOM_WIDGET_WRAP = \"<span class='k-toolbar-item' tabindex='0' ref-toolbar-tool >\";\n    var SEPARATOR_OVERFLOW_EL = \"<li role='separator' class='k-separator k-menu-separator k-hidden'></li>\";\n    var SEPARATOR_EL = '<div role=\"separator\">&nbsp;</div>';\n    var SPACER_EL = '<div>&nbsp;</div>';\n\n    var ToolBar = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            options = this.options;\n\n            this._isRtl = kendo.support.isRtl(element);\n            this.uid = kendo.guid();\n\n            element = this.wrapper = this.element;\n            element.attr(KENDO_UID_ATTR, this.uid);\n            element.addClass(KTOOLBAR);\n            element.attr(ROLE, TOOLBAR);\n\n            if (options.resizable) {\n                this.hasOverflowButton = [\"section\", \"menu\"].includes(this.options.overflow?.mode);\n                this._resizable();\n            } else {\n                options.overflow = $.extend({}, options.overflow, { mode: \"none\" });\n            }\n\n            if (options.tools && options.tools.length > 0) {\n                options.items = this._extendToolsOptions();\n            }\n\n            if (options.items && options.items.length) {\n                this._items();\n            }\n\n            this._scrollable();\n\n            this._attachEvents();\n            this._tabIndex();\n            this._applyCssClasses();\n\n            if (options.resizable) {\n                if (this.hasOverflowButton) {\n                    let containerWidth = this.element.find(\"> .k-toolbar-items\").length > 0 ? this.element.find(\"> .k-toolbar-items\")[0].offsetWidth : this.element.innerWidth();\n                    this._shrink(containerWidth);\n                    this.overflowAnchorSeparator?.appendTo(this.wrapper);\n                    this.overflowAnchor?.appendTo(this.wrapper);\n                    this._toggleOverflowAnchor();\n                }\n                else {\n                    this._toggleScrollButtons();\n                }\n            }\n\n            kendo.notify(this);\n        },\n\n        events: [\n            CLICK,\n            TOGGLE,\n            OPEN,\n            CLOSE,\n            OVERFLOW_OPEN,\n            OVERFLOW_CLOSE,\n            CHANGE\n        ],\n\n        options: {\n            name: \"ToolBar\",\n            items: [],\n            resizable: true,\n            navigateOnTab: false,\n            evaluateTemplates: false,\n            size: \"medium\",\n            fillMode: \"solid\",\n            overflow: {\n                mode: \"menu\", // scroll, menu, section, none\n                scrollButtons: \"auto\", // auto, hidden, visible\n                scrollButtonsPosition: \"split\", // split, start, end\n                scrollDistance: DEFAULT_SCROLL_DISTANCE\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.options.resizable) {\n                kendo.unbindResize(that._resizeHandler);\n                that.overflowMenu?.destroy?.();\n                that.overflowSection?.destroy?.();\n            }\n\n            if (that.options.overflow?.mode == \"scroll\") {\n                that.element.find(\"> .k-toolbar-items\").unbind(\"scroll\" + ns);\n                that._removeScrollableClasses();\n            }\n\n            that.element.find(DOT + POPUP_BUTTON).each((i, el) => {\n                var button = $(el).getKendoButton(),\n                    popup, popupWrapper, chooser;\n\n                if (button) {\n                    chooser = button.chooser;\n                    popup = button.popup;\n                    popupWrapper = popup.wrapper;\n\n                    chooser.destroy();\n                    popup.destroy();\n                    popupWrapper.remove();\n                }\n            });\n\n            that.element.off(ns);\n            that.element.removeAttr(DATA_UID);\n\n            kendo.destroy(that.element.children());\n\n            Widget.fn.destroy.call(that);\n        },\n\n        add: function(options) {\n            this._add(options);\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n\n        _scrollableAllowed: function() {\n            const options = this.options;\n\n            if (options.overflow && options.overflow.mode == \"scroll\" && !options.overflow.scrollDistance) {\n                options.overflow.scrollDistance = DEFAULT_SCROLL_DISTANCE;\n            }\n\n            return options.overflow?.mode == \"scroll\" && !isNaN(options.overflow.scrollDistance);\n        },\n\n        _getScrollButtonHtml: function(buttonClass, icon) {\n            return kendo.html.renderButton($(`<span class=\"k-toolbar-${buttonClass}\"></span>`), { icon: icon, type: \"\", size: this.options.size });\n        },\n\n        _getChildrenWidth: function(element) {\n            let width = 0;\n            element.children().each(function() {\n                width += outerWidth($(this));\n            });\n            return Math.floor(width);\n        },\n        _removeScrollableClasses: function() {\n            const that = this;\n            const isHidden = that.options.overflow.scrollButtons === \"hidden\";\n\n            that.element.removeClass(\"k-toolbar-scrollable\");\n\n            if (isHidden) {\n                that.element.removeClass(\"k-toolbar-scrollable-overlay\");\n                that.element.removeClass(\"k-toolbar-scrollable-start\");\n                that.element.removeClass(\"k-toolbar-scrollable-end\");\n\n                that.element.removeClass(\"k-toolbar-items-scroll\");\n            }\n        },\n        _scrollable: function() {\n            const that = this,\n                toolbarElement = that.element,\n                options = that.options,\n                scrollButtonsPosition = options.overflow.scrollButtonsPosition,\n                scrollButtonsVisibility = options.overflow.scrollButtons,\n                isHidden = scrollButtonsVisibility === \"hidden\";\n\n            if (that._scrollableAllowed()) {\n                let scrollPrevButton,\n                    scrollNextButton;\n\n                that.element.addClass(\"k-toolbar-scrollable\");\n                let useNativeScrolling = true;\n                that.element.wrapInner(`<div class=\"k-toolbar-items ${useNativeScrolling ? \"k-toolbar-items-scroll\" : \"\"}\"></div>`);\n                const scrollableElement = toolbarElement.find(\"> .k-toolbar-items\");\n                const wrapperOffset = that.element[0].offsetWidth;\n                const tabGroupScroll = scrollableElement[0].scrollWidth;\n                const condition = that._getChildrenWidth(scrollableElement) > scrollableElement.outerWidth();\n                const enableScroll = (tabGroupScroll > wrapperOffset) || condition;\n\n                if (enableScroll && !that._scrollableModeActive && isHidden) {\n                    that.element.addClass(\"k-toolbar-items-scroll\");\n                    that.element.addClass(\"k-toolbar-scrollable-overlay\");\n\n                    that._scrollableModeActive = true;\n                    that._toggleScrollButtons();\n                } else if ((enableScroll || !isHidden) && !that._scrollableModeActive) {\n                    that._nowScrollingTabs = false;\n                    that._isRtl = kendo.support.isRtl(that.element);\n                    const mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                    const mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                    const browser = kendo.support.browser;\n                    const isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n                    const prevIcon = !that._isRtl ? \"caret-alt-left\" : \"caret-alt-right\";\n                    const nextIcon = !that._isRtl ? \"caret-alt-right\" : \"caret-alt-left\";\n\n                    const scrollLeftButtonHtml = this._getScrollButtonHtml(\"prev\", prevIcon);\n                    const scrollRightButtonHtml = this._getScrollButtonHtml(\"next\", nextIcon);\n\n                    switch (scrollButtonsPosition) {\n                        case 'split':\n                            that.element.prepend(scrollLeftButtonHtml);\n                            that.element.append(scrollRightButtonHtml);\n                            break;\n                        case 'start':\n                            that.element.prepend(scrollRightButtonHtml);\n                            that.element.prepend(scrollLeftButtonHtml);\n                            break;\n                        case 'end':\n                            that.element.append(scrollLeftButtonHtml);\n                            that.element.append(scrollRightButtonHtml);\n                            break;\n                    }\n\n                    scrollPrevButton = that._scrollPrevButton = that.element.children(\".k-toolbar-prev\");\n                    scrollNextButton = that._scrollNextButton = that.element.children(\".k-toolbar-next\");\n\n                    scrollPrevButton.on(mouseDown + ns, function() {\n                        that._nowScrollingTabs = true;\n                        that._scrollTabsByDelta(options.overflow.scrollDistance * (isRtlScrollDirection ? 1 : -1));\n                    });\n\n                    scrollNextButton.on(mouseDown + ns, function() {\n                        that._nowScrollingTabs = true;\n                        that._scrollTabsByDelta(options.overflow.scrollDistance * (isRtlScrollDirection ? -1 : 1));\n                    });\n\n                    scrollPrevButton.add(scrollNextButton).on(mouseUp + ns, function() {\n                        that._nowScrollingTabs = false;\n                        that._toggleScrollButtons();\n                    });\n\n                    that._scrollableModeActive = true;\n\n                    that._toggleScrollButtons();\n                } else if (that._scrollableModeActive && !enableScroll && isHidden) {\n                    that._scrollableModeActive = false;\n\n                    that._removeScrollableClasses();\n\n                    that._scrollPrevButton && that._scrollPrevButton.off().remove();\n                    that._scrollNextButton && that._scrollNextButton.off().remove();\n                } else if (!that._scrollableModeActive && isHidden) {\n                    that._removeScrollableClasses();\n                } else {\n                    that._toggleScrollButtons();\n                }\n            }\n        },\n\n        _scrollTabsByDelta: function(delta) {\n            const that = this;\n            const toolbarElement = that.element;\n            const scrollableElement = toolbarElement.find(\"> .k-toolbar-items\");\n\n            let scrOffset = kendo.scrollLeft(scrollableElement);\n            const browser = kendo.support.browser;\n\n            if (that._isRtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrOffset = scrOffset * -1;\n            }\n\n            const animationProps = { \"scrollLeft\": scrOffset + delta };\n\n            scrollableElement.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                if (that._nowScrollingTabs && !jQuery.fx.off) {\n                    that._scrollTabsByDelta(delta);\n                }\n            });\n        },\n        _toggleScrollButtons: function(forceHideButtons) {\n            const that = this;\n\n            if (!that._scrollableAllowed()) {\n                return;\n            }\n\n            let toolbarElement = that.element,\n                scrollableElement = toolbarElement.find(\"> .k-toolbar-items\"),\n                scrollLeft = Math.floor(kendo.scrollLeft(scrollableElement)),\n                scrollButtonsVisibility = that.options.overflow.scrollButtons;\n\n            const disableNextButton = Math.abs(scrollLeft - (scrollableElement[0].scrollWidth - scrollableElement[0].offsetWidth)) <= 1;\n            const disablePrevButton = scrollLeft === 0;\n\n            if (scrollButtonsVisibility !== \"hidden\") {\n                that._scrollPrevButton.toggleClass(STATE_DISABLED, disablePrevButton);\n                that._scrollNextButton.toggleClass(STATE_DISABLED, disableNextButton);\n\n                if (scrollButtonsVisibility === \"auto\") {\n                    const shouldHideScrollButtons = forceHideButtons || scrollableElement[0].scrollWidth - scrollableElement[0].offsetWidth <= 1;\n                    that._scrollPrevButton.toggleClass(STATE_HIDDEN, shouldHideScrollButtons);\n                    that._scrollNextButton.toggleClass(STATE_HIDDEN, shouldHideScrollButtons);\n                }\n            } else {\n                that.element.toggleClass(\"k-toolbar-scrollable-start\", disablePrevButton);\n                that.element.toggleClass(\"k-toolbar-scrollable-end\", disableNextButton);\n            }\n        },\n\n        enable: function(candidate, enable) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                overflowItem = this._getOverflowItem(candidate, uid),\n                component = item.component,\n                buttonPopup, children, focused, wrapper;\n\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            function enableItem(item) {\n                if (item.component) {\n                    wrapper = component.wrapper;\n                    focused = wrapper.hasClass(KFOCUS) || wrapper.is(\":focus\");\n                    component.enable(enable);\n                    wrapper.find(\"[disabled]\").removeAttr(\"disabled\");\n                    wrapper.removeAttr(\"disabled\");\n\n                    if (focused) {\n                        wrapper.addClass(KFOCUS).trigger(FOCUS);\n                    }\n                } else if (item.buttonsPopupItem.length > 0) {\n                    buttonPopup = kendo.widgetInstance(item.buttonsPopupItem.closest(DOT + MENU_POPUP));\n                    buttonPopup.enable(enable, item.buttonsPopupItem);\n                }\n            }\n\n            if (this.overflowSection && overflowItem) {\n                enableItem(overflowItem);\n            }\n\n            if (!item) {\n                return;\n            }\n\n            enableItem(item);\n\n            if (this.overflowMenu) {\n                this.overflowMenu.enable(item.menuItem, enable);\n\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    that.overflowMenu.enable($(el), enable);\n                });\n            }\n        },\n\n        getSelectedFromGroup: function(groupName) {\n            return this.element.find(\"[data-group='\" + groupName + \"']\").filter(DOT + STATE_SELECTED);\n        },\n\n        hide: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = that._getItem(candidate, uid),\n                overflowItem = that._getOverflowItem(candidate, uid),\n                elements, parentButtonGroup, children, parentGroupEl;\n\n            if (!item && !overflowItem) {\n                return;\n            }\n\n            function hideItem(item, isOverflowItem) {\n                elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem).add(item.menuItem);\n                elements.addClass(STATE_HIDDEN);\n                elements.addClass(FORCE_HIDDEN);\n\n                parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n                parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n                if (parentButtonGroup) {\n                    if (parentGroupEl.children(\":not(.k-hidden)\").length === 0) {\n                        that.hide(parentGroupEl);\n                    } else {\n                        that._groupVisibleButtons(parentGroupEl);\n                    }\n                }\n\n                if (elements.find(\"[tabindex=0]\").addBack(\"[tabindex=0]\").length > 0) {\n                    that._resetTabIndex(that._getAllItems(isOverflowItem).first());\n                }\n            }\n\n            if (this.overflowSection && overflowItem) {\n                hideItem(overflowItem, true);\n            }\n\n            if (item) {\n                hideItem(item);\n\n                if (this.overflowMenu) {\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        $(el).addClass(FORCE_HIDDEN);\n                        $(el).addClass(STATE_HIDDEN);\n                    });\n                }\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        remove: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                overflowItem = this._getOverflowItem(candidate, uid),\n                buttonGroup, children;\n\n            if (!item && !overflowItem) {\n                return;\n            }\n\n            function removeItem(item) {\n                if (item.component) {\n                    buttonGroup = item.toolbarEl.closest('[data-role=\"buttongroup\"]');\n                    if (buttonGroup.length > 0 && item.toolbarEl.siblings().length === 0) {\n                        buttonGroup.data(K_BUTTON_GROUP).destroy();\n                        buttonGroup.remove();\n\n                        item.toolbarEl = $(NOTHING);\n                    } else {\n                        item.component.destroy();\n                    }\n                }\n\n                if (item.templateEl.length > 0) {\n                    item.templateEl.remove();\n                } else if (item.toolbarEl.length > 0) {\n                    item.toolbarEl.remove();\n                }\n\n                if (item.buttonsPopupItem.length > 0) {\n                    item.buttonsPopupItem.remove();\n                }\n            }\n\n            if (this.overflowSection && overflowItem) {\n                removeItem(overflowItem);\n            }\n\n            if (item) {\n                removeItem(item);\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.remove(item.menuItem);\n\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        that.overflowMenu.remove($(el));\n                    });\n                }\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        show: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                overflowItem = this._getOverflowItem(candidate, uid),\n                elements, parentButtonGroup, children, parentGroupEl;\n\n            function showItem(item) {\n                elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem);\n                elements.removeClass(FORCE_HIDDEN);\n                elements.removeClass(STATE_HIDDEN);\n\n                parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n                parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n                if (parentButtonGroup) {\n                    if (parentGroupEl.hasClass(\"k-hidden\") && parentGroupEl.children(\":not(.k-hidden)\").length > 0) {\n                        that.show(parentGroupEl);\n                    } else {\n                        that._groupVisibleButtons(parentGroupEl);\n                    }\n                }\n            }\n\n            if (this.overflowSection && overflowItem) {\n                showItem(overflowItem);\n            }\n\n            if (item) {\n                showItem(item);\n                item.menuItem.removeClass(FORCE_HIDDEN);\n                if (this.overflowMenu) {\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        $(el).removeClass(FORCE_HIDDEN);\n                    });\n                }\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        toggle: function(candidate, checked) {\n            var item = this._getItem(candidate),\n                overflowItem = this._getOverflowItem(candidate),\n                menuItem = item.menuItem;\n\n            if (checked === undefined$1) {\n                checked = true;\n            }\n\n            function toggleItem(item) {\n                const element = item.toolbarEl;\n                const button = element.data(K_TOGGLE_BUTTON);\n\n                if (!item.component && menuItem.find(DOT + MENU_LINK_TOGGLE).length === 0) {\n                    return;\n                }\n\n                const group = element.data(GROUP);\n\n                if (item.component) {\n                    const parentGroup = element.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n\n                    if (parentGroup) {\n                        if (element.hasClass(STATE_SELECTED) !== checked) {\n                            parentGroup._toggleIndex(element.index());\n                        }\n                    }\n\n                    button.toggle(checked);\n\n                    if (checked) {\n                        const groupButtons = element.closest(\".k-toolbar,.k-toolbar-popup\").find(\"[data-group=\" + group + \"]\");\n\n                        groupButtons.each((i, el) => {\n                            if (el !== element[0]) {\n                                $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                            }\n                        });\n                    }\n                }\n            }\n\n            if (this.overflowSection && overflowItem) {\n                toggleItem(overflowItem);\n            }\n\n            if (!item) {\n                return;\n            }\n\n            toggleItem(item);\n\n            if (menuItem) {\n                const group = item.toolbarEl.data(GROUP);\n\n                menuItem\n                    .attr(ARIA_CHECKED, checked)\n                    .find(DOT + MENU_LINK_TOGGLE)\n                    .toggleClass(STATE_SELECTED, checked);\n\n                if (checked && this.overflowMenu) {\n                    const groupButtons = this.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                    groupButtons.each((i, el) => {\n                        if (el !== menuItem[0]) {\n                            $(el)\n                                .attr(ARIA_CHECKED, false)\n                                .find(DOT + MENU_LINK_TOGGLE)\n                                .removeClass(STATE_SELECTED);\n                        }\n                    });\n                }\n            }\n        },\n\n        toggleTools: function(conditions) {\n            var that = this,\n                tools = that.element.find(DATA_TOGGLE_SELECTOR),\n                focusable = that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1);\n\n            tools.each(function(index, elm) {\n                var tool = $(elm),\n                    widget = null,\n                    condition = tool.data(TOGGLE),\n                    toToggle = conditions && conditions[condition];\n\n                if (tool.is(DATA_ROLE_SELECTOR)) {\n                    widget = kendo.widgetInstance(tool);\n                }\n\n                if (widget && widget.enable) {\n                    widget.enable(toToggle || false);\n                } else {\n                    that.enable(tool, toToggle);\n                }\n            });\n\n            that.element.find(DATA_TOGGLE_SELECTOR + \"[disabled]\").removeAttr(\"disabled\");\n\n            that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1).attr(\"tabindex\", -1);\n            focusable.attr(TABINDEX, 0);\n        },\n\n        _generateToolElement: function(template, overflowTemplate, type, processed) {\n            let element;\n\n            if (template || overflowTemplate) {\n                element = this._addTemplate(processed);\n            } else if (kendo.ui[processed.component]) {\n                element = this._addCustomWidget(processed);\n            } else if (type) {\n                element = this._addDefaultTool(type, processed);\n            } else if (processed.type === SPACER) {\n                this._addSpacer();\n            } else if (processed.type === SEPARATOR) {\n                this._addSeparator(processed);\n            }\n            return element;\n        },\n\n        _add: function(options) {\n            var processed = this._processOptions(options),\n                template = processed.template,\n                overflowTemplate = processed.overflowTemplate,\n                type = WIDGET_TYPES[processed.type];\n            let element;\n\n            if (processed.overflow !== OVERFLOW_ALWAYS || this.options.overflow?.mode == \"menu\") {\n                element = this._generateToolElement(template, overflowTemplate, type, processed);\n\n                if (element && processed.overflow !== OVERFLOW_ALWAYS) {\n                    if (this.overflowAnchor && this.overflowAnchorSeparator) {\n                        element.insertBefore(this.overflowAnchorSeparator);\n                    } else {\n                        element.appendTo(this.element);\n                    }\n\n                    element.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                    if (element.is(\"[disabled]\")) {\n                        element.removeAttr(\"disabled\");\n                    }\n                }\n            }\n\n            if (this.options.overflow?.mode == \"section\" && processed.overflow !== OVERFLOW_NEVER) {\n                if (processed.type === SPACER) {\n                    return this._addSpacer(this._overflowSectionContentElement());\n                }\n\n                if (processed.type === SEPARATOR) {\n                    return;\n                }\n\n                let sectionElement = this._generateToolElement(template, overflowTemplate, type, processed);\n\n                if (sectionElement) {\n                    this._overflowSectionContentElement().append(sectionElement);\n                    if (processed.overflow !== OVERFLOW_ALWAYS) {\n                        sectionElement.addClass(STATE_HIDDEN);\n                    }\n\n                    sectionElement.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                    if (sectionElement.is(\"[disabled]\")) {\n                        sectionElement.removeAttr(\"disabled\");\n                    }\n                    sectionElement.attr(\"ref-section-tool\", element?.attr(\"data-uid\") || \"\");\n                }\n            }\n        },\n\n        _addAttributes: function(options, element) {\n            var attributes = options.attributes,\n                classes = NOTHING;\n\n            if (!attributes) {\n                attributes = {};\n            }\n\n            if (options.hidden) {\n                classes = STATE_HIDDEN + EMPTY + FORCE_HIDDEN;\n            }\n\n            if (options.align) {\n                classes = classes + \" k-align-\" + options.align;\n            }\n\n            if (attributes) {\n                if (attributes.class) {\n                    classes = classes + EMPTY + attributes.class;\n                    delete attributes.class;\n                }\n\n                element.attr(attributes);\n            }\n\n            element.addClass(classes);\n            element.attr(KENDO_UID_ATTR, options.uid);\n\n            if (options.id) {\n                element.attr(ID, options.id);\n            }\n            if (options.overflow === OVERFLOW_NEVER) {\n                element.attr(\"data-overflow\", OVERFLOW_NEVER);\n            }\n\n            if (options.items) {\n                options.items.forEach(item => {\n                    if (item && item.groupClass && !element.hasClass(item.groupClass)) {\n                        element.addClass(item.groupClass);\n                    }\n                });\n            }\n        },\n\n        _addCustomWidget: function(options) {\n            var element = $(options.element || \"<input>\"),\n                widget, result, classes;\n\n            if (options.overflowComponent) {\n                this._addMenuItem(options.overflowComponent.type, $.extend({}, options, options.overflowComponent));\n            }\n\n            if (options.attributes) {\n                classes = options.attributes.class;\n                delete options.attributes[\"class\"];\n                element.attr(options.attributes);\n                delete options.attributes[ARIA_LABEL];\n            }\n\n            if (!options.componentOptions) {\n                options.componentOptions = {};\n            }\n\n            options.componentOptions.size = this.options.size;\n\n            widget = new kendo.ui[options.component](element, options.componentOptions);\n\n            if (SAFE_COMPONENTS.indexOf(options.component) > -1) {\n                widget.wrapper.addClass(TOOLBAR_TOOLS_CLASSES[options.component]).attr(ITEM_REF + TOOLBAR_TOOL, '');\n                result = widget.wrapper;\n            } else {\n                result = (widget.wrapper || widget.element).wrap(CUSTOM_WIDGET_WRAP).parent();\n            }\n\n            if (options.attributes) {\n                options.attributes.class = classes;\n            }\n\n            this._addAttributes(options, result);\n\n            return result;\n        },\n\n        _addDefaultTool: function(component, options) {\n            var element, op;\n            let toolbar = this;\n\n            if (options.overflow !== OVERFLOW_ALWAYS || (toolbar.overflowSection && options.overflow !== OVERFLOW_NEVER)) {\n                element = toolbar._addToolbarTool(component, $.extend(true, {}, options));\n            }\n\n            if (toolbar.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                if (options.overflowComponent) {\n                    op = $.extend(true, {}, options, options.overflowComponent);\n                    delete op[\"data-command\"];\n                    toolbar._addMenuItem(\"Button\", op);\n                } else {\n                    toolbar._addMenuItem(component, $.extend(true, {}, options));\n                }\n            }\n\n            return element;\n        },\n\n        _addMenuItem: function(component, options) {\n            var that = this,\n                selected = options.selected,\n                menuitem;\n\n            delete options.selected;\n\n            if (options.id) {\n                options.id = options.id + DASH + OVERFLOW;\n            }\n            if (options.showIcon === TOOLBAR) {\n                delete options.imageUrl;\n                delete options.icon;\n            }\n\n            if (options.showText === TOOLBAR) {\n                if (!options.attributes) {\n                    options.attributes = {};\n                }\n\n                options.attributes[ARIA_LABEL] = options.text;\n\n                options.text = NOTHING;\n            } else if (options.text === undefined$1 || options.text === NOTHING) {\n                options.text = NBSP;\n                options.encoded = false;\n            }\n\n            that.overflowMenu?.append(options);\n            menuitem = that.overflowMenu.element.find(DOT + MENU_ITEM).last();\n\n            if (options.icon) {\n                menuitem.find(DOT + MENU_LINK).prepend(kendo.ui.icon(options.icon));\n            }\n\n            if (component === \"ToggleButton\" || (component === \"Button\" && options.togglable === true)) {\n                menuitem.find(DOT + MENU_LINK).addClass(MENU_LINK_TOGGLE);\n\n                if (selected) {\n                    menuitem.find(DOT + MENU_LINK).addClass(STATE_SELECTED);\n                }\n\n                if (options.group) {\n                    menuitem.attr(\"data-group\", options.group);\n                }\n            } else if (options.menuButtons) {\n                options.menuButtons.forEach((i) => {\n                    i.overflow = options.overflow;\n                    that._addMenuItem(null, i);\n                });\n            } else if (options.buttons) {\n                menuitem.remove();\n                menuitem = null;\n\n                options.buttons.forEach((i) => {\n                    var attributes = i.attributes;\n                    i.overflow = options.overflow;\n                    i.attributes = $.extend(attributes, options.attributes);\n\n                    that._addMenuItem(\"Button\", i);\n                });\n            }\n\n            if (component === \"DropDownButton\") {\n                menuitem.addClass(STATE_DISABLED);\n                menuitem.attr(ARIA_DISABLED, true);\n            }\n\n            if (menuitem) {\n                that._addAttributes(options, menuitem);\n\n                if (options.overflow === OVERFLOW_AUTO) {\n                    menuitem.addClass(STATE_HIDDEN);\n                }\n\n                if (options.click || options.toggle) {\n                    that.overflowMenu.bind(SELECT, (e) => {\n                        if (e.item === menuitem[0]) {\n                            this._onMenuItemSelect(e, options.click, options.toggle);\n                        }\n                    });\n                }\n            }\n\n            return menuitem;\n        },\n\n        _addPopupButton: function(options) {\n            var that = this,\n                widgetElement = $(POPUP_BUTTON_TEMPLATE),\n                component = options.popupComponent,\n                popup, chooser;\n\n            widgetElement.attr(ARIA_LABEL, options.text);\n\n            popup = $(\"<div/>\").appendTo($(\"<body>\")).kendoPopup({\n                anchor: widgetElement\n            }).data(\"kendoPopup\");\n\n            widgetElement.on(CLICK + \" touchend\", (e) => {\n                popup.toggle();\n                e.preventDefault();\n            });\n\n            chooser = new component(popup.element);\n\n            chooser.bind(options.commandOn, (e) => {\n                that.trigger(CHANGE, { target: widgetElement, value: e.value || e });\n                popup.close();\n            });\n\n            return { widgetElement, chooser, popup };\n        },\n\n        _addSeparator: function(options) {\n            var separator = $(SEPARATOR_EL),\n                overflowSeparator = $(SEPARATOR_OVERFLOW_EL);\n            const id = options.id;\n\n            separator.addClass(KSEPARATOR);\n            separator.attr(ROLE, SEPARATOR);\n\n            if (this.overflowAnchor && this.overflowAnchorSeparator) {\n                separator.insertBefore(this.overflowAnchorSeparator);\n            } else {\n                separator.appendTo(this.element);\n            }\n\n            this._addAttributes(options, separator);\n\n            if (options.id) {\n                options.id = options.id + DASH + OVERFLOW;\n            }\n\n            this._addAttributes(options, overflowSeparator);\n\n            if (this.overflowMenu) {\n                this.overflowMenu.element.append(overflowSeparator);\n            }\n\n            if (this.overflowSection) {\n                const sectionSeparator = $(SEPARATOR_EL)\n                    .addClass(KSEPARATOR)\n                    .addClass(STATE_HIDDEN)\n                    .attr(ROLE, SEPARATOR)\n                    .attr(\"ref-section-tool\", options.uid);\n\n                let sectionSeparatorOptions = id ? $.extend(true, options, { id: id + DASH + \"section-overflow\" }) : options;\n\n                this._addAttributes(sectionSeparatorOptions, sectionSeparator);\n                this._overflowSectionContentElement().append(sectionSeparator);\n            }\n        },\n\n        _addSpacer: function(destinationElement) {\n            var spacer = $(SPACER_EL);\n            spacer.addClass(SPACER_CLASS);\n\n            if (this.overflowAnchor && this.overflowAnchorSeparator) {\n                spacer.insertBefore(this.overflowAnchorSeparator);\n            } else {\n                spacer.appendTo(destinationElement || this.element);\n            }\n        },\n        _overflowSectionContentElement: function() {\n            return this.overflowSection?.element.find(\".k-toolbar-items-list\");\n        },\n        _addTemplate: function(options) {\n            var template = options.template,\n                overflowTemplate = options.overflowTemplate,\n                element, menuitem, inputsInTemplate = $(NOTHING);\n\n            if (overflowTemplate && this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                overflowTemplate = isFunction(overflowTemplate) ? overflowTemplate(options)[0] : overflowTemplate;\n                this.overflowMenu.append({});\n                menuitem = this.overflowMenu.element\n                    .find(DOT + MENU_ITEM)\n                    .last()\n                    .find(DOT + MENU_LINK)\n                    .html(overflowTemplate)\n                    .parent();\n            }\n\n            if (template && options.overflow !== OVERFLOW_ALWAYS) {\n                if (this.options.evaluateTemplates) {\n                    template = kendo.template(template);\n                }\n\n                template = isFunction(template) ? template(options) : template;\n\n                element = $(TEMPLATE_WRAPPER);\n                element.html(template);\n\n                if (menuitem) {\n                    menuitem.addClass(STATE_HIDDEN);\n                }\n            }\n\n            if (element) {\n                inputsInTemplate = element.find(INPUT + COMMA + SELECT);\n                this._addAttributes(options, element);\n            }\n\n            if (menuitem) {\n                inputsInTemplate.add(menuitem.find(INPUT + COMMA + SELECT));\n                this._addAttributes(options, menuitem);\n            }\n\n            if (!this.options.navigateOnTab && inputsInTemplate.length > 0) {\n                element.attr(TABINDEX, 0);\n                element.attr(ITEM_REF + TOOLBAR_TOOL, '');\n                inputsInTemplate.attr(TABINDEX, -1);\n            }\n\n            return element;\n        },\n\n        _addToolbarTool: function(component, options) {\n            var widgetElement = $(\"<button>\"),\n                hasButtons = false,\n                widget, element, popupRef;\n\n            if (options.primary === true) {\n                options.themeColor = PRIMARY;\n            }\n            if (options.url) {\n                widgetElement = $(\"<a href='\" + kendo.sanitizeLink(options.url) + \"'>\");\n            }\n            if (options.showIcon === OVERFLOW) {\n                delete options.imageUrl;\n                delete options.icon;\n            }\n            if (options.showText !== OVERFLOW) {\n                widgetElement.text(options.text);\n            } else {\n                widgetElement.attr(ARIA_LABEL, options.text);\n            }\n\n            if (options.type === \"popupButton\") {\n                popupRef = this._addPopupButton(options);\n                widgetElement = popupRef.widgetElement;\n            } else if (component === \"Button\" && options.togglable === true) {\n                component = \"ToggleButton\";\n            } else if (options.menuButtons) {\n                options.items = options.menuButtons;\n                delete options.menuButtons;\n\n                if (options.attributes && options.attributes.class) {\n                    widgetElement.addClass(options.attributes.class);\n                }\n\n                widgetElement.attr(DATA_UID, options.uid);\n                delete options.uid;\n            } else if (options.buttons) {\n                widgetElement = $(\"<span></span>\");\n                hasButtons = true;\n                options.items = options.buttons;\n                delete options.buttons;\n\n                options.preventKeyNav = true;\n\n                options.items.forEach(i => {\n                    if (i.showIcon === OVERFLOW) {\n                        delete i.imageUrl;\n                        delete i.icon;\n                    }\n\n                    if (i.showText === OVERFLOW) {\n                        if (!i.attributes) {\n                            i.attributes = {};\n                        }\n\n                        i.attributes[ARIA_LABEL] = i.text;\n\n                        delete i.text;\n                    }\n                });\n            }\n\n            if (options.id) {\n                widgetElement.attr(ID, options.id);\n                delete options.id;\n            }\n\n            // Remove the name property. Otherwise the default component name will be overriden.\n            // This will cause us to init an element with data-role=${name} instead of the correct data-role of the component.\n            if (options.name) {\n                delete options.name;\n            }\n\n            options.size = this.options.size;\n\n            widget = new kendo.ui[component]($(widgetElement), options);\n            element = widget.wrapper || widget.element;\n            element.addClass(TOOLBAR_TOOLS_CLASSES[component]);\n            this._addAttributes(options, element);\n\n            if (options.url) {\n                widgetElement.removeAttr(ROLE);\n            }\n\n            if (hasButtons) {\n                element.find(DOT + KBUTTON).attr(ITEM_REF + TOOLBAR_TOOL, '');\n                this._groupVisibleButtons(element);\n            } else {\n                widget.element.attr(ITEM_REF + TOOLBAR_TOOL, '');\n            }\n\n            if (options.type !== \"popupButton\" && options.type !== \"open\") {\n                this._attachWidgetEvents(widget);\n            } else if (options.type === \"open\") {\n                widgetElement.addClass(UPLOAD_BUTTON);\n                this._resetOpen(widgetElement, options.extensions);\n                element = widgetElement.parent();\n            } else {\n                widget.chooser = popupRef.chooser;\n                widget.popup = popupRef.popup;\n            }\n\n            return element;\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                options = that.options;\n\n            that.element.on(KEYDOWN + ns, that._keydown.bind(that))\n                .on(FOCUSIN + ns, that._focusIn.bind(that))\n                .on(FOCUSOUT + ns, that._focusOut.bind(that));\n\n            if (options.overflow?.mode == \"section\" && that.overflowSection) {\n                that._overflowSectionContentElement().on(KEYDOWN + ns, that._keydown.bind(that));\n            }\n\n            if (options.overflow?.mode == \"scroll\") {\n                that.element.find(\"> .k-toolbar-items\").bind(\"scroll\", function(e) {\n                    if (!that._nowScrollingTabs) {\n                        that._toggleScrollButtons();\n                    }\n                });\n            }\n        },\n\n        _attachWidgetEvents: function(widget) {\n            var that = this;\n\n            widget.bind(CLICK, that._onClick.bind(that));\n            widget.bind(TOGGLE, that._onToggle.bind(that));\n            widget.bind(SELECT, that._onSelect.bind(that));\n            widget.bind(OPEN, that._onOpen.bind(that));\n            widget.bind(CLOSE, that._onClose.bind(that));\n\n            widget.wrapper.find(DOT + KBUTTON).each((i, el) => {\n                var $el = $(el);\n\n                if ($el.data(\"kendoButton\")) {\n                    $el.data(\"kendoButton\").bind(CLICK, (e) => {\n                        that.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                    });\n                }\n            });\n        },\n\n        _childrenWidth: function() {\n            var gap = parseInt(this.element.css('gap'), 10) || 0;\n            var childrenWidth = gap;\n            let container = this.element.find(\"> .k-toolbar-items\").length > 0 ? this.element.find(\"> .k-toolbar-items\") : this.element;\n\n            container.children(\":visible:not(\" + DOT + SPACER_CLASS + \")\").each(function() {\n                childrenWidth += outerWidth($(this), false) + gap;\n            });\n\n            return Math.ceil(childrenWidth);\n        },\n\n        _extendToolsOptions: function() {\n            var options = this.options,\n                items = options.tools.flatMap((tool) => this._mapTool(tool, options.parentMessages, options.defaultTools));\n\n            this.options.items = items;\n\n            return items;\n        },\n\n        _focusIn: function(e) {\n            var target = $(e.target),\n                button = target.closest(DOT + KBUTTON);\n\n            if (button.length > 0) {\n                this._resetTabIndex(button);\n                button.addClass(KFOCUS);\n            }\n        },\n\n        _focusOut: function(e) {\n            this.wrapper.find(DOT + KBUTTON + DOT + KFOCUS).removeClass(KFOCUS);\n        },\n\n        _getAllItems: function(isSection) {\n            let container = isSection == true ? this._overflowSectionContentElement() : this.wrapper;\n            return container.find(ITEM_REF_SELECTOR)\n                .filter(\":visible\")\n                .filter((i, el) => {\n                    if (el.style.visibility === HIDDEN) {\n                        return false;\n                    }\n\n                    return true;\n                });\n        },\n\n        _getOverflowItem: function(candidate, knownUid) {\n            return this._getItem(candidate, knownUid, this._overflowSectionContentElement());\n        },\n\n        _getItem: function(candidate, knownUid, container) {\n            var uid = knownUid || this._getUid(candidate),\n                buttonsPopups = $(DATA_ROLE_BUTTONMENU),\n                uidSelector, toolbarEl;\n\n            if (!uid) {\n                return {\n                    toolbarEl: (container || this.element).find(candidate),\n                    templateEl: $(NOTHING),\n                    menuItem: this.overflowMenu ? this.overflowMenu.element.find(candidate) : $(NOTHING),\n                    buttonsPopupItem: $(NOTHING)\n                };\n            }\n\n            uidSelector = \"[data-uid=\" + uid + \"]\";\n            toolbarEl = (container || this.element).find(uidSelector);\n\n            return {\n                toolbarEl: toolbarEl,\n                templateEl: toolbarEl.closest(DOT + TEMPLATE_ITEM + COMMA + DOT + SPLIT_BUTTON),\n                component: kendo.widgetInstance(toolbarEl),\n                menuItem: this.overflowMenu ? this.overflowMenu.element.find(uidSelector) : $(NOTHING),\n                buttonsPopupItem: buttonsPopups.find(uidSelector)\n            };\n        },\n\n        _getNextElement: function(item, direction) {\n            const isSection = $(item).closest(\".k-toolbar-popup\").length > 0;\n            var items = this._getAllItems(isSection),\n                itemIndex = items.index(item) === -1 ? items.index(item.parentElement) : items.index(item),\n                focusableItem = items[itemIndex + direction];\n\n            if (!focusableItem) {\n                if (direction === -1) {\n                    focusableItem = items.last();\n                } else {\n                    focusableItem = items.first();\n                }\n            }\n\n            return focusableItem;\n        },\n\n        _getUid: function(candidate) {\n            var element;\n\n            // find toolbar item by jQuery selector\n            element = this.element.find(candidate);\n\n            // if not found find in in the DropDown-/SplitButton popups\n            if (!element.length) {\n                element = $(DATA_ROLE_BUTTONMENU).find(candidate);\n            }\n\n            // if not, find it in the OverflowMenu\n            if (!element.length && this.overflowMenu) {\n                element = this.overflowMenu.element.find(candidate);\n            }\n\n            // if not, find it in the OverflowSection\n            if (!element.length && this.overflowSection) {\n                element = this._overflowSectionContentElement().find(candidate);\n            }\n\n            if (!element.length) {\n                return null;\n            } else {\n                return element.data(UID) || element.closest(ITEM_REF_SELECTOR).data(UID);\n            }\n        },\n\n        _groupVisibleButtons: function(el) {\n            var buttons = el.children(),\n                visibleBtns;\n\n            buttons.removeClass(GROUP_END).removeClass(GROUP_START);\n            visibleBtns = buttons.filter(\":not('.\" + STATE_HIDDEN + \"')\");\n            visibleBtns.first().addClass(GROUP_START);\n            visibleBtns.last().addClass(GROUP_END);\n        },\n\n        _hideItem: function(item) {\n            var that = this,\n                widget;\n\n            item.addClass(STATE_HIDDEN);\n\n            if (this.overflowSection) {\n                this._overflowSectionContentElement().find(`[ref-section-tool=${item.data(\"uid\")}]`).removeClass(STATE_HIDDEN);\n            }\n\n            if (that.overflowMenu) {\n                if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                    if (item.hasClass(SPLIT_BUTTON)) {\n                        item = item.children().eq(0);\n                        widget = item.data(K_SPLIT_BUTTON);\n                    } else {\n                        widget = item.data(K_DROP_DOWN_BUTTON);\n                    }\n\n                    widget.menu.list.children().each((i, el) => {\n                        that._showMenuItem($(el));\n                    });\n\n                    that._showMenuItem(item);\n                } else if (item.hasClass(BUTTON_GROUP)) {\n                    item.children().each((i, el) => {\n                        that._showMenuItem($(el));\n                    });\n                } else {\n                    that._showMenuItem(item);\n                }\n            }\n        },\n\n        _hideMenuItem: function(item) {\n            this.overflowMenu.element\n                .find(\">li[data-uid='\" + item.data(UID) + \"']\")\n                .addClass(STATE_HIDDEN);\n        },\n\n        _items: function() {\n            let options = this.options;\n\n            for (var i = 0; i < options.items.length; i++) {\n                this._add(options.items[i]);\n            }\n        },\n\n        _keydown: function(e) {\n            var target = $(e.target),\n                keyCode = e.keyCode,\n                templateItem = target.closest(DOT + TEMPLATE_ITEM),\n                isOverflowAnchor = target.is(DOT + OVERFLOW_ANCHOR);\n            const isInSection = target.closest(DOT + \"k-toolbar-popup\").length > 0;\n\n            if (!this.options.navigateOnTab && !target.is(ITEM_REF_SELECTOR) && keyCode === keys.ESC && templateItem.length > 0) {\n                e.stopPropagation();\n                this._keyDeactivateTemplate(templateItem);\n                return;\n            }\n\n            if (!target.is(ITEM_REF_SELECTOR)) {\n                return;\n            }\n\n            if (!this.options.navigateOnTab && keyCode === keys.ENTER && target.hasClass(TEMPLATE_ITEM)) {\n                this._keyActivateTemplate(target);\n            } else if (isInSection && keyCode === keys.ESC) {\n                this.overflowSection.close();\n                this.element.trigger(FOCUS);\n            } else if (isOverflowAnchor && (e.altKey && keyCode === keys.DOWN || keyCode === keys.SPACEBAR)) {\n                this._keyOpenOverflow(e, keyCode);\n            } else if (keyCode === keys.HOME) {\n                this._keyFocusFirst(target, e);\n            } else if (keyCode === keys.END) {\n                this._keyFocusLast(target, e);\n            } else if (!this.options.navigateOnTab && (keyCode === keys.RIGHT || keyCode === keys.LEFT)) {\n                this._keyFocusNext(keyCode, e);\n            }\n        },\n\n        _keyActivateTemplate: function(target) {\n            var innerFocusable = target.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST);\n            const pagerTool = target.find('.k-pager');\n\n            if (pagerTool.length > 0) {\n                pagerTool.trigger(FOCUS);\n            } else if (innerFocusable.length > 0) {\n                target.attr(TABINDEX, -1);\n\n                innerFocusable.attr(TABINDEX, 0);\n                innerFocusable.first().trigger(FOCUS);\n            }\n        },\n\n        _keyDeactivateTemplate: function(templateItem) {\n            var innerWidget = templateItem.find(DATA_ROLE_SELECTOR),\n                innerFocusable = templateItem.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST),\n                widgetInstance;\n\n            if (innerWidget.length > 0) {\n                widgetInstance = kendo.widgetInstance(innerWidget);\n\n                if (widgetInstance) {\n                    if (widgetInstance.overflowMenu && widgetInstance.overflowMenu.visible()) {\n                        return;\n                    } else {\n                        templateItem.attr(TABINDEX, 0);\n                        templateItem.trigger(FOCUS);\n                        templateItem.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    }\n                }\n            }\n\n            if (innerFocusable.length > 0) {\n                templateItem.attr(TABINDEX, 0);\n                templateItem.trigger(FOCUS);\n                innerFocusable.attr(TABINDEX, -1);\n            }\n        },\n\n        _keyFocusFirst: function(target, e) {\n            const isSection = target.closest(\".k-toolbar-popup\").length > 0;\n            var items = this._getAllItems(isSection);\n\n            if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                return;\n            }\n\n            this._resetTabIndex(items.first());\n            items.first().trigger(FOCUS);\n            e.preventDefault();\n        },\n\n        _keyFocusLast: function(target, e) {\n            const isSection = target.closest(\".k-toolbar-popup\").length > 0;\n            var items = this._getAllItems(isSection),\n                last;\n\n            if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                return;\n            }\n\n            last = items.last();\n\n            if (last.width() === 0) {\n                last = items.eq(items.length - 2);\n            }\n\n            this._resetTabIndex(last);\n            last.trigger(FOCUS);\n            e.preventDefault();\n        },\n\n        _keyFocusNext: function(keyCode, e) {\n            var direction = this._isRtl ? -1 : 1,\n                next;\n\n            if (keyCode === keys.LEFT) {\n                direction = -1 * direction;\n            }\n\n            next = $(this._getNextElement(e.target, direction));\n            this._resetTabIndex(next);\n            next.trigger(FOCUS);\n\n            e.preventDefault();\n        },\n\n        _keyOpenOverflow: function(e, keyCode) {\n            if (keyCode === keys.SPACEBAR) {\n                e.preventDefault();\n            }\n\n            (this.overflowMenu || this.overflowSection).open();\n        },\n\n        _mapAttributes: function(toolOptions, messages) {\n            return {\n                \"aria-label\": messages[toolOptions.name || toolOptions.property],\n                \"title\": messages[toolOptions.name || toolOptions.property],\n                \"data-command\": toolOptions.command,\n                \"data-options\": toolOptions.options,\n                \"data-dialog\": toolOptions.dialog,\n                \"data-property\": toolOptions.property,\n                \"data-value\": toolOptions.value,\n                \"data-toggle\": toolOptions.toggleCondition\n            };\n        },\n\n        _mapComponent: function(component, messages) {\n            var that = this,\n                componentOptions = component.componentOptions,\n                componentMessages = componentOptions.messages,\n                componentPlaceholder = componentOptions.placeholder,\n                attributes = $.extend({}, that._mapAttributes(component, messages), component.attributes),\n                options;\n\n            if (component.overflowComponent) {\n                options = component.options || {};\n\n                if (component.componentOptions.dataSource) {\n                    options.options = component.componentOptions.dataSource;\n                }\n                if (component.componentOptions.value) {\n                    options.default = component.componentOptions.value;\n                }\n\n                if (Object.keys(options).length > 0) {\n                    component.overflowComponent.options = JSON.stringify(options);\n                }\n\n                component.overflowComponent = that._mapTool(component.overflowComponent, messages);\n            }\n\n            if (componentMessages) {\n                Object.keys(componentMessages).forEach((key) => {\n                    component.componentOptions.messages[key] = messages[componentMessages[key]] || componentMessages[key];\n                });\n            }\n\n            if (componentPlaceholder) {\n                component.componentOptions.placeholder = messages[componentPlaceholder] || componentPlaceholder;\n            }\n\n            Object.keys(componentOptions).forEach((key) => {\n                if (key === \"commandOn\") {\n                    component.componentOptions[componentOptions[key]] = (ev) => {\n                        that.trigger(CHANGE, { target: ev.target || ev.sender.element });\n                    };\n                }\n            });\n\n            if (componentOptions.dataSource && componentOptions.dataSource.length) {\n                component.componentOptions.dataSource = componentOptions.dataSource.map(i => {\n                    if (i.name && messages[i.name]) {\n                        i.text = messages[i.name];\n                    }\n\n                    return i;\n                });\n            }\n\n            component.attributes = attributes;\n\n            return component;\n        },\n\n        _mapTool: function(tool, messages, defaultTools) {\n            let that = this,\n                isArray = Array.isArray(tool),\n                isPlainObjectTool = $.isPlainObject(tool),\n                toolKeysCount = isPlainObjectTool && Object.keys(tool).length,\n                isBuiltInTool, toolOptions, attributes, originalTool;\n\n            if (isArray) {\n                return {\n                    type: \"buttonGroup\",\n                    buttons: tool.map(t => that._mapTool(t, messages, defaultTools))\n                };\n            }\n\n            isBuiltInTool = isPlainObjectTool && (toolKeysCount === 1 || toolKeysCount === 2) && tool.name;\n            originalTool = isBuiltInTool ? tool : {};\n            tool = isBuiltInTool ? tool.name : tool;\n            toolOptions = $.isPlainObject(tool) ? tool : $.extend({}, defaultTools[tool]);\n\n            attributes = $.extend({}, that._mapAttributes(toolOptions, messages), toolOptions.attributes);\n\n            kendo.deepExtend(toolOptions, {\n                text: originalTool.text || messages[toolOptions.name || toolOptions.property],\n                attributes: attributes,\n            });\n\n            if (toolOptions.type === \"component\") {\n                if (toolOptions.items) {\n                    return toolOptions.items.map(t => that._mapComponent(t, messages));\n                } else {\n                    return that._mapComponent(toolOptions, messages);\n                }\n            } else if (toolOptions.type === \"buttonGroup\") {\n                delete toolOptions.attributes[ARIA_LABEL];\n                toolOptions.buttons = toolOptions.buttons.map(t => that._mapTool(t, messages, defaultTools));\n            } else if (toolOptions.type === \"splitButton\") {\n                delete toolOptions.attributes[ARIA_LABEL];\n                toolOptions.menuButtons = toolOptions.menuButtons.flatMap(t => that._mapTool(t, messages, defaultTools));\n            } else if (toolOptions.type === \"popupButton\" && toolOptions.overflowComponent) {\n                toolOptions.overflowComponent = that._mapTool(toolOptions.overflowComponent, messages);\n            }\n\n            delete toolOptions.name;\n\n            return toolOptions;\n        },\n\n        _menuItemSelect: function(e) {\n            var item = $(e.item),\n                id = item.attr(ID),\n                togglable = item.find(DOT + MENU_LINK_TOGGLE),\n                groupName = item.data(GROUP),\n                shouldSelect, twin, group;\n\n            if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                id = id.replace(DASH + OVERFLOW, NOTHING);\n            }\n\n            if (togglable.length) {\n                if (groupName) {\n                    this.overflowMenu.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                        var current = $(el);\n\n                        current.attr(ARIA_CHECKED, false);\n                        current.find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                    });\n                }\n\n                shouldSelect = groupName ? true : !togglable.hasClass(STATE_SELECTED);\n\n                togglable.toggleClass(STATE_SELECTED, shouldSelect);\n                item.attr(ARIA_CHECKED, shouldSelect);\n\n                twin = this.element.find(\"[data-uid=\" + item.data(UID) + \"]\");\n\n                if (twin.length) {\n                    if (twin.closest(DOT + BUTTON_GROUP).length) {\n                        group = twin.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n                        group.select(twin);\n                    } else {\n                        if (groupName) {\n                            this.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                                $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                            });\n                        }\n\n                        twin.data(K_TOGGLE_BUTTON).toggle(true);\n                    }\n                }\n\n                this.trigger(TOGGLE, {\n                    id: item.attr(ID),\n                    target: item,\n                    checked: shouldSelect\n                });\n            } else {\n                this.trigger(CLICK, {\n                    id: id,\n                    target: item,\n                });\n            }\n        },\n\n        _onClick: function(e) {\n            var el = e.target,\n                togglable = el.hasClass(\"k-toolbar-toggle-button\"),\n                group = el.data(GROUP);\n\n            if (!togglable) {\n                this.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n            }\n\n            if (group && this.element.find(\"[data-group=\" + group + \"]\").length > 1) {\n                if (el.hasClass(STATE_SELECTED)) {\n                    e.preventDefault();\n                }\n            }\n        },\n\n        _onClose: function(e) {\n            if (this.trigger(CLOSE, { widget: e.sender })) {\n                e.preventDefault();\n            }\n        },\n\n        _onMenuItemSelect: function(e, click, toggle) {\n            var item = $(e.item),\n                togglable = item.find(DOT + MENU_LINK_TOGGLE).length > 0,\n                id = item.attr(ID);\n\n            if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                id = id.replace(DASH + OVERFLOW, NOTHING);\n            }\n\n            if (click) {\n                click.bind(this)({\n                    event: e.event,\n                    id: id,\n                    target: item\n                });\n            }\n\n            if (togglable && toggle) {\n                setTimeout(() => {\n                    toggle.bind(this)({\n                        event: e.event,\n                        id: id,\n                        target: item,\n                        checked: item.find(DOT + STATE_SELECTED).length > 0\n                    });\n                });\n            }\n        },\n\n        _onOpen: function(e) {\n            if (this.trigger(OPEN, { widget: e.sender })) {\n                e.preventDefault();\n            }\n        },\n\n        // triggered on Radio group select action\n        _onSelect: function(e) {\n            let that = this;\n            var menuEl = this.overflowMenu ? this.overflowMenu.element : $(NOTHING);\n\n            e.sender.element.children().each((i, el) => {\n                var current = $(el),\n                    uid = current.data(UID),\n                    dataUidSelector = `[data-uid=${uid}]`,\n                    selected = current.hasClass(STATE_SELECTED);\n\n                menuEl\n                    .find(dataUidSelector)\n                    .attr(ARIA_CHECKED, selected)\n                    .find(DOT + MENU_LINK_TOGGLE)\n                    .toggleClass(STATE_SELECTED, selected);\n\n                if (that.overflowSection) {\n                    let mainItem = that.element.find(dataUidSelector);\n                    let overflowItem = that.overflowSection.element.find(dataUidSelector);\n\n                    let component = kendo.widgetInstance(mainItem[0] == el ? overflowItem : mainItem);\n                    //sync the main item with the overflow item\n                    component?.toggle?.(selected);\n                }\n            });\n\n            this.trigger(TOGGLE, {\n                id: e.target.attr(ID),\n                target: e.target,\n                checked: e.target.hasClass(STATE_SELECTED)\n            });\n        },\n\n        _onToggle: function(e) {\n            var that = this,\n                el = e.target,\n                group = el.data(GROUP),\n                overflowItem,\n                overflowGroup;\n\n            if (that.overflowMenu) {\n                overflowItem = that.overflowMenu.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                overflowGroup = that.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                overflowGroup.attr(ARIA_CHECKED, false).find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                overflowItem.attr(ARIA_CHECKED, true).find(DOT + MENU_LINK_TOGGLE).addClass(STATE_SELECTED);\n            }\n\n            if (that.overflowSection) {\n                let mainItem = that.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                overflowItem = that.overflowSection.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                let component = kendo.widgetInstance(mainItem[0] == e.target[0] ? overflowItem : mainItem);\n                //sync the main item with the overflow item\n                component?.toggle?.(e.checked);\n            }\n\n            if (group) {\n                that.element.find(\"[data-group=\" + group + \"]\").each((i, item) => {\n                    if (item !== el[0]) {\n                        $(item).data(K_TOGGLE_BUTTON).toggle(false);\n                    }\n                });\n            }\n\n            this.trigger(TOGGLE, { id: e.id, target: e.target, checked: e.checked, originalEvent: e.originalEvent || e.event });\n        },\n\n        _processInner(items, parentUid) {\n            var attributes, current;\n\n            for (var i = 0; i < items.length; i++) {\n                current = items[i];\n                attributes = current.attributes;\n\n                if (!attributes) {\n                    items[i].attributes = {};\n                }\n\n                items[i].attributes[DATA_UID] = kendo.guid();\n                items[i].attributes[DATA_PARENTUID] = parentUid;\n\n                if (current.id) {\n                    items[i].attributes[ID] = items[i].id;\n                }\n\n                if (current.hidden) {\n                    if (!items[i].attributes.class) {\n                        items[i].attributes.class = NOTHING;\n                    }\n\n                    items[i].attributes.class += (EMPTY + STATE_HIDDEN + EMPTY + FORCE_HIDDEN);\n                }\n            }\n\n            return items;\n        },\n\n        _processOptions: function(options) {\n            let that = this,\n                template = options.template,\n                overflowTemplate = options.overflowTemplate,\n                uid = kendo.guid(),\n                groupName;\n\n            $.extend(options, {\n                uid: uid,\n                fillMode: options.fillMode ? options.fillMode : that.options.fillMode,\n                rootUid: this.uid\n            });\n\n            if (options.menuButtons) {\n                options.menuButtons = this._processInner(options.menuButtons, uid);\n            } else if (options.buttons && options.buttons.length) {\n                options.buttons = this._processInner(options.buttons, uid);\n\n                if (options.buttons.some(b => b.togglable)) {\n                    groupName = options.buttons[0].group;\n\n                    if (!!groupName && options.buttons.every(b => b.group === groupName)) {\n                        options.selection = SINGLE;\n                    } else {\n                        options.selection = MULTIPLE;\n                    }\n                } else {\n                    options.selection = NONE;\n                }\n            }\n\n            if ((template && !overflowTemplate) || options.type === SPACER) {\n                options.overflow = OVERFLOW_NEVER;\n            } else if (!options.overflow) {\n                options.overflow = OVERFLOW_AUTO;\n            }\n\n            if (options.enable !== undefined$1) {\n                options.enabled = options.enable;\n            }\n\n            return options;\n        },\n\n        _renderOverflow: function() {\n            var that = this,\n                isRtl = that._isRtl,\n                horizontalDirection = isRtl ? \"left\" : \"right\";\n            const overflowMode = that.options.overflow?.mode;\n\n            if (overflowMode !== \"section\" && overflowMode !== \"menu\") {\n                return;\n            }\n\n            that.overflowAnchorSeparator = $(`<div class=\"k-toolbar-separator k-toolbar-button-separator k-separator\" ${ROLE}=\"${SEPARATOR}\"></div>`);\n            that.overflowAnchor = $(\"<button class='k-toolbar-overflow-button' title='More tools'>\");\n            that.overflowAnchor.attr(ITEM_REF + TOOLBAR_TOOL, '');\n            that.element.append(that.overflowAnchorSeparator);\n            that.element.append(that.overflowAnchor);\n            that.overflowAnchor.kendoButton({\n                icon: overflowMode == \"menu\" ? \"more-vertical\" : \"more-horizontal\",\n                fillMode: \"flat\",\n                size: that.options.size,\n                click: function(e) {\n                    // open the overflow menu depending on the overflowMode\n                    if (overflowMode == \"section\") {\n                        that.overflowSection.open();\n                    }\n                }\n            });\n\n            if (!that.options.navigateOnTab) {\n                that.overflowAnchor.attr(TABINDEX, -1);\n            }\n\n\n            if (overflowMode == \"section\") {\n                that.overflowSection = new kendo.ui.Popup($(`<div class=\"k-toolbar-popup\"><div class=\"k-toolbar-items-list ${kendo.getValidCssClass(\"k-toolbar-items-list-\", \"fill\", that.options.fillMode)}  ${kendo.getValidCssClass(\"k-toolbar-items-list-\", \"size\", that.options.size)}\"></div></div>`), {\n                    anchor: that.element,\n                    origin: \"bottom left\",\n                    position: \"top left\",\n                    open: function(e) {\n                        if (that.trigger(OVERFLOW_OPEN)) {\n                            return e.preventDefault();\n                        }\n\n                        that.overflowSection.element.width(that.element.outerWidth());\n                    },\n                    activate: function(e) {\n                        const isSection = true;\n                        let firstFocusableSectionItem = that._getAllItems(isSection).first();\n                        that._resetTabIndex(firstFocusableSectionItem);\n                        firstFocusableSectionItem.trigger(FOCUS);\n                    },\n                    close: function(e) {\n                        if (that.trigger(OVERFLOW_CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            that._resetTabIndex(that.overflowAnchor);\n                            that.overflowAnchor.trigger(FOCUS);\n                        }\n                    }\n                });\n            }\n\n            if (overflowMode == \"menu\") {\n                that.overflowMenu = new kendo.ui.ContextMenu($(\"<ul>\"), {\n                    size: that.options.size,\n                    showOn: \"click tap\",\n                    origin: \"bottom \" + horizontalDirection,\n                    position: \"top \" + horizontalDirection,\n                    alignToAnchor: true,\n                    target: that.overflowAnchor,\n                    open: function(e) {\n                        if (that.trigger(OVERFLOW_OPEN)) {\n                            e.preventDefault();\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(OVERFLOW_CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            that._resetTabIndex(that.overflowAnchor);\n                            that.overflowAnchor.trigger(FOCUS);\n                        }\n                    }\n                });\n\n                that.overflowMenu.element.attr(KENDO_UID_ATTR, this.uid);\n\n                setTimeout(() => {\n                    that.overflowMenu.bind(SELECT, that._menuItemSelect.bind(that));\n                });\n            }\n        },\n\n        _resetOpen: function(element, extensions) {\n            var that = this,\n                uploadWrapper,\n                input;\n\n            element.closest(\".k-upload-button-wrap\").find(\"input\").remove();\n            uploadWrapper = element.wrap(\"<div class='k-upload-button-wrap'></span>\").parent();\n\n            input = $(\"<input type='file' autocomplete='off' accept='\" + extensions + \"'/>\")\n                .attr(\"aria-hidden\", true)\n                .one(\"change\", (e) => {\n                    that.trigger(CHANGE, {\n                        target: element,\n                        value: e.target.files[0]\n                    });\n\n                    that._resetOpen(element, extensions);\n                })\n                .appendTo(uploadWrapper);\n\n            element.off(KEYDOWN).on(KEYDOWN, (e) => {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    input.trigger(CLICK);\n                }\n            });\n        },\n\n        _resetTabIndex: function(toFocus) {\n            if (this.options.navigateOnTab !== true) {\n                const isSection = toFocus.closest(\".k-toolbar-popup\").length > 0;\n                const containerToSearch = isSection ? this._overflowSectionContentElement() : this.wrapper;\n                containerToSearch.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                toFocus.attr(TABINDEX, 0);\n            }\n        },\n\n        _resizable: function() {\n            var that = this,\n                element = that.element;\n\n            that._renderOverflow();\n            element.addClass(RESIZABLE_TOOLBAR);\n\n            that._resizeHandler = kendo.onResize(function() {\n                that.resize();\n            });\n        },\n\n        _resize: function(e) {\n            var containerWidth = e.width,\n                wrapper = this.element,\n                popupBtnElements = wrapper.find('[data-role=\"splitbutton\"]').add(wrapper.find('[data-role=\"dropdownbutton\"]'));\n\n            if (!this.options.resizable) {\n                return;\n            }\n\n            this.overflowMenu?.close();\n            this.overflowSection?.close();\n\n            if (popupBtnElements.length > 0) {\n                popupBtnElements.each((i, el) => {\n                    kendo.widgetInstance($(el)).close();\n                });\n            }\n\n            if (this.hasOverflowButton) {\n                this._shrink(containerWidth);\n                this._stretch(containerWidth);\n                this._toggleOverflowAnchor();\n            }\n            else {\n                this._toggleScrollButtons();\n            }\n        },\n\n        _shrink: function(containerWidth) {\n            var commandElement,\n                visibleCommands,\n                activeElement;\n            let container = this.element.find(\"> .k-toolbar-items\").length > 0 ? this.element.find(\"> .k-toolbar-items\") : this.element;\n\n            if (containerWidth < this._childrenWidth()) {\n                visibleCommands = container.children(\":visible:not([data-overflow='never'], .\" + OVERFLOW_ANCHOR + \")\");\n\n                for (var i = visibleCommands.length - 1; i >= 0; i--) {\n                    commandElement = visibleCommands.eq(i);\n\n                    if (containerWidth > this._childrenWidth()) {\n                        break;\n                    } else {\n                        activeElement = commandElement.find(\"[tabindex=0]\") || commandElement.is(\"[tabindex=0]\") ? commandElement : $(NOTHING);\n\n                        if (activeElement.length > 0) {\n                            activeElement.attr(TABINDEX, -1);\n                            this.element.children(DOT + OVERFLOW_ANCHOR).attr(TABINDEX, 0);\n                        }\n\n                        this._hideItem(commandElement);\n                    }\n                }\n            }\n        },\n\n        _showItem: function(item, containerWidth) {\n            var that = this,\n                gap = parseInt(this.element.css('gap'), 10) || 0,\n                widget;\n\n            item.removeClass(STATE_HIDDEN);\n            var itemOuterWidth = outerWidth(item, true) + gap;\n            item.addClass(STATE_HIDDEN);\n\n            if (item.length && (item.hasClass(SPACER_CLASS) || containerWidth > this._childrenWidth() + itemOuterWidth)) {\n                item.removeClass(STATE_HIDDEN);\n\n                if (this.options.navigateOnTab !== true) {\n                    item.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                } else {\n                    if (item.is(\"[tabindex=-1]\")) {\n                        item.removeAttr(TABINDEX);\n                    }\n                }\n\n                if (this.overflowSection) {\n                    this._overflowSectionContentElement().find(`[ref-section-tool=${item.data(\"uid\")}]`).addClass(STATE_HIDDEN);\n                }\n\n                if (this.overflowMenu) {\n                    if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                        if (item.hasClass(SPLIT_BUTTON)) {\n                            item = item.children().eq(0);\n                            widget = item.data(K_SPLIT_BUTTON);\n                        } else {\n                            widget = item.data(K_DROP_DOWN_BUTTON);\n                        }\n\n                        widget.menu.list.children().each((i, el) => {\n                            that._hideMenuItem($(el));\n                        });\n\n                        that._hideMenuItem(item);\n                    } else if (item.hasClass(BUTTON_GROUP)) {\n                        item.children().each((i, el) => {\n                            that._hideMenuItem($(el));\n                        });\n                    } else {\n                        that._hideMenuItem(item);\n                    }\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        _showMenuItem: function(item) {\n            var menuItem = this.overflowMenu.element.find(\">li[data-uid='\" + item.data(UID) + \"']\");\n\n            if (!menuItem.hasClass(FORCE_HIDDEN)) {\n                menuItem.removeClass(STATE_HIDDEN);\n            }\n        },\n\n        _stretch: function(containerWidth) {\n            var overflowAnchor = this.element.children(DOT + OVERFLOW_ANCHOR),\n                commandElement,\n                hiddenCommands;\n            let container = this.element.find(\"> .k-toolbar-items\").length > 0 ? this.element.find(\"> .k-toolbar-items\") : this.element;\n\n            if (containerWidth > this._childrenWidth()) {\n                hiddenCommands = container.children(DOT + STATE_HIDDEN + \":not(\" + DOT + FORCE_HIDDEN + \")\");\n\n                for (var i = 0; i < hiddenCommands.length; i++) {\n                    commandElement = hiddenCommands.eq(i);\n\n                    if (containerWidth < this._childrenWidth() || !this._showItem(commandElement, containerWidth)) {\n                        break;\n                    }\n                }\n            }\n\n            if (!this.options.navigateOnTab && overflowAnchor.is(\"[tabindex=0]\")) {\n                overflowAnchor.attr(TABINDEX, -1);\n                this._resetTabIndex(this._getAllItems().first());\n            }\n        },\n\n        _tabIndex: function() {\n            var focusableItems = this.wrapper.find(KENDO_FOCUSABLE + \":not('\" + TABINDEX_MINUS_1 + \"')\"),\n                firstFocusable = focusableItems.first();\n\n            if (this.options.navigateOnTab !== true) {\n                focusableItems.attr(TABINDEX, -1);\n                firstFocusable.attr(TABINDEX, 0);\n            } else {\n                this.wrapper.find(\".k-toolbar-item\").removeAttr(TABINDEX);\n            }\n        },\n\n        _toggleOverflowAnchor: function() {\n            var hasVisibleChildren = false;\n            if (!this.hasOverflowButton) {\n                return;\n            }\n\n            hasVisibleChildren = (this.overflowMenu?.element || this._overflowSectionContentElement()).children(\":not(.\" + STATE_HIDDEN + \", .\" + POPUP + \")\").length > 0;\n\n            if (hasVisibleChildren) {\n                this.overflowAnchor.removeClass(STATE_HIDDEN);\n                this.overflowAnchorSeparator.removeClass(STATE_HIDDEN);\n            } else {\n                this.overflowAnchor.addClass(STATE_HIDDEN);\n                this.overflowAnchorSeparator.addClass(STATE_HIDDEN);\n            }\n        }\n    });\n\n    kendo.toolbar = {\n        Item: kendo.Class,\n        OverflowButton: kendo.Class,\n        TemplateItem: kendo.Class,\n        ToolBarButton: kendo.Class,\n        registerComponent: () => null\n    };\n\n    kendo.cssProperties.registerPrefix(\"ToolBar\", \"k-toolbar-\");\n\n    kendo.cssProperties.registerValues(\"ToolBar\", [{\n        prop: \"fillMode\",\n        values: ['solid', 'flat']\n    }]);\n\n    kendo.ui.plugin(ToolBar);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
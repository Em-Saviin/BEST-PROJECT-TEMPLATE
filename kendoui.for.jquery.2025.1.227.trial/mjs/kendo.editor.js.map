{"version":3,"sources":["raw-mjs/kendo.editor.js"],"names":["kendo","UndoRedoStack","Observable","extend","init","options","fn","call","this","clear","events","push","command","stack","slice","currentCommandIndex","undo","canUndo","trigger","redo","canRedo","length","deepExtend","util","$","undefined$1","window","Class","Widget","ui","os","support","mobileOS","browser","keys","outerWidth","_outerWidth","outerHeight","_outerHeight","FORMATTING_MARKS_STYLE_ID","FORMATTING_MARKS_OVERLAY_ID","FORMATTING_MARKS_OVERLAY_WRAPPER_ID","SELECT","PLACEHOLDER_CLASS","PLACEHOLDER_TAG_ID","NATIVE_TOOLS","EditorUtils","editorWrapperTemplate","formatByName","name","format","i","inArray","tags","getToolCssClass","icon","cssClass","superscript","subscript","justifyLeft","justifyCenter","justifyRight","justifyFull","insertUnorderedList","insertOrderedList","insertUpperRomanList","insertLowerRomanList","import","indent","outdent","createLink","unlink","insertImage","insertFile","viewHtml","foreColor","backColor","createTable","addColumnLeft","addColumnRight","addRowAbove","addRowBelow","deleteRow","deleteColumn","mergeCellsHorizontally","mergeCellsVertically","splitCellHorizontally","splitCellVertically","tableProperties","tableCellProperties","tableWizardInsert","tableAlignLeft","tableAlignCenter","tableAlignRight","cleanFormatting","copyFormat","applyFormat","pdf","nameToKebab","replace","toLowerCase","registerTool","toolName","tool","Editor","defaultTools","registerFormat","formatName","formats","cacheComments","content","comments","index","retrieveComments","supportedContentEditable","document","documentElement","toolGroups","basic","scripts","alignment","lines","symbols","links","lists","dent","tablesWizard","tablesInsert","tablesAddDelete","tablesMerge","tablesPosition","formatPainter","__suppressEditableCheck","element","toolbarContainer","type","domElement","that","editorNS","editor","dom","Dom","_registerHandler","closest","update","bind","_setupType","_initToolbar","_setupHeight","_resizable","_initializeContentElement","_setupKeyboard","clipboard","Clipboard","undoRedoStack","_populateValue","mousedown","_endTyping","mouseup","e","_mouseup","_handleSpaceAndNewLines","_initializeImmutables","_ariaLabel","wrapper","find","toolbar","resize","_initInlineOverflowWrapper","notify","_showWatermarkOverlay","messages","auto","bold","italic","underline","strikethrough","fitToCell","lineHeight","formattingMarks","insertHtml","fontName","fontNameInherit","fontSize","fontSizeInherit","formatBlock","formatting","style","emptyFolder","editAreaTitle","uploadFile","overflowAnchor","orderBy","orderBySize","orderByName","invalidFileType","deleteFile","overwriteFile","directoryNotFound","imageWebAddress","imageAltText","imageWidth","imageHeight","fileWebAddress","fileTitle","fileText","linkWebAddress","linkText","linkToolTip","linkOpenInNewWindow","dialogUpdate","dialogInsert","dialogOk","dialogCancel","createTableHint","tableWizard","tableTab","cellTab","accessibilityTab","caption","summary","width","height","units","cellSpacing","cellPadding","topPadding","leftPadding","bottomPadding","rightPadding","independentCellPaddings","cellMargin","captionAlignment","position","background","tableBackground","id","border","borderStyle","borderWidth","borderColor","collapseBorders","wrapText","associateCellsWithHeaders","alignLeft","alignCenter","alignRight","alignLeftTop","alignCenterTop","alignRightTop","alignLeftMiddle","alignCenterMiddle","alignRightMiddle","alignLeftBottom","alignCenterBottom","alignRightBottom","alignRemove","columns","rows","selectAllCells","applyToColumn","applyToRow","exportAs","print","headerRows","headerColumns","tableSummaryPlaceholder","associateNone","associateScope","associateIds","borderNone","placeholder","nonce","unsafeInline","encoded","formattingMarksRefreshDelay","domain","resizable","deserialization","custom","serialization","entities","semantic","optimizeTags","keepEOL","pasteCleanup","all","css","keepNewLines","msAllFormatting","msConvertLists","msTags","none","span","stylesheets","dialogOptions","modal","draggable","animation","imageBrowser","fileBrowser","navigateOnTab","text","value","tools","destroy","_deregisterHandlers","clearTimeout","_spellCorrectTimeout","_focusOutside","windowInstance","tablePopup","_destroyUploadWidget","interSectionObserver","disconnect","resizeObserver","_destroyResizings","_destroyFormattingMarksOverlay","setOptions","_setOptionsTools","_initializePlaceholder","createRange","RangeUtils","encodedValue","encode","exec","params","range","Error","body","getAttribute","keyboard","isTypingInProgress","_focusBody","selectRange","_range","getRange","Object","map","key","immutables","test","execCommand","async","change","_commandChange","_selectionChange","managesUndoRedo","focus","restoreSelection","selection","getSelection","rangeCount","getRangeAt","doc","startContainer","endContainer","startOffset","endOffset","setStart","collapse","SelectionUtils","selectionFromDocument","paste","html","InsertHtmlCommand","refresh","textarea","val","remove","selectionRestorePoint","toRange","saveSelection","container","commonAncestorContainer","contains","RestorePoint","selectedHtml","Serializer","domToXhtml","cloneContents","removeAllRanges","addRange","state","textNodes","finder","collapsed","getFormat","isFormatted","_togglePlaceholder","trim","_oldValue","currentHtml","htmlToDom","_refreshTools","_bindTools","unbind","filter","el","each","initialize","_blur","old","_containsRange","isAncestorOrSelf","_createContentElement","iframe","wnd","lang","specifiedDomain","domainScript","src","hide","title","frameBorder","addClass","attr","tabIndex","insertBefore","location","hostname","contentWindow","contentDocument","observer","IntersectionObserver","entries","entry","isIntersecting","_decorateFormatting","unobserve","observe","getElementsByTagName","open","write","isRtl","ios","edge","chrome","href","join","close","_deleteSavedRange","component","dataSource","items","tag","className","formattingElement","getKendoDropDownList","data","list","getEffectiveBackground","inlineStyle","_appendFormattingMarksStyles","elementId","$head","head","append","_appendFormattingMarksOverlay","_formattingMarksOverlayWrapper","_formattingMarksOverlay","appendTo","_bodyTopBottomPaddings","parseFloat","_isInlineEditor","insertAfter","_updateFormattingMarksOverlayHeight","scrollHeight","inlineHeight","_inlineOverflowWrapper","wrap","parent","handlers","_handlers","h","off","handler","_uploadWidget","endTyping","scrollTop","activeElement","_activeElement","clientHeight","msie","left","top","opacity","_handleToolbarClick","target","_immutablesContext","Immutables","immutablesContext","editableTextNodes","blurTrigger","mousedownTrigger","createElement","setAttribute","appendChild","interval","setInterval","last","clearInterval","childNodes","nodeType","nodeTypes","TEXT_NODE","setTimeout","_mousedown","touch","keydown","_spellCorrect","parentElement","nodeName","_cachedHeight","restoreHeight","keyCode","BACKSPACE","DELETE","F10","first","preventPopupHide","preventDefault","LEFT","RIGHT","offset","next","nextChar","nodeValue","toolFromShortcut","toolOptions","keyPressCommand","_runPostContentKeyCommands","keypress","_showElementResizeHandles","keyup","selectionCodes","TAB","PAGEUP","PAGEDOWN","END","HOME","UP","DOWN","INSERT","ctrlKey","altKey","shiftKey","_refreshInterval","click","selectNode","focusin","hasAttribute","_showWindow","focusout","active","popup","toolbarContainerElement","get","_toolbarFocused","hasClass","removeClass","_hideWindow","_initializeColumnResizing","_initializeRowResizing","_initializeElementResizing","defaults","toolbarOptions","_processToolbarItems","_setNativeTools","parentMessages","Boolean","mode","toggle","evaluateTemplates","overflow","isPlainObject","ToolBar","on","is","stopPropagation","_initToolbarWindow","toolbarEl","prepend","kendoWindow","dragHandle","effects","minHeight","visible","autoFocus","actions","dragend","_moved","_selectionStarted","parents","gecko","which","tagName","defaultValue","deserializedRoot","getAllComments","innerHTML","_resetGroups","current","result","optionsTools","j","t","guidGroupName","flatDefaultTools","processedObject","currentGroups","Array","isArray","guid","_processToolOptions","gr","includes","values","group","g","to","_processDefaultTool","view","shortcuts","uiOptions","originalOptions","palette","template","attributes","class","showText","showIcon","tooltip","ColorTool","componentOptions","views","preview","input","buttons","_shortcutSequence","nodes","filterBy","htmlIndentSpace","_updateImmutablesState","eventNames","NS","hasOwnProperty","applyEventMap","split","toolsFromShortcut","o","changesContent","refreshDelay","applyFormattingMarks","clearFormattingMarksOverlay","_toggledFormattingMarks","children","_formattingMarksTimeout","empty","heightStyle","expectedHeight","parseInt","actualHeight","indexOf","isNaN","Keyboard","BackspaceHandler","TypingHandler","SystemHandler","SelectAllHandler","_wrapTextarea","res","ctrl","shift","alt","beforeCorrection","falseTrigger","contextmenu","one","mozilla","_finishUpdate","show","$body","toggleClass","overflowPopup","uiElement","trackImmutables","toolInOverflowMenuIsHidden","toolsToBeUpdated","overflowMenu","toolInOverflowMenu","w","editorWrap","editArea","isResizable","resizableMin","min","resizableMax","max","maxHeight","minWidth","maxWidth","ResizeObserver","_resizeTimeOut","_destroyElementResizing","ElementResizingFactory","dispose","_destroyRowResizing","RowResizing","_destroyColumnResizing","ColumnResizing","create","_showElementResizeHandlesProxy","elementResizing","parentNode","showResizeHandles","columnResizing","rowResizing","_getWindowWidth","editorElement","_overlapsWindow","box","toolbarWrapper","toolbarWrapperOffset","toolbarWrapperLeft","toolbarWrapperTop","boxOffset","boxOffsetLeft","boxOffsetTop","editorOffset","Math","plugin","Tool","commandArguments","noop","UndoTool","enable","removeAttr","emptyElementContent","emptyTableCellContent","PDFMixin","prototype","_drawPDF","drawing","drawDOM","saveAsPDF","progress","Deferred","promise","args","then","root","exportPDF","done","dataURI","saveAs","fileName","proxyURL","proxyTarget","forceProxy","resolve","fail","err","reject","jQuery","STYLE","FLOAT","CSSFLOAT","STYLEFLOAT","CLASS","KMARKER","makeMap","len","obj","nonListBlockElements","blockElements","concat","block","selfClosing","inlineElements","inline","fillAttrs","nonEmptyNonTextContentElements","normalize","node","version","firstChild","prev","nextSibling","persistedScrollTop","whitespace","emptyspace","rgb","bom","whitespaceOrBom","cssAttributes","htmlRe","entityRe","entityTable","findNodeIndex","skipText","previousSibling","isDataNode","isAncestorOf","findClosestAncestor","rootElem","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","FILTER_ACCEPT","curNode","nextNode","getNodeLength","splitDataNode","temp","newNode","cloneNode","denormalizedText","deleteData","attrEquals","cssFloat","blockParentOrBody","parentOfType","ownerDocument","blockParents","blocks","windowFromDocument","defaultView","parentWindow","ELEMENT_NODE","ATTRIBUTE_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","toHex","color","matches","x","toString","encodableChars","c","charCode","charCodeAt","entity","isBom","stripBom","stripBomNode","removeChild","insignificant","_moz_dirty","_moz_editor_bogus_node","tableCell","significantNodes","grep","child","emptyTextNode","emptyNode","significantChildNodes","isWhitespace","getTextNodes","lastTextNode","lastChild","isMarker","allowsTextContent","every","allWhitespaceContent","isEmptyspace","sibling","direction","isBlock","isPrevBlock","isNextBlock","isSelfClosing","isEmpty","isInline","isImg","isBr","scrollContainer","compatMode","scrollingElement","scrollTo","toStart","elementTop","elementHeight","marker","windowHeight","innerHeight","offsetHeight","ceil","persistScrollTop","offsetParent","offsetTop","offsetLeft","restoreScrollTop","undefined","insertAt","newElement","referenceElement","removeChildren","removeTextSiblings","closestBy","condition","rootCondition","ofType","changeTag","skipAttributes","attribute","specified","cssText","editableParent","contentEditable","unwrap","isChildOfBaseContainer","createEmptyNode","removeAttribute","mergeAttributes","origin","traverseCss","unstyle","backgroundStyle","innerText","classNames","classes","commonAncestor","ancestors","count","arguments","paths","minPathLength","Infinity","output","reverse","closestSplittableParent","apply","editableParents","editableAncestor","closestEditable","types","editable","closestEditableOfType","invert","match","ensureTrailingBreaks","elements","ensureTrailingBreak","removeTrailingBreak","br","reMapTableColumns","table","colAttr","_mapColIndices","clearTableMappings","registeredColumns","rowIndex","cells","colIndex","cellIndex","cell","rowSpan","_mapColspan","colSpan","ci","ri","associateWithIds","theadRows","numberOfTheadRows","tableRows","numberOfTableRows","theadMatrix","tbodyMatrix","tHead","_getNumberOfHeaderRows","_generateIdsForColumns","_generateIdsForRows","_assignIds","col","colspan","rowspan","k","l","timestamp","Date","getTime","row","headers","pushHeaderId","forEach","_onlyUnique","_getNumberOfColumns","currentIndex","numberOfCols","Number","_getNumberOfHeaderColumns","numberOfHeaderRows","number","self","fontSizeMappings","quoteRe","brRe","pixelRe","emptyPRe","cssDeclaration","sizzleAttr","scriptAttr","onerrorRe","bomSpan","div","supportsLeadingWhitespace","isFunction","toEditableHtml","_toEditableImmutables","immutable","prependTo","_fillEmptyElements","p","_removeSystemElements","_resetOrderedLists","ol","originalStart","ols","_preventScriptExecution","attributesToRemove","deserialize","semanticFilter","mapStart","tagMap","start","end","skipEncoding","canOptimize","semanticAttributes","specifiedAttributes","textDecoration","font","fontFamily","size","inlineStyles","ignoredStylePrefixes","prop","startsWith","strong","em","b","u","item","styleObj","splice","face","styleAttr","properties","property","lastIndex","cssProperties","$node","htmlEncode","skip","childNode","mapper","previous","jqNode","serialize","shouldOptimize","isEmptyBomNode","runCustom","script","childrenCount","textOnly","selectionFromWindow","W3CSelection","selectionFromRange","rangeDocument","documentFromRange","W3CRange","updateRangeProperties","fixIvalidRange","setEnd","setStartBefore","setStartAfter","setEndBefore","setEndAfter","selectNodeContents","deleteContents","cloneRange","deleteSubtree","hasPartialSubtree","getSubtreeIterator","RangeIterator","cloneSubtree","frag","createDocumentFragment","extractContents","extractSubtree","originalRange","insertNode","startNodeName","endNodeName","startAncestor","endAncestor","compareBoundaries","ex","isInvalidRange","fromNode","_current","_next","_end","hasNext","traverse","callback","delta","inStartContainer","inEndContainer","nodeIndex","getSubRange","subRange","textRange","createTextRange","adoptContainer","select","duplicate","right","textRangeContainer","adoptEndPoint","compareEndPoints","movedStart","movedEnd","cursorNode","textOffset","isData","anchorNode","anchorParent","cursor","moveToElementText","setEndPoint","comparison","appended","RangeEnumerator","enumerate","visit","ImmutablesRangeIterator","ImmutablesRangeEnumerator","rootNode","getEditable","nodeToPath","serializedImmutables","removeImmutables","restoreImmutables","lastType","restoreHtml","path","toRangePoint","denormalizedOffset","Marker","caret","addCaret","removeCaret","containerIndex","textNode","add","expand","isExpandable","rangeBoundary","_removeDeadMarkers","createTextNode","_normalizedIndex","pointer","shouldNormalizeStart","shouldNormalizeEnd","isBomSelected","charAt","collapsedToStart","startParent","endParent","startIndex","endIndex","boundary","immutableParent","image","stringify","partition","partitionRange","contents","mapAll","mapped","getAll","predicate","selector","getMarkers","isStartOf","isEndOf","wrapSelectedElements","startEditable","endEditable","isEnd","beforeCaret","afterCaret","search","substring","complexBlocks","IMMUTABALE","IMMUTABALE_MARKER_SELECTOR","randomId","chars","round","random","updateToolOptions","_initOptions","_toHtml","replaceWith","isDeleting","_cancelDeleting","_cancelTyping","typingInProgress","isTypingKey","backspace","del","cancelDeleting","nextImmutable","closestSelectionLi","closestImmutableLi","_removeImmutable","forwards","commonContainer","_nextNode","startRestorePoint","expandImmutablesIn","startImmutableParent","endImmutableParent","serialized","Command","restorePoint","formatter","lockRange","releaseRange","point","createDialog","postExec","_actionButtonsTemplate","insertButtonIcon","cancelButtonIcon","renderButton","themeColor","GenericCommand","endRestorePoint","ViewHtmlCommand","cmd","dialog","_footerTemplate","_footerMessages","center","FormatCommand","FormatTool","getKendoToolBar","getKendoToggleButton","MOUSEDOWN_NS","InlineFormatFinder","numberOfSiblings","referenceNode","textNodesCount","elementNodesCount","markerCount","findSuitable","sourceNode","findFormat","InlineFormatter","activate","formatNode","formatNodes","consolidate","outerMostInline","pop","GreedyInlineFormatFinder","greedyProperty","fontAttr","getInlineCssValue","attributeValue","pair","cssIndex","propertyAndValue","getFormatInner","parentsUntil","addBack","toArray","GreedyInlineFormatter","toCamelCase","action","InlineFormatTool","DelayedExecutionTool","FontTool","cssAttr","domAttr","widget","setDataSource","sender","newRange","ENTER","_widget","getKendoColorPicker","storedRange","_inputFocused","_popup","unselectable","_value","toCssRgba","fontWeight","togglable","fontStyle","toolIcon","commandOn","closeOnSelect","dataValueField","dataTextField","valuePrimitive","HTTP_PROTOCOL","protocolRegExp","endLinkCharsRegExp","LinkFormatFinder","LinkFormatter","markers","a","ref","UnlinkCommand","LinkCommand","url","_initialText","img","_close","_form","_createForm","_apply","_keydown","linkUrl","_dialog","formElement","form","kendoForm","renderButtons","field","label","editorOptions","after","ESC","textInput","anchor","AutoLinkCommand","detectedLink","detectLink","linkMarker","linkRange","_ensureWebProtocol","startNode","traverser","LeftDomTextTraverser","cancelAtNode","DomTextLinkDetection","_hasProtocolPrefix","_prefixWithWebProtocol","UnlinkTool","isLink","DomPos","_detectEnd","blank","clone","_detectStart","_isLinkDetected","puntuationOptions","extendOptions","RightDomTextTraverser","_skipStartPuntuation","lastIndexOfRegExp","ii","r","str","DomTextTraverser","cancel","_traverse","edgeNode","subText","splitIndex","SPACEBAR","BlockFormatFinder","candidate","suitable","f","_resolveListsItems","until","ImmutablesNS","BlockFormatter","ancestor","_handleImmutables","images","imageAttributes","nonImages","applyFormatting","immutableFormat","namedFormat","GreedyBlockFormatter","formatTag","ListFormatter","blockFormatter","BlockFormatTool","listElements","textAlign","float","display","marginLeft","marginRight","listStylePosition","ListFormatFinder","altAttr","matchesType","isList","unwrapTag","li","isImmutable","containsAny","_parentLists","merge","breakable","findSuitableNode","applyOnSection","section","pushAncestor","listStyleType","lastSection","lastNodes","sections","addLastSection","ul","fragment","ListCommand","ListTool","FormattingTool","toFormattingItem","dot","context","decorate","optionLabel","dataItem","toJSON","dataBound","getFormattingValue","n","selectBox","_ancestor","operator","CleanFormatCommand","tagsToClean","clean","listFormatter","unwrapListItem","highlightFirst","autoWidth","KEDITORIMAGEURL","KEDITORIMAGETITLE","KEDITORIMAGEWIDTH","KEDITORIMAGEHEIGHT","ImageCommand","removeIEAttributes","onload","onerror","applied","isIE","showBrowser","ImageBrowser","transport","read","_imageBrowser","ev","selected","dialogHeight","loadingOverlay","ImportCommand","_initializeUploadWidget","importOptions","upload","kendoUpload","success","_onUploadSuccess","_onUploadProgress","_onUploadSelect","error","_onUploadError","complete","_onUploadComplete","showFileList","multiple","saveUrl","autoUpload","saveField","validation","allowedExtensions","maxFileSize","getKendoUpload","_trigger","clearAllFiles","_removeLoadingOverlay","response","files","validationErrors","_initLoadingOverlay","eventType","uploadEvent","_iframeWrapper","_container","postProcess","genericCommand","InsertHtmlTool","initialValue","autoSize","ExportAsCommand","exportType","postToProxy","generateForm","submit","exportAsOptions","method","valueInput","exportTypeInput","fileNameInput","antiForgeryInput","csrf_param","ExportAsTool","changeHandler","_exec","itemTemplate","valueTemplate","iconClass","indentDirection","IndentFormatter","parentList","targets","mapImmutables","siblingList","nestedList","getListTypeAttr","targetIndex","styleType","targetNode","listParent","siblings","nextAll","IndentCommand","indentFormatter","OutdentCommand","OutdentTool","isOutdentable","listParentsCount","suitableNodes","ParagraphCommand","_insertMarker","_moveFocus","focusNode","shouldTrim","startInBlock","endInBlock","_blankAfter","paragraph","heading","tableNode","rng","emptyParagraphContent","parentChildrenLength","_insertParagraphAfter","headingDomName","NewLineCommand","filler","kbrParent","oldIE","KEDITORFILEURL","KEDITORFILETEXT","KEDITORFILETITLE","FileCommand","file","FileBrowser","_fileBrowser","ACTIVESTATE","SELECTEDSTATE","SCOPE","ROW","COL","ROWGROUP","COLGROUP","COLSPAN","ROWSPAN","TABLE","THEAD","TBODY","TR","TD","TH","getTouches","columnTemplate","tableFormatFinder","TableCommand","skipCleaners","_tableHtml","columnHtml","rowHeight","insertedTable","PopupTool","btn","popupTemplate","kendoPopup","copyAnchorStyles","_open","_activate","_toggle","_editor","TableWizardTool","TableWizardCommand","insertNewTable","kendoButton","_setTableSize","InsertTableTool","cols","cellWidth","cellHeight","firstCell","eq","lastCell","getOffset","tableFromLocation","floor","clientY","clientX","scrollLeft","offsetWidth","autoApplyNS","_valid","status","initiallyVisible","button","selectedRows","selectedColumns","changed","tableSize","stopImmediatePropagation","TableModificationCommand","_clearColIndexAttr","_findRowSpanCell","_resetElementResizing","_findNextTdInRow","td","lastTd","_adjustColgroups","colgroup","colElements","colgroupElements","numberOfCells","_associateHeaderIds","InsertRowCommand","cellCount","newRow","createdCell","_appendCell","newCell","InsertColumnCommand","columnIndex","_processForColSpan","_resizeCells","selectedCell","colSpanEffect","parsedWidth","unit","calculatedWidth","DeleteRowCommand","focusElement","rowParent","_focusElement","_handleRowSpanCells","adjacentCell","nextRow","firstRow","before","_reduceRowSpan","rowSpanValue","DeleteColumnCommand","columnCount","_handleColSpanCells","_reduceColSpan","colSpanValue","MergeCellsHorizontallyCommand","nextTd","_getColspan","MergeCellsVerticallyCommand","tr","targetRow","bottomTd","_getRowspan","SplitCellCommand","emptyTd","_splitCellHorizontally","_splitCellVertically","_getRowspanValue","_getColspanValue","tdToAdd","colSpanResult","rowSpanResult","TableModificationTool","commandsMap","insert","delete","column","TableFormatCommand","_showResizeHandles","TableFormatTool","isTable","align","nonSplittableTagsOnPaste","cleaners","ScriptCleaner","TabCleaner","MSWordFormatCleaner","WebkitFormatCleaner","HtmlTagsCleaner","HtmlAttrCleaner","HtmlContentCleaner","CustomCleaner","htmlToFragment","_startModification","_inProgress","_endModification","modificationInfo","_contentModification","_removeBomNodes","_onBeforeCopy","oncopy","oncut","_fileToDataURL","blob","deferred","reader","FileReader","File","getAsFile","readAsDataURL","_triggerPaste","_handleImagePaste","clipboardData","originalEvent","_insertImages","when","results","onpaste","clipboardNode","_decoreateClipboardNode","webkit","_moveToCaretPosition","clipboardRange","containers","ondragover","ondrop","dataTransfer","margin","padding","fontVariant","lineSpacing","nodeOffset","caretOffset","_caretOffset","translate","transform","rangeChanged","isStartTextNode","prevLength","bomNode","splittableParent","preventSplit","unwrapPasted","applicable","splitter","splittable","fragmentsHtml","elm","rangeEnd","focusedTable","siblingNodes","lastSiblingIndex","lastSibling","Cleaner","replacements","customReplacements","junkReplacements","convertFontMatch","$0","$1","closing","family","stripEmptyAnchors","listType","listData","startingSymbol","matchSymbol","symbol","isNumber","trimStartText","_guessUnorderedListStyle","_guessOrderedListStyle","_convertToLi","_checkForBullet","_getHtmlNoBullet","extractListLevels","level","_createList","rootMargin","rootIndex","lastRootLi","isLastRootLi","rootList","blockChildren","lastMargin","levels","acceptedNameTags","listIndex","levelType","removeAttributes","significantStyles","addSignificantStyles","isSignificantCss","removeAttributeNode","createColGroup","convertHeaders","boldedCells","removeParagraphs","paragraphs","removeTextNodes","trs","currentNode","tables","longestRow","titles","removeFormatting","filters","DomCleaner","cleanDom","collectTags","collectAttr","TextContainer","HtmlTextLines","separators","line","inlineBlockText","resetLine","appendText","textContainer","appendInlineBlockText","flashInlineBlockText","endLine","il","il1","jl","jl1","DomEnumerator","preventDown","hasText","enumerator","buildText","getDefaultSeparators","htmlLines","thead","tbody","cleaner","cellText","PREVIOUS_SIBLING","getSibling","tableCells","tableCellsWrappers","tableElements","inTable","RemoveTableContent","cellsTypes","startCell","endCell","_removeContent","getNext","evt","Event","isDefaultPrevented","deleteSelection","startTyping","_removeBomSpan","textContent","_addCaret","_restoreCaret","_handleDelete","caretPlaceholder","_merge","_cleanBomBefore","_handleBackspace","startAtLi","liIndex","startAtNonFirstLi","rangeStartNode","previousNode","_handleSelection","parentElementOrNode","_surroundFullyContent","_surroundFullySelectedAnchor","toLocaleLowerCase","_join","startImmutable","endImmutable","_moveMarker","_root","dest","_mergeWithTextNode","appendedNode","_isCaret","systemCommandIsInProgress","createUndoCommand","isModifierKey","isSystem","_toSelectableImmutables","_selectEditorBody","isCharacter","String","fromCharCode","modifier","_getShortcutModifier","navigator","platform","toUpperCase","metaKey","found","matchKey","toolKey","onEndTyping","stopTyping","force","timeout","what","ExportPdfCommand","PrintCommand","CopyFormatCommand","blockStyles","collectStyles","rangeNodes","populateStyles","destination","styleValue","styleKey","attributeKey","styles","nodeStyles","ApplyFormatCommand","removeEmptyElementsFromRange","cleanInlineParents","applyBlockStyles","applyInlineStyles","emptyElements","blockParent","outerWrapper","previousNodes","nextNodes","prevWrapper","nextWrapper","listItems","currentStyle","createdNode","topNode","CopyFormatTool","ApplyFormatTool","LineHeightCommand","LineHeightFormatTool","getKendoComboBox","closeHandler","mouseDownHandler","keyDownHandler","currentRange","prefixOptions","DOM","createMark","character","scrollableWrapper","clonedRange","domRect","y","parentRect","getBoundingClientRect","createElementNS","setAttributeNS","appendSvgMarks","overlay","isInlineEditor","FormattingMarksCommand","global","math","REGEX_NUMBER_IN_PERCENTAGES","REGEX_NUMBER_IN_PIXELS","STRING","inPercentages","ResizingUtils","constrain","lowerBound","upperBound","getScrollBarWidth","scrollbar","calculatePercentageRatio","total","inPixels","toPercentages","toPixels","KEY_DOWN","MOUSE_LEAVE","MOUSE_UP","TableElementResizing","_attachEventHandlers","eventNamespace","rootElement","_destroyResizeHandle","rtl","handle","dataAttribute","detectElementBorderHovering","resizingInProgress","resizing","handleOptions","tableElement","currentTarget","resizeHandle","elementBorderHovered","showResizeHandle","_initResizeHandle","setResizeHandlePosition","setResizeHandleDimensions","setResizeHandleDataAttributes","_attachResizeHandleEventHandlers","_initResizable","_hideResizeMarker","markerClass","_destroyResizable","Resizable","draggableElement","onResizeStart","onResize","resizeend","onResizeEnd","_disableKeyboard","setResizeHandleDragPosition","_enableKeyboard","_forceResizing","userEvents","ResizingFactory","resizingName","_destroyResizing","_initResizing","parentTable","resizingType","abs","RESIZE_HANDLE_CLASS","RESIZE_MARKER_CLASS","BODY","COLATTR","COMMA","WIDTH","handleWidth","borderOffset","mousePosition","tableInnerElement","tBodies","scrollTopOffset","scrollLeftOffset","columnWidthOffset","scrollBarWidth","columnOffsetLeft","innerElementOffsetTop","tableHead","tableBody","fullHeight","columnWidth","columnLeftOffset","adjacentColumnWidth","resizeHandleOffsetLeft","handleOffset","newWidth","initialAdjacentColumnWidth","initialColumnWidth","nextColumn","rtlModifier","initialDeltaX","initialDelta","_setTableComputedWidth","_setColumnsComputedWidth","_resizeColumn","_resizeTopAndBottomColumns","_resizeAdjacentColumns","innerElementWidth","currentColumnsWidths","topAndBottomColumns","innerTableElement","deltaWidth","adjacentColumns","_resizeAdjacentColumn","adjacentColumn","HEIGHT","handleHeight","rowOffsetLeft","rowOffsetTop","topInnerTableElement","$row","tableTopOffset","resizeHandleOffsetTop","currentRowHeight","initialTableHeight","tableHeadHeight","tableBodyHeight","initialStyleHeight","newRowHeight","_setRowsHeightInPixels","_setTableHeight","_setRowsHeightInPercentages","currentRowsHeights","newHeight","Draggable","DRAG_START","DRAG","DRAG_END","HALF_INSIDE","MOUSE_OVER","MOUSE_OUT","EAST","NORTH","NORTHEAST","NORTHWEST","SOUTH","SOUTHEAST","SOUTHWEST","WEST","ElementResizeHandle","_addStyles","_initDraggable","_initPositioningStrategy","_initDraggingStrategy","resizableElement","_destroyDraggable","_setPosition","_positioningStrategy","getPosition","_onMouseOver","_onMouseOut","HandlePositioningStrategy","_draggable","dragstart","_onDragStart","drag","_onDrag","_onDragEnd","_draggingStrategy","adjustDragDelta","deltaX","deltaY","initialDeltaY","HandleDraggingStrategy","StrategyFactory","_items","register","itemsLength","PositioningStrategyFactory","calculatePosition","handleOffsetPosition","applyHandleOffset","applyScrollOffset","rootLeft","EastPositioningStrategy","NorthPositioningStrategy","NortheastPositioningStrategy","NorthwestPositioningStrategy","SouthPositioningStrategy","SoutheastPositioningStrategy","SouthwestPositioningStrategy","WestPositioningStrategy","DraggingStrategyFactory","adjustment","deltas","xAxisAdjustment","yAxisAdjustment","HorizontalDraggingStrategy","EastDraggingStrategy","WestDraggingStrategy","VerticalDraggingStrategy","NorthDraggingStrategy","SouthDraggingStrategy","HorizontalAndVerticalDraggingStrategy","NorthEastDraggingStrategy","NorthWestDraggingStrategy","SouthEastDraggingStrategy","SouthWestDraggingStrategy","RESIZE_HANDLE_WRAPPER_CLASS","ELEMENT_RESIZING_CLASS","MOUSE_DOWN","ELEMENT_TYPES","isUndefined","ElementResizing","handles","_destroyResizeHandles","appendHandlesTo","_resizeWidth","_resizeHeight","_getMaxDimensionValue","dimension","dimensionLowercase","parentDimension","parentScrollOffset","_initResizeHandles","_bindToResizeHandlesEvents","_onResizeHandleDragStart","_initialElementHeight","_initialElementWidth","_onResizeHandleDrag","_onResizeHandleDragEnd","TableResizing","_hasRowsInPixels","ratioValue","ratioTotalValue","constrainedWidth","styleWidth","currentWidth","parentWidth","_setColumnsWidth","constrainedHeight","styleHeight","currentHeight","parentHeight","hasRowsInPixels","parentColumn","columnsLength","isWidthInPercentages","ImageResizing","_onResizeHandleDragVertical","_onResizeHandleDragHorizontal","_onResizeHandleDragLocked","_getDeltas","initialWidth","initialHeight","MAX_SAFE_INTEGER","factory","hasImg","eventTarget","eventCurrentTarget","isResizeHandleOrChild","tableResizing","cellsFormatFinder","reUnit","COL_INDEX","isTableCellWizard","tableCellWizard","selectedTable","_sourceTable","_selectedTable","selectedCells","_selectedTableCells","_selectedCells","closeCallback","onDialogClose","parseTable","TableWizardDialog","insertTable","createNewTable","updateTable","_ensureFocusableAfterTable","lastSelectedRow","cellProp","tableProp","_lastInCollection","_deleteTableRows","_addRows","_updateColumns","_updateTableProperties","cellProperties","_updateCellProperties","_updateCaption","_updateHeadersWithThead","_updateHeadersNoThead","_updateHeaderAssociates","_isHeadingRow","_isHeadingCell","cellsWithHeadersAssociated","headingIds","checkHeader","header","headersArray","headersAttr","some","_insertCells","insertCell","createTHead","_createTableRows","createTBody","cellsWithHeaders","_addScopes","initialIndex","insertRow","cellsLength","newRowsCount","firstRowLastCell","numberOfColumns","lastCurrentCell","rowColumns","deleteCell","_getStylesData","topCellPadding","_getNumericValue","leftCellPadding","bottomCellPadding","rightCellPadding","tableData","paddingTop","paddingLeft","paddingBottom","paddingRight","captionContent","deleteCaption","createCaption","_getAlignmentData","verticalAlign","_swapToHeaderCells","deleteTHead","_removeScopes","_removeAssociates","headerCols","whiteSpace","widthUnit","heightUnit","backgroundColor","bgColor","borderCollapse","_getTablePositionData","tStyle","captionClone","tableAlignment","_getAlignment","tablePosition","_getTablePosition","numberOfHeaderColumns","tableJson","_getUnit","parseTableRows","rowData","cellData","parseCell","cStyle","horizontalOnly","hAlign","vAlign","collection","TableWizardEditTool","TableCellWizardEditTool","FORM_FIELD_CLASS","INVISIBLE_CLASS","DOT","numericTextBoxSettings","borderStyles","textWrapDropDownSettings","tablePositionDropDownSettings","tableAlignmentDropDownSettings","cellAlignmentDropDownSettings","accessibilityAlignmentDropDownSettings","tablePropertiesDialogTemplate","cellPropertiesDialogTemplate","_openTablePropertiesDialog","_dialogTemplate","collectTableDialogValues","components","_initTabStripComponent","_tablePropertiesForm","_createTablePropertiesForm","_accessibilityPropertiesForm","_createAccessibilityPropertiesForm","_openCellPropertiesDialog","collectCellDialogValues","_cellPropertiesForm","_createCellPropertiesForm","isCellProperties","tabStrip","kendoTabStrip","_collectTableViewValues","_collectAccessibilityViewValues","_collectCellViewValues","tableView","check","cellView","wrapTextValue","accessibilityView","_addUnit","_initNumericTextbox","storage","settings","kendoNumericTextBox","_initDropDownList","kendoDropDownList","_setComponentValue","_initBorderStyleDropDown","_initTablePositionDropDown","_initPositionDropDown","_initTableAlignmentDropDown","_initAlignmentDropDown","_initCellAlignmentDropDown","_initAccessibilityAlignmentDropDown","_initTextWrapDropDown","_initAssociationDropDown","_initColorPicker","kendoColorPicker","clearButton","_initInput","kendoTextBox","_initCheckbox","kendoCheckBox","_initTextArea","kendoTextArea","_destroyComponents","dialogTemplate","_onPaddingTopChange","viewType","topCellPaddingNumeric","topCellPaddingValue","leftCellPaddingNumeric","bottomCellPaddingNumeric","rightCellPaddingNumeric","_cachedPadding","_onPaddingCheckChange","checked","bottomCellPaddingValue","leftCellPaddingValue","rightCellPaddingValue","_onColumnsNumberChange","headerColumnsNumeric","currentNumberOfColumnsHeaders","_onRowsNumberChange","headerRowsNumeric","currentNumberOfRowHeaders","numberOfRows","layout","grid","gutter","layoutWrapper","hint","optional","__meta__","category","description","depends","features","kendo$1"],"mappings":"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","file":"kendo.editor.js","sourcesContent":["import './kendo.combobox.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.resizable.js';\nimport './kendo.window.js';\nimport './kendo.colorpicker.js';\nimport './kendo.imagebrowser.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.textarea.js';\nimport './kendo.core.js';\nimport './kendo.toolbar.js';\nimport './kendo.icons.js';\nimport './kendo.form.js';\nimport './kendo.filebrowser.js';\nimport './kendo.draganddrop.js';\nimport './kendo.html.button.js';\nimport './kendo.tabstrip.js';\n\n(function(kendo) {\n    var UndoRedoStack = kendo.Observable.extend({\n        init: function(options) {\n            kendo.Observable.fn.init.call(this, options);\n            this.clear();\n        },\n        events: [ \"undo\", \"redo\" ],\n        push: function (command) {\n            this.stack = this.stack.slice(0, this.currentCommandIndex + 1);\n            this.currentCommandIndex = this.stack.push(command) - 1;\n        },\n        undo: function () {\n            if (this.canUndo()) {\n                var command = this.stack[this.currentCommandIndex--];\n                command.undo();\n                this.trigger(\"undo\", { command: command });\n            }\n        },\n        redo: function () {\n            if (this.canRedo()) {\n                var command = this.stack[++this.currentCommandIndex];\n                command.redo();\n                this.trigger(\"redo\", { command: command });\n            }\n        },\n        clear: function() {\n            this.stack = [];\n            this.currentCommandIndex = -1;\n        },\n        canUndo: function () {\n            return this.currentCommandIndex >= 0;\n        },\n        canRedo: function () {\n            return this.currentCommandIndex != this.stack.length - 1;\n        }\n    });\n\n    kendo.deepExtend(kendo, {\n        util: {\n            UndoRedoStack: UndoRedoStack\n        }\n    });\n})(kendo);\n\n(function($,undefined$1) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        Widget = kendo.ui.Widget,\n        os = kendo.support.mobileOS,\n        browser = kendo.support.browser,\n        extend = $.extend,\n        deepExtend = kendo.deepExtend,\n        keys = kendo.keys,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        NS = \".kendoEditor\";\n\n    const FORMATTING_MARKS_STYLE_ID = \"formatting-marks-style\",\n          FORMATTING_MARKS_OVERLAY_ID = \"formatting-marks-overlay\",\n          FORMATTING_MARKS_OVERLAY_WRAPPER_ID = \"formatting-marks-overlay-wrapper\";\n\n    var SELECT = \"select\";\n    var SELECT_OVERLAY_SELECTOR = \"select.k-select-overlay\";\n    var PLACEHOLDER_CLASS = \"k-placeholder\";\n    var PLACEHOLDER_TAG_ID = \"placeholder\";\n    var REFRESH_INTERVAL = 200;\n    var DEFAULT_LANGUAGE = \"en\";\n\n    var NATIVE_TOOLS = [\n        \"insertLineBreak\",\n        \"insertParagraph\",\n        \"redo\",\n        \"undo\",\n        \"autoLink\"\n    ];\n\n    const TOOLBAR_ALLOWED_CLOSE_SELECTORS = \".k-icon,.k-svg-icon,svg,path,.k-editor-window,.k-editor-toolbar,.k-editortoolbar-dragHandle,[ref-toolbar-tool],[ref-toolbar-tool] *\";\n\n    var EditorUtils = {\n        editorWrapperTemplate: () =>\n            '<div class=\"k-editor\">' +\n                '<div class=\"k-editor-toolbar\" role=\"toolbar\"></div>' +\n                '<div class=\"k-editable-area k-editor-content\"></div>' +\n            '</div>',\n\n        formatByName: function(name, format) {\n            for (var i = 0; i < format.length; i++) {\n                if ($.inArray(name, format[i].tags) >= 0) {\n                    return format[i];\n                }\n            }\n        },\n\n        getToolCssClass: function(name, icon) {\n            var toolCssClassNames = {\n                superscript: \"supscript\",\n                subscript: \"subscript\",\n                justifyLeft: \"align-left\",\n                justifyCenter: \"align-center\",\n                justifyRight: \"align-right\",\n                justifyFull: \"align-justify\",\n                insertUnorderedList: \"list-unordered\",\n                insertOrderedList: \"list-ordered\",\n                insertUpperRomanList: \"list-roman-upper\",\n                insertLowerRomanList: \"list-roman-lower\",\n                \"import\": \"import\",\n                indent: \"indent\",\n                outdent: \"outdent\",\n                createLink: \"link\",\n                unlink: \"unlink\",\n                insertImage: \"image\",\n                insertFile: \"file-add\",\n                viewHtml: \"code\",\n                foreColor: \"foreground-color\",\n                backColor: \"droplet\",\n                createTable: \"table-add\",\n                addColumnLeft: \"table-column-insert-left\",\n                addColumnRight: \"table-column-insert-right\",\n                addRowAbove: \"table-row-insert-above\",\n                addRowBelow: \"table-row-insert-below\",\n                deleteRow: \"table-row-delete\",\n                deleteColumn: \"table-column-delete\",\n                mergeCellsHorizontally: \"cells-merge-horizontally\",\n                mergeCellsVertically: \"cells-merge-vertically\",\n                splitCellHorizontally: \"cell-split-horizontally\",\n                splitCellVertically: \"cell-split-vertically\",\n                tableProperties: \"table-properties\",\n                tableCellProperties: \"table-cell-properties\",\n                tableWizardInsert: \"table-wizard\",\n                tableAlignLeft: \"table-position-start\",\n                tableAlignCenter: \"table-position-center\",\n                tableAlignRight: \"table-position-end\",\n                cleanFormatting: \"clear-css\",\n                copyFormat: \"copy-format\",\n                applyFormat: \"apply-format\",\n                pdf: \"file-pdf\"\n            };\n\n            var cssClass = toolCssClassNames[name];\n\n            if (cssClass) {\n                return cssClass;\n            }\n\n            if (icon) {\n                return icon;\n            }\n\n            return EditorUtils.nameToKebab(name);\n        },\n\n        nameToKebab: function(name) {\n            return name.replace(/([a-z])([A-Z])/g, \"$1-$2\")\n                .replace(/[\\s_]+/g, '-')\n                .toLowerCase();\n        },\n\n        registerTool: function(toolName, tool) {\n            if (!tool.name) {\n                tool.options.name = toolName;\n                tool.name = toolName.toLowerCase();\n            }\n\n            if (!tool.options.ui) {\n                tool.options.ui = {};\n            }\n\n            tool.options.ui.command = toolName;\n\n            Editor.defaultTools[toolName] = tool;\n        },\n\n        registerFormat: function(formatName, format) {\n            Editor.fn.options.formats[formatName] = format;\n        },\n\n        cacheComments: function(content, comments) {\n            for (var index in comments) {\n                content = content.replace(comments[index], \"{\" + index + \"}\");\n            }\n            return content;\n        },\n\n        retrieveComments: function(content, comments) {\n            for (var index in comments) {\n                content = content.replace(\"{\" + index + \"}\", comments[index]);\n            }\n            return content;\n        }\n    };\n\n    var messages = {\n        auto: \"Auto\",\n        bold: \"Bold\",\n        italic: \"Italic\",\n        underline: \"Underline\",\n        strikethrough: \"Strikethrough\",\n        superscript: \"Superscript\",\n        subscript: \"Subscript\",\n        fitToCell: \"Fit to cell\",\n        justifyCenter: \"Center text\",\n        justifyLeft: \"Align text left\",\n        justifyRight: \"Align text right\",\n        justifyFull: \"Justify\",\n        insertUnorderedList: \"Insert unordered list\",\n        insertOrderedList: \"Insert ordered list\",\n        lineHeight: \"Set line height\",\n        formattingMarks: \"Toggle formatting marks\",\n        indent: \"Indent\",\n        outdent: \"Outdent\",\n        createLink: \"Insert hyperlink\",\n        unlink: \"Remove hyperlink\",\n        insertImage: \"Insert image\",\n        insertFile: \"Insert file\",\n        insertHtml: \"Insert HTML\",\n        viewHtml: \"View HTML\",\n        fontName: \"Select font family\",\n        fontNameInherit: \"(inherited font)\",\n        fontSize: \"Select font size\",\n        fontSizeInherit: \"(inherited size)\",\n        formatBlock: \"Format\",\n        formatting: \"Format\",\n        foreColor: \"Color\",\n        backColor: \"Background color\",\n        style: \"Styles\",\n        emptyFolder: \"Empty Folder\",\n        editAreaTitle: \"Editable area. Press F10 for toolbar.\",\n        uploadFile: \"Upload\",\n        overflowAnchor: \"More tools\",\n        orderBy: \"Arrange by:\",\n        orderBySize: \"Size\",\n        orderByName: \"Name\",\n        invalidFileType: \"The selected file {0} is not valid. Supported file types are {1}.\",\n        deleteFile: 'Are you sure you want to delete {0}?',\n        overwriteFile: 'A file with name {0} already exists in the current directory. Do you want to overwrite it?',\n        directoryNotFound: \"A directory with this name was not found.\",\n        imageWebAddress: \"Web address\",\n        imageAltText: \"Alternate text\",\n        imageWidth: \"Width (px)\",\n        imageHeight: \"Height (px)\",\n        fileWebAddress: \"Web address\",\n        fileTitle: \"Title\",\n        fileText: \"Text\",\n        linkWebAddress: \"Web address\",\n        linkText: \"Text\",\n        linkToolTip: \"ToolTip\",\n        linkOpenInNewWindow: \"Open link in new window\",\n        dialogUpdate: \"Update\",\n        dialogInsert: \"Insert\",\n        dialogOk: \"Confirm\",\n        dialogCancel: \"Cancel\",\n        cleanFormatting: \"Clean formatting\",\n        createTable: \"Create a table\",\n        createTableHint: \"Create a {0} x {1} table\",\n        addColumnLeft: \"Add column on the left\",\n        addColumnRight: \"Add column on the right\",\n        addRowAbove: \"Add row above\",\n        addRowBelow: \"Add row below\",\n        deleteRow: \"Delete row\",\n        deleteColumn: \"Delete column\",\n        mergeCellsHorizontally: \"Merge cells horizontally\",\n        mergeCellsVertically: \"Merge cells vertically\",\n        splitCellHorizontally: \"Split cells horizontally\",\n        splitCellVertically: \"Split cells vertically\",\n        tableAlignLeft: \"Table Align Left\",\n        tableAlignCenter: \"Table Align Center\",\n        tableAlignRight: \"Table Align Right\",\n        tableWizard: \"Table Wizard\",\n        tableProperties: \"Table Properties\",\n        tableCellProperties: \"Cell Properties\",\n        tableTab: \"General\",\n        cellTab: \"Cell\",\n        accessibilityTab: \"Advanced\",\n        caption: \"Caption\",\n        summary: \"Summary\",\n        width: \"Width\",\n        height: \"Height\",\n        units: \"Units\",\n        cellSpacing: \"Cell Spacing\",\n        cellPadding: \"Cell Padding\",\n        topPadding: \"Top\",\n        leftPadding: \"Left\",\n        bottomPadding: \"Bottom\",\n        rightPadding: \"Right\",\n        independentCellPaddings: \"Independent Cell Paddings\",\n        cellMargin: \"Cell Margin\",\n        alignment: \"Alignment\",\n        captionAlignment: \"Caption alignment\",\n        position: \"Position\",\n        background: \"Background\",\n        tableBackground: \"Table background\",\n        cssClass: \"CSS Class\",\n        id: \"ID\",\n        border: \"Border\",\n        borderStyle: \"Border Style\",\n        borderWidth: \"Border Width\",\n        borderColor: \"Border Color\",\n        collapseBorders: \"Collapse borders\",\n        wrapText: \"Wrap text\",\n        associateCellsWithHeaders: \"Associate headers\",\n        alignLeft: \"Align Left\",\n        alignCenter: \"Align Center\",\n        alignRight: \"Align Right\",\n        alignLeftTop: \"Align Left Top\",\n        alignCenterTop: \"Align Center Top\",\n        alignRightTop: \"Align Right Top\",\n        alignLeftMiddle: \"Align Left Middle\",\n        alignCenterMiddle: \"Align Center Middle\",\n        alignRightMiddle: \"Align Right Middle\",\n        alignLeftBottom: \"Align Left Bottom\",\n        alignCenterBottom: \"Align Center Bottom\",\n        alignRightBottom: \"Align Right Bottom\",\n        alignRemove: \"Remove Alignment\",\n        columns: \"Columns\",\n        rows: \"Rows\",\n        selectAllCells: \"Apply to all cells\",\n        applyToColumn: \"apply to column\",\n        applyToRow: \"apply to row\",\n        exportAs: \"Export As\",\n        \"import\": \"Import\",\n        print: \"Print\",\n        headerRows: \"Header Rows\",\n        headerColumns: \"Header Cols\",\n        tableSummaryPlaceholder: \"Summary attribute is not HTML5 compatible.\",\n        associateNone: \"None\",\n        associateScope: \"Associate using 'scope' attribute\",\n        associateIds: \"Associate using Ids\",\n        copyFormat: \"Copy format\",\n        applyFormat: \"Apply format\",\n        borderNone: \"None\",\n        undo: \"Undo\",\n        redo: \"Redo\"\n    };\n\n    var supportedContentEditable = typeof(document.documentElement.contentEditable) != 'undefined';\n\n    var toolGroups = {\n        basic: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n        undo: [\"undo\", \"redo\"],\n        scripts: [\"subscript\", \"superscript\" ],\n        alignment: [\"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\" ],\n        lines: [\"lineHeight\"],\n        symbols: [\"formattingMarks\"],\n        links: [\"insertImage\", \"insertFile\", \"createLink\", \"unlink\"],\n        lists: [\"insertUnorderedList\", \"insertOrderedList\", \"insertUpperRomanList\", \"insertLowerRomanList\",],\n        dent: [\"indent\", \"outdent\"],\n        tablesWizard: [\"tableProperties\", \"tableCellProperties\"],\n        tablesInsert: [\"createTable\"],\n        tablesAddDelete: [ \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\" ],\n        tablesMerge: [ \"mergeCellsHorizontally\", \"mergeCellsVertically\", \"splitCellHorizontally\", \"splitCellVertically\" ],\n        tablesPosition: [ \"tableAlignLeft\", \"tableAlignCenter\", \"tableAlignRight\" ],\n        formatPainter: [ \"copyFormat\", \"applyFormat\" ]\n    };\n\n    var Editor = Widget.extend({\n        __suppressEditableCheck: false,\n        init: function(element, options) {\n            var that = this,\n                editorNS = kendo.ui.editor,\n                dom = editorNS.Dom,\n                toolbarContainer,\n                type, domElement;\n\n\n            /* suppress initialization in devices w/o proper contenteditable support */\n            if (!supportedContentEditable && !that.__suppressEditableCheck) {\n                return;\n            }\n\n            Widget.fn.init.call(that, element, options);\n\n            that.options = deepExtend({}, that.options, options);\n\n            element = that.element;\n            domElement = element[0];\n            type = dom.name(domElement);\n\n            this._registerHandler(\n                element.closest(\"form\"), \"submit\", that.update.bind(that, undefined$1)\n            );\n\n            toolbarContainer = that._setupType(element);\n\n            that._initToolbar(toolbarContainer);\n            that._setupHeight(type);\n            that._resizable();\n            that._initializeContentElement(that);\n            that._setupKeyboard();\n\n            that.clipboard = new editorNS.Clipboard(this);\n            that.undoRedoStack = new kendo.util.UndoRedoStack();\n\n            that._populateValue(options, domElement);\n\n            that._registerHandler(document, {\n                \"mousedown\": function() { that._endTyping(); },\n                \"mouseup\": function(e) { that._mouseup(e); }\n            });\n\n            that._registerHandler(window, \"resize\", that._handleSpaceAndNewLines.bind(that));\n\n            that._initializeImmutables();\n\n            if (type == \"textarea\") {\n                that._ariaLabel(that.wrapper.find(\"iframe\"));\n            }\n\n            that.toolbar.resize();\n\n            that._initInlineOverflowWrapper();\n\n            kendo.notify(that);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay((that.wrapper && that.wrapper[0]) || that.element[0]);\n            }\n        },\n\n        events: [\n            \"select\",\n            \"change\",\n            \"execute\",\n            \"error\",\n            \"paste\",\n            \"keydown\",\n            \"keyup\"\n        ],\n\n        options: {\n            name: \"Editor\",\n            messages: messages,\n            placeholder: \"\",\n            nonce: \"\",\n            unsafeInline: true,\n            formats: {},\n            encoded: true,\n            formattingMarksRefreshDelay: 250,\n            domain: null,\n            resizable: false,\n            deserialization: {\n                custom: null\n            },\n            serialization: {\n                entities: true,\n                semantic: true,\n                scripts: false,\n                optimizeTags: false,\n                keepEOL: false\n            },\n            pasteCleanup: {\n                all: false,\n                css: false,\n                custom: null,\n                keepNewLines: false,\n                msAllFormatting: false,\n                msConvertLists: true,\n                msTags: true,\n                none: false,\n                span: false\n            },\n            stylesheets: [],\n            dialogOptions: {\n                modal: true, resizable: false, draggable: true,\n                animation: false\n            },\n            imageBrowser: null,\n            fileBrowser: null,\n            navigateOnTab: false,\n            fontName: [\n                { text: \"Arial\", value: \"Arial, Helvetica, sans-serif\" },\n                { text: \"Courier New\", value: \"\\\"Courier New\\\", Courier, monospace\" },\n                { text: \"Georgia\", value: \"Georgia, serif\" },\n                { text: \"Impact\", value: \"Impact, Charcoal, sans-serif\" },\n                { text: \"Lucida Console\", value: \"\\\"Lucida Console\\\", Monaco, monospace\" },\n                { text: \"Tahoma\", value: \"Tahoma, Geneva, sans-serif\" },\n                { text: \"Times New Roman\", value: \"\\\"Times New Roman\\\", Times, serif\" },\n                { text: \"Trebuchet MS\", value: \"\\\"Trebuchet MS\\\", Helvetica, sans-serif\" },\n                { text: \"Verdana\", value: \"Verdana, Geneva, sans-serif\" }\n            ],\n            fontSize: [\n                { text: \"1 (8pt)\", value: \"xx-small\" },\n                { text: \"2 (10pt)\", value: \"x-small\" },\n                { text: \"3 (12pt)\", value: \"small\" },\n                { text: \"4 (14pt)\", value: \"medium\" },\n                { text: \"5 (18pt)\", value: \"large\" },\n                { text: \"6 (24pt)\", value: \"x-large\" },\n                { text: \"7 (36pt)\", value: \"xx-large\" }\n            ],\n            formatBlock: [\n                { text: \"Paragraph\", value: \"p\" },\n                { text: \"Quotation\", value: \"blockquote\" },\n                { text: \"Heading 1\", value: \"h1\" },\n                { text: \"Heading 2\", value: \"h2\" },\n                { text: \"Heading 3\", value: \"h3\" },\n                { text: \"Heading 4\", value: \"h4\" },\n                { text: \"Heading 5\", value: \"h5\" },\n                { text: \"Heading 6\", value: \"h6\" }\n            ],\n            tools: [\n                \"formatting\",\n                \"bold\",\n                \"italic\",\n                \"underline\",\n                \"undo\",\n                \"redo\",\n                \"justifyLeft\",\n                \"justifyCenter\",\n                \"justifyRight\",\n                \"copyFormat\",\n                \"applyFormat\",\n                \"insertUnorderedList\",\n                \"insertOrderedList\",\n                \"indent\",\n                \"outdent\",\n                \"createLink\",\n                \"unlink\",\n                \"insertImage\",\n                \"tableProperties\",\n                \"tableCellProperties\",\n                \"createTable\",\n                \"addRowAbove\",\n                \"addRowBelow\",\n                \"addColumnLeft\",\n                \"addColumnRight\",\n                \"deleteRow\",\n                \"deleteColumn\",\n                \"mergeCellsHorizontally\",\n                \"mergeCellsVertically\",\n                \"splitCellHorizontally\",\n                \"splitCellVertically\",\n                \"tableAlignLeft\",\n                \"tableAlignCenter\",\n                \"tableAlignRight\"\n            ]\n        },\n\n        destroy: function() {\n            var editor = this;\n\n            Widget.fn.destroy.call(this);\n\n            this._endTyping(true);\n\n            this._deregisterHandlers();\n\n            clearTimeout(this._spellCorrectTimeout);\n\n            this._focusOutside();\n\n            this.toolbar.destroy();\n\n            if (this.windowInstance) {\n                this.windowInstance.destroy();\n            }\n            if (this.tablePopup) {\n                this.tablePopup.destroy();\n            }\n\n            editor._destroyUploadWidget();\n\n            if (this.interSectionObserver) {\n                this.interSectionObserver.disconnect();\n                this.interSectionObserver = null;\n            }\n\n            if (this.resizeObserver) {\n                this.resizeObserver.disconnect();\n                this.resizeObserver = null;\n                this.wrapper.css(\"min-height\", \"\");\n                this.wrapper.css(\"max-height\", \"\");\n            }\n\n            editor._destroyResizings();\n\n            editor._destroyFormattingMarksOverlay();\n\n            kendo.destroy(this.wrapper);\n        },\n\n        setOptions: function(options) {\n            var editor = this;\n\n            Widget.fn.setOptions.call(editor, options);\n\n            if (options.tools) {\n                this._setOptionsTools(options.tools);\n            }\n\n            this._initializePlaceholder();\n        },\n\n        createRange: function(document) {\n            return kendo.ui.editor.RangeUtils.createRange(document || this.document);\n        },\n\n        encodedValue: function() {\n            return kendo.ui.editor.Dom.encode(this.value());\n        },\n\n        exec: function(name, params) {\n            var that = this;\n            var command = null;\n            var defaultTools = kendo.ui.Editor.defaultTools;\n            var range, tool, prevented;\n\n            if (!name) {\n                throw new Error(\"kendoEditor.exec(): `name` parameter cannot be empty\");\n            }\n\n            if (that.body.getAttribute(\"contenteditable\") !== \"true\" &&\n                name !== \"print\" &&\n                name !== \"pdf\" &&\n                name !== \"exportAs\") {\n                return false;\n            }\n\n            if (!that.keyboard.isTypingInProgress()) {\n                that._focusBody();\n                that.selectRange(that._range || that.getRange());\n            }\n\n            tool = that.tools[name] || defaultTools[name];\n\n            if (!tool) {\n                Object.keys(defaultTools).map(key => {\n                    if (key.toLowerCase() === name) {\n                        tool = defaultTools[key];\n                    }\n                });\n            }\n\n            if (tool) {\n                range = that.getRange();\n\n                if (tool.command) {\n                    command = tool.command(extend({ range: range, body: that.body, immutables: !!that.immutables }, params));\n                }\n\n                prevented = that.trigger(\"execute\", { name: name, command: command });\n\n                if (prevented) {\n                    return;\n                }\n\n                if (/^(undo|redo)$/i.test(name)) {\n                    that.undoRedoStack[name]();\n                } else if (command) {\n                    that.execCommand(command);\n\n                    if (command.async) {\n                        command.change = that._commandChange.bind(that);\n                        return;\n                    }\n                }\n\n                // Prevent double execution when the formatting marks tool is used.\n                if (name !== \"formattingMarks\") {\n                    that._handleSpaceAndNewLines();\n                }\n                that._selectionChange();\n            }\n        },\n\n        _commandChange: function() {\n            const that = this;\n            that._selectionChange();\n            that._handleSpaceAndNewLines();\n        },\n\n        execCommand: function(command) {\n            if (!command.managesUndoRedo) {\n                this.undoRedoStack.push(command);\n            }\n\n            command.editor = this;\n            command.exec();\n        },\n\n        focus: function() {\n            this.restoreSelection();\n        },\n\n        getRange: function() {\n            var selection = this.getSelection(),\n                range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : this.createRange(),\n                doc = this.document;\n\n            if (range.startContainer == doc && range.endContainer == doc && !range.startOffset && !range.endOffset) {\n                range.setStart(this.body, 0);\n                range.collapse(true);\n            }\n\n            return range;\n        },\n\n        getSelection: function() {\n            return kendo.ui.editor.SelectionUtils.selectionFromDocument(this.document);\n        },\n\n        paste: function(html, options) {\n            this.focus();\n\n            var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n                range: this.getRange(),\n                html: html\n            }, options));\n\n            command.editor = this;\n\n            command.exec();\n        },\n\n        refresh: function() {\n            var that = this;\n\n            if (that.textarea) {\n                that._destroyResizings();\n                // preserve updated value before re-initializing\n                // don't use update() to prevent the editor from encoding the content too early\n                var value = that.value();\n                that.textarea.val(value);\n                that.wrapper.find(\"iframe\").remove();\n                that._initializeContentElement(that);\n                that.value(value);\n            }\n        },\n\n        restoreSelection: function() {\n            this._focusBody();\n\n            if (this.selectionRestorePoint) {\n                this.selectRange(this.selectionRestorePoint.toRange());\n            }\n        },\n\n        saveSelection: function(range) {\n            range = range || this.getRange();\n            var container = range.commonAncestorContainer,\n                body = this.body;\n\n            if (container == body || $.contains(body, container)) {\n                this.selectionRestorePoint = new kendo.ui.editor.RestorePoint(range, body);\n            }\n        },\n\n        selectedHtml: function() {\n            return kendo.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());\n        },\n\n        selectRange: function(range) {\n            this._focusBody();\n            var selection = this.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n            this.saveSelection(range);\n        },\n\n        state: function(toolName) {\n            var tool = kendo.ui.Editor.defaultTools[toolName];\n            var finder = tool && (tool.options.finder || tool.finder);\n            var RangeUtils = kendo.ui.editor.RangeUtils;\n            var range, textNodes;\n\n            if (finder) {\n                range = this.getRange();\n\n                textNodes = RangeUtils.textNodes(range);\n\n                if (!textNodes.length && range.collapsed) {\n                    textNodes = [range.startContainer];\n                }\n\n                return finder.getFormat ? finder.getFormat(textNodes) : finder.isFormatted(textNodes);\n            }\n\n            return false;\n        },\n\n        update: function(value) {\n            value = value || this.options.encoded ? this.encodedValue() : this.value();\n\n            if (this.textarea) {\n                this.textarea.val(value);\n                this._togglePlaceholder(!value.trim());\n            } else {\n                this._oldValue = value;\n            }\n        },\n\n        value: function(html) {\n            var body = this.body,\n                editorNS = kendo.ui.editor,\n                options = this.options,\n                currentHtml = editorNS.Serializer.domToXhtml(body, options.serialization);\n\n            if (html === undefined$1) {\n                return currentHtml;\n            }\n\n            if (html == currentHtml) {\n                return;\n            }\n\n            editorNS.Serializer.htmlToDom(html, body, options.deserialization);\n\n            this.selectionRestorePoint = null;\n            this.update();\n            this._refreshTools();\n        },\n\n        _bindTools: function() {\n            var that = this,\n                defaultTools = this.tools;\n\n            that.unbind(\"select\", that.toolbar.resize.bind(that.toolbar));\n\n            that.toolbar.element.find(\"[data-command]\")\n                .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                .each((i, el) => {\n                    var toolName = el.getAttribute(\"data-command\"),\n                        tool = defaultTools[toolName];\n\n                    if (tool && tool.initialize) {\n                        tool.initialize($(el), that);\n                    }\n                });\n\n            that.bind(\"select\", that.toolbar.resize.bind(that.toolbar));\n        },\n\n        _blur: function() {\n            var textarea = this.textarea;\n            var old = textarea ? textarea.val() : this._oldValue;\n            var value = this.options.encoded ? this.encodedValue() : this.value();\n\n            this.update();\n\n            if (textarea) {\n                textarea.trigger(\"blur\");\n            }\n\n            if (value != old) {\n                this.trigger(\"change\");\n                if (textarea) {\n                    textarea.trigger(\"change\");\n                }\n            }\n        },\n\n        _containsRange: function(range) {\n            var dom = kendo.ui.editor.Dom;\n            var body = this.body;\n            return range && dom.isAncestorOrSelf(body, range.startContainer) &&\n                dom.isAncestorOrSelf(body, range.endContainer);\n        },\n\n        _createContentElement: function(stylesheets) {\n            var editor = this;\n            var iframe, wnd, doc;\n            var textarea = editor.textarea;\n            var specifiedDomain = editor.options.domain;\n            var domain = specifiedDomain || document.domain;\n            var domainScript = \"\";\n            var src = 'javascript:\"\"';\n            var lang = \"\";\n\n            textarea.hide();\n\n            iframe = $(\"<iframe />\", { title: editor.options.messages.editAreaTitle, frameBorder: \"0\" })[0];\n\n            $(iframe)\n                .css(\"display\", \"\")\n                .addClass(\"k-content k-iframe\")\n                .attr(\"tabindex\", textarea[0].tabIndex)\n                .insertBefore(textarea);\n\n            // automatically relax same-origin policy if document.domain != location.hostname,\n            // or forcefully relax if options.domain is specified (for document.domain = document.domain scenario)\n            if (specifiedDomain || domain != location.hostname) {\n                // relax same-origin policy\n                domainScript = `<script ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>document.domain=\"${domain}\"</script>`;\n                src = \"javascript:document.write('\" + domainScript + \"')\";\n                iframe.src = src;\n            }\n\n            if (!iframe.src) {\n                iframe.src = \"\";\n            }\n\n            wnd = iframe.contentWindow || iframe;\n            doc = wnd.document || iframe.contentDocument;\n\n            // https://github.com/telerik/kendo-ui-core/issues/7561\n            const observer = editor.interSectionObserver = new IntersectionObserver(entries => {\n                for (const entry of entries) {\n                    if (entry.isIntersecting) {\n                        editor._decorateFormatting(doc.body);\n                        observer.unobserve(iframe);\n                    }\n                }\n            });\n            observer.observe(iframe);\n\n            lang = document.getElementsByTagName(\"html\")[0].getAttribute(\"lang\") || DEFAULT_LANGUAGE;\n\n            doc.open();\n            doc.write(\n                \"<!DOCTYPE html><html lang='\" + lang + \"'><head>\" +\n                \"<meta charset='utf-8' />\" +\n                \"<title>Kendo UI Editor content</title>\" +\n                `<style ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>` +\n                    \"html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}\" +\n                    \"body{padding:0;margin:0;}\" +\n                    \"body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;\" +\n                    \"word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;\" +\n                    (kendo.support.isRtl(textarea) ? \"direction:rtl;\" : \"\") +\n                    (os.ios ? \"word-break:keep-all;\" : \"\") +\n                    (browser.edge || browser.chrome ? \"height:100%;\" : \"\") +\n                    \"}\" +\n                    \"h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}\" +\n                    \"p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}\" +\n                    \"ul,ol{padding-left:2.5em}\" +\n                    \"span{-ms-high-contrast-adjust:none;}\" +\n                    \"a{color:#00a}\" +\n                    \"code{font-size:1.23em}\" +\n                    \"telerik\\\\3Ascript{display: none;}\" +\n                    \".k-table{width:100%;border-spacing:0;margin: 0 0 1em;}\" +\n                    \".k-table td{min-width:1px;padding:.2em .3em;}\" +\n                    \".k-table,.k-table td{outline:0;border: 1px dotted #ccc;}\" +\n                    \".k-table th{outline:0;border: 1px dotted #999;}\" +\n                    \".k-table p{margin:0;padding:0;}\" +\n                    \".k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}\" +\n                    \".k-column-resize-handle {width: 100%; height: 100%;}\" +\n                    \".k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}\" +\n                    \".k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}\" +\n                    \".k-row-resize-handle {display: table; width: 100%; height: 100%;}\" +\n                    \".k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}\" +\n                    \".k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}\" +\n                    \".k-element-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}\" +\n                    \".k-element-resize-handle {width: 100%; height: 100%;}\" +\n                    \".k-element-resize-handle.k-resize-east{cursor:e-resize;}\" +\n                    \".k-element-resize-handle.k-resize-north{cursor:n-resize;}\" +\n                    \".k-element-resize-handle.k-resize-northeast{cursor:ne-resize;}\" +\n                    \".k-element-resize-handle.k-resize-northwest{cursor:nw-resize;}\" +\n                    \".k-element-resize-handle.k-resize-south{cursor:s-resize;}\" +\n                    \".k-element-resize-handle.k-resize-southeast{cursor:se-resize;}\" +\n                    \".k-element-resize-handle.k-resize-southwest{cursor:sw-resize;}\" +\n                    \".k-element-resize-handle.k-resize-west{cursor:w-resize;}\" +\n                    \".k-table.k-element-resizing{opacity:0.6;}\" +\n                    \".k-placeholder{color:grey}\" +\n                    \"k\\\\:script{display:none;}\" +\n                \"</style>\" +\n                domainScript +\n                $.map(stylesheets, function(href) {\n                    return `<link rel='stylesheet' href='${href}' ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>`;\n                }).join(\"\") +\n                `</head><body id='${editor.element.attr(\"id\")}' autocorrect='off' contenteditable='true'></body></html>`\n            );\n            doc.close();\n\n            return wnd;\n        },\n\n        _deleteSavedRange: function() {\n            if (\"_range\" in this) {\n                delete this._range;\n            }\n        },\n\n        _decorateFormatting: function(body) {\n            var formattingElement = this.toolbar.element.find(\"input[data-command=formatting]\"),\n                dom = kendo.ui.editor.Dom,\n                component, dataSource, items, i, tag, className, style;\n\n            if (formattingElement.length) {\n                component = formattingElement.getKendoDropDownList();\n                if (!component) {\n                    return;\n                }\n                dataSource = component.dataSource;\n                items = dataSource.data();\n\n                if (body) {\n                    component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n                }\n\n                if (this.options.unsafeInline !== false) {\n\n                    for (i = 0; i < items.length; i++) {\n                        tag = items[i].tag || \"span\";\n                        className = items[i].className;\n\n                        style = dom.inlineStyle(body, tag, { className: className });\n                        style = style.replace(/\"/g, \"'\");\n\n                        items[i].style = style + \";display:inline-block\";\n                    }\n                }\n\n                dataSource.trigger(\"change\");\n            }\n        },\n\n        _appendFormattingMarksStyles: function() {\n            const that = this,\n                elementId = that.element.attr(\"id\");\n\n            let style, $head;\n\n            style = `<style id='${FORMATTING_MARKS_STYLE_ID + \"-\" + elementId}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >\n                #${elementId} p::after,\n                #${elementId} li::after,\n                #${elementId} h1::after,\n                #${elementId} h2::after,\n                #${elementId} h3::after,\n                #${elementId} h4::after,\n                #${elementId} h5::after,\n                #${elementId} h6::after {content: '\\\\00B6'; color: #6098f2;}\n                #${FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId} {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    z-index: 9999;\n                    pointer-events: none;\n                }\n                #${FORMATTING_MARKS_OVERLAY_ID + \"-\" + elementId} {\n                    width: 100%;\n                    height: 100%;\n                  }\n            </style>`;\n\n            $head = $(that.document.head);\n            $head.find(\"#\" + FORMATTING_MARKS_STYLE_ID + \"-\" + elementId).remove();\n            $head.append(style);\n        },\n\n        _appendFormattingMarksOverlay: function() {\n            const that = this,\n                elementId = that.element.attr(\"id\");\n\n            that._formattingMarksOverlayWrapper = $(`<div id='${FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId}'></div>`);\n            that._formattingMarksOverlay = $(`<svg id='${FORMATTING_MARKS_OVERLAY_ID + \"-\" + elementId}'></svg>`).appendTo(that._formattingMarksOverlayWrapper);\n            that._bodyTopBottomPaddings = parseFloat($(that.body).css(\"padding-top\")) + parseFloat($(that.body).css(\"padding-bottom\"));\n\n            if (that._isInlineEditor()) {\n                that._formattingMarksOverlayWrapper.insertAfter(that.element);\n            } else {\n                that._formattingMarksOverlayWrapper.appendTo($(that.document).find(\"html\"));\n            }\n        },\n\n        _destroyFormattingMarksOverlay: function() {\n            const that = this,\n                elementId = that.element.attr(\"id\");\n\n            $(that.document).find(\"#\" + FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId).remove();\n            $(that.document.head).find(\"#\" + FORMATTING_MARKS_STYLE_ID + \"-\" + elementId).remove();\n        },\n\n        _updateFormattingMarksOverlayHeight: function() {\n            const that = this;\n\n            if (that._isInlineEditor()) {\n                that._formattingMarksOverlayWrapper.height($(that.body).outerHeight());\n            } else {\n                that._formattingMarksOverlayWrapper.height(that.body.scrollHeight - that._bodyTopBottomPaddings);\n            }\n        },\n\n        _initInlineOverflowWrapper: function() {\n            const that = this,\n                inlineHeight = that.options.inlineHeight;\n\n            if (that._isInlineEditor() && inlineHeight > -1) {\n                that._inlineOverflowWrapper = that.element.wrap(`<div class='k-inline-editor-overflow-wrapper k-pos-relative k-overflow-auto'></div>`).parent();\n                that._inlineOverflowWrapper.height(inlineHeight);\n            }\n        },\n\n        _deregisterHandlers: function() {\n            var handlers = this._handlers;\n\n            for (var i = 0; i < handlers.length; i++) {\n                var h = handlers[i];\n                h.element.off(h.type, h.handler);\n            }\n\n            this._handlers = [];\n        },\n\n        _destroyUploadWidget: function() {\n            var editor = this;\n            if (editor._uploadWidget) {\n                editor._uploadWidget.destroy();\n                editor._uploadWidget = null;\n            }\n        },\n\n        _endTyping: function() {\n            var keyboard = this.keyboard;\n\n            try {\n                if (keyboard.isTypingInProgress()) {\n                    keyboard.endTyping(true);\n                    this.saveSelection();\n                }\n            } catch (e) { }\n        },\n\n        _focusBody: function() {\n            var body = this.body;\n            var iframe = this.wrapper && this.wrapper.find(\"iframe\")[0];\n            var documentElement = this.document.documentElement;\n            var activeElement = kendo._activeElement();\n            var scrollTop;\n\n\n            if (!iframe && body.scrollHeight > body.clientHeight) {\n                scrollTop = body.scrollTop;\n                body.focus();\n                body.scrollTop = scrollTop;\n\n            } else if (activeElement != body && activeElement != iframe) {\n                scrollTop = documentElement.scrollTop;\n                body.focus();\n                documentElement.scrollTop = scrollTop;\n            }\n        },\n\n        _focusOutside: function() {\n            // move focus outside the Editor, see https://github.com/telerik/kendo/issues/3673\n            if (kendo.support.browser.msie && this.textarea) {\n                var tempInput = $(\"<input />\")\n                    .css({\n                        position: \"fixed\",\n                        left: \"1px\",\n                        top: \"1px\",\n                        width: \"1px\",\n                        height: \"1px\",\n                        \"font-size\": \"0\",\n                        border: \"0\",\n                        opacity: \"0\"\n                })\n                .appendTo(document.body).trigger(\"focus\");\n                tempInput.trigger(\"blur\").remove();\n            }\n        },\n\n        _handleToolbarClick: function(e) {\n            var toolName = e.target.data(\"command\");\n\n            if (toolName && toolName !== \"createTable\") {\n                this.exec(toolName);\n            }\n        },\n\n        _immutablesContext: function(range) {\n            var editorNS = kendo.ui.editor;\n\n            if (this.options.immutables) {\n                if (range.collapsed) {\n                    return editorNS.Immutables.immutablesContext(range);\n                } else {\n                    return editorNS.RangeUtils.editableTextNodes(range).length === 0;\n                }\n            }\n        },\n\n        _initializeContentElement: function() {\n            var editor = this;\n            var doc;\n            var blurTrigger;\n            var mousedownTrigger;\n\n            if (editor.textarea) {\n                editor.window = editor._createContentElement(editor.options.stylesheets);\n                doc = editor.document = editor.window.contentDocument || editor.window.document;\n\n                // Ensure that body exists as various Firefox plugins can cause a delay of the body creation\n                // https://github.com/telerik/kendo-ui-core/issues/3515\n                if (!doc.body) {\n                    var body = doc.createElement(\"body\");\n                    body.setAttribute(\"contenteditable\", \"true\");\n                    body.setAttribute(\"autocorrect\", \"off\");\n                    doc.getElementsByTagName(\"html\")[0].appendChild(body);\n\n                    var interval = setInterval(function() {\n                        if ($(editor.document).find(\"body\").length > 1) {\n                            $(editor.document).find(\"body\").last().remove();\n                            window.clearInterval(interval);\n                        }\n                    },10);\n                }\n\n                editor.body = doc.body;\n\n                blurTrigger = editor.window;\n                mousedownTrigger = doc;\n\n                this._registerHandler(doc, \"mouseup\", this._mouseup.bind(this));\n            } else {\n                editor.window = window;\n                doc = editor.document = document;\n                editor.body = editor.element[0];\n\n                blurTrigger = editor.body;\n                mousedownTrigger = editor.body;\n\n                const dom = kendo.ui.editor.Dom;\n                const childNodes = editor.body.childNodes;\n\n                if (childNodes.length === 1 && childNodes[0].nodeType === dom.nodeTypes.TEXT_NODE) {\n                    dom.wrap(childNodes[0], doc.createElement(\"p\"));\n                }\n\n                setTimeout(() => {\n                    editor._decorateFormatting(editor.body);\n                });\n            }\n\n            this._registerHandler(blurTrigger, \"blur\", this._blur.bind(this));\n            editor._registerHandler(mousedownTrigger, \"down\", editor._mousedown.bind(editor));\n\n            try {\n                doc.execCommand(\"enableInlineTableEditing\", null, false);\n            } catch (e) { }\n\n            if (kendo.support.touch) {\n                this._registerHandler(doc, {\n                    \"keydown\": function() {\n                        // necessary in iOS when touch events are bound to the page\n                        if (kendo._activeElement() != doc.body) {\n                            editor.window.focus();\n                        }\n                    }\n                });\n            }\n\n            this._initializePlaceholder();\n\n            this._spellCorrect(editor);\n\n            this._registerHandler(editor.document, {\n                \"mouseover dragenter\": function(e) {\n                    var height = $(editor.body).height();\n                    var htmlHeight = $(editor.body.parentElement).height();\n\n                    if (htmlHeight > height && e.target.nodeName.toLowerCase() === \"html\") {\n                        editor._cachedHeight = \"\" + editor.body.style.height;\n                        editor.body.style.height = \"100%\";\n                    }\n                },\n                \"mouseout dragleave drop contextmenu\": function(e) {\n                    var restoreHeight = function() {\n                        if (editor._cachedHeight !== undefined$1 && e.target === editor.body) {\n                            editor.body.style.height = editor._cachedHeight;\n                            delete editor._cachedHeight;\n                        }\n                    };\n\n                    if (e.type === \"contextmenu\") {\n                        setTimeout(function() {\n                            restoreHeight();\n                        }, 10);\n                    } else {\n                        restoreHeight();\n                    }\n\n                }\n            });\n\n            this._registerHandler(editor.body, {\n                \"keydown\": function(e) {\n                    var range;\n\n                    if ((e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) && editor.body.getAttribute(\"contenteditable\") !== \"true\") {\n                        return false;\n                    }\n\n                    if (e.keyCode === keys.F10) {\n                        editor.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                        editor.toolbar.preventPopupHide = true;\n                        e.preventDefault();\n                        return;\n                    } else if (e.keyCode == keys.LEFT || e.keyCode == keys.RIGHT) {\n                        // skip bom nodes when navigating with arrows\n                        range = editor.getRange();\n                        var left = e.keyCode == keys.LEFT;\n                        var container = range[left ? \"startContainer\" : \"endContainer\"];\n                        var offset = range[left ? \"startOffset\" : \"endOffset\"];\n                        var direction = left ? -1 : 1;\n\n                        var next = offset + direction;\n                        var nextChar = left ? next : offset;\n\n                        if (container.nodeType == 3 && container.nodeValue[nextChar] == \"\\ufeff\") {\n                            range.setStart(container, next);\n                            range.collapse(true);\n                            editor.selectRange(range);\n                        }\n                    }\n\n                    var tools = editor.tools;\n                    var toolName = editor.keyboard.toolFromShortcut(tools, e);\n                    var toolOptions = toolName ? tools[toolName].options : {};\n\n                    if (toolName && !toolOptions.keyPressCommand) {\n                        e.preventDefault();\n\n                        if (!/^(undo|redo)$/.test(toolName)) {\n                            editor.keyboard.endTyping(true);\n                        }\n\n                        editor.trigger(\"keydown\", e);\n                        editor.exec(toolName);\n                        editor._runPostContentKeyCommands(e);\n\n                        return false;\n                    }\n\n                    editor.keyboard.clearTimeout();\n\n                    editor.keyboard.keydown(e);\n                },\n                \"keypress\": function(e) {\n                    setTimeout(function() {\n                        editor._runPostContentKeyCommands(e);\n                        editor._showElementResizeHandles();\n                    }, 0);\n                },\n                \"keyup\": function(e) {\n                    var selectionCodes = [\n                       keys.BACKSPACE,\n                       keys.TAB,\n                       keys.PAGEUP,\n                       keys.PAGEDOWN,\n                       keys.END,\n                       keys.HOME,\n                       keys.LEFT,\n                       keys.UP,\n                       keys.RIGHT,\n                       keys.DOWN,\n                       keys.INSERT,\n                       keys.DELETE\n                    ];\n\n                    if ($.inArray(e.keyCode, selectionCodes) > -1 || (e.keyCode == 65 && e.ctrlKey && !e.altKey && !e.shiftKey)) {\n                        window.clearTimeout(this._refreshInterval);\n                        this._refreshInterval = window.setTimeout(function() {\n                            editor._selectionChange();\n                        }, REFRESH_INTERVAL);\n                    }\n\n                    if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                        editor._handleSpaceAndNewLines();\n                    }\n\n                    editor.keyboard.keyup(e);\n                },\n                \"click\": function(e) {\n                    var dom = kendo.ui.editor.Dom, range;\n\n                    if (dom.name(e.target) === \"img\") {\n                        range = editor.createRange();\n                        range.selectNode(e.target);\n                        editor.selectRange(range);\n                    }\n                },\n                \"cut copy paste drop dragover\": function(e) {\n                    editor.clipboard[\"on\" + e.type](e);\n                    editor._handleSpaceAndNewLines();\n                },\n                \"focusin\": function() {\n                    if (editor.body.hasAttribute(\"contenteditable\")) {\n                        $(this).addClass(\"k-active\");\n                        // To be moved to the Editor\n                        editor._showWindow();\n                        editor._togglePlaceholder(false);\n                    }\n                },\n                \"focusout\": function() {\n                    setTimeout(function() {\n                        var active = kendo._activeElement();\n                        var body = editor.body;\n                        // All below to be moved to the Editor\n                        var toolbar = editor.toolbar;\n\n                        if (toolbar.options.popup) {\n                            var toolbarContainerElement = editor.windowInstance.element.get(0);\n                            if (toolbarContainerElement && !($.contains(toolbarContainerElement, active) || toolbarContainerElement == active)) {\n                                toolbar.preventPopupHide = false;\n                            }\n                        }\n\n                        if (active != body && !$.contains(body, active) && !editor._toolbarFocused() && !toolbar.preventPopupHide && !$(active).hasClass(\"k-context-menu\") && !$(active).hasClass(\"k-colorpalette\")) {\n                            $(body).removeClass(\"k-active\");\n                            editor._hideWindow();\n                        }\n\n                        editor._togglePlaceholder(!editor.value().trim());\n                    }, 10);\n                }\n            });\n\n            editor._initializeColumnResizing();\n            editor._initializeRowResizing();\n            editor._initializeElementResizing();\n        },\n\n        _initializeImmutables: function() {\n            var that = this,\n                editorNS = kendo.ui.editor;\n\n            if (that.options.immutables) {\n                that.immutables = new editorNS.Immutables(that);\n            }\n        },\n\n        _initializePlaceholder: function() {\n            var that = this,\n                placeholder = that.options.placeholder,\n                style, $head;\n\n            if (!that.textarea || !placeholder) {\n                return;\n            }\n\n            style = `<style id='${PLACEHOLDER_TAG_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >.` +\n                        PLACEHOLDER_CLASS + \":before { content: '\" + placeholder + \"'; }\" +\n                    \"</style>\";\n\n            $head = $(that.document.head);\n            $head.find(\"#\" + PLACEHOLDER_TAG_ID).remove();\n            $head.append(style);\n\n            that._togglePlaceholder(!that.value().trim());\n        },\n\n        _initToolbar: function(toolbarContainer) {\n            var that = this,\n                tools, defaults, toolbarOptions;\n\n            that.tools = [];\n            [tools, defaults] = that._processToolbarItems(that.options.tools);\n            that._setNativeTools();\n\n            toolbarOptions = {\n                tools: tools,\n                defaultTools: defaults,\n                parentMessages: that.options.messages,\n                resizable: that.options.resizable === true || Boolean(that.options.resizable && that.options.resizable.toolbar && that.options.resizable.toolbar?.mode !== \"none\"),\n                toggle: that._handleToolbarClick.bind(this),\n                click: that._handleToolbarClick.bind(this),\n                navigateOnTab: that.options.navigateOnTab,\n                evaluateTemplates: true,\n                overflow: $.isPlainObject(that.options.resizable?.toolbar) ? that.options.resizable.toolbar : undefined$1,\n            };\n\n            that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n            that._bindTools();\n            that.bind(\"select\", that._refreshTools.bind(that));\n\n            toolbarContainer.on(\"mousedown\" + NS, function(e) {\n                const target = $(e.target);\n                if (target.closest('[ref-toolbar-tool]').length) {\n                    if (!target.is(\"input\")) {\n                        e.preventDefault();\n                    }\n                } else {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            });\n\n            if (!that.textarea) {\n                toolbarContainer.width(toolbarContainer.width());\n                that._initToolbarWindow(toolbarContainer);\n            }\n        },\n\n        _initToolbarWindow: function(toolbarEl) {\n            var that = this;\n\n            this.windowInstance = toolbarEl\n                .wrap(\"<div class='editorToolbarWindow k-editor-window' />\")\n                .parent()\n                .prepend(\"<span class='k-editortoolbar-dragHandle'>\" + kendo.ui.icon(\"handle-drag\") + \"</span>\")\n                .kendoWindow({\n                    title: false,\n                    resizable: false,\n                    draggable: {\n                        dragHandle: \".k-editortoolbar-dragHandle\"\n                    },\n                    animation: {\n                        open: { effects: \"fade:in\" },\n                        close: { effects: \"fade:out\" }\n                    },\n                    minHeight: 42,\n                    visible: false,\n                    autoFocus: false,\n                    actions: [],\n                    dragend: function() {\n                        this._moved = true;\n                    }\n                })\n                .on(\"mousedown\", function(e) {\n                    if (!$(e.target).is(TOOLBAR_ALLOWED_CLOSE_SELECTORS)) {\n                        that.toolbar.preventPopupHide = true;\n                    }\n                })\n                .on(\"focusout\", function() {\n                    that.element.focusout();\n                })\n                .data(\"kendoWindow\");\n        },\n\n        _mousedown: function(e) {\n            var editor = this;\n            editor._selectionStarted = true;\n\n            if ($(editor.body).parents('.k-window').length) {\n                e.stopPropagation();\n            }\n\n            // handle middle-click and ctrl-click on links\n            if (browser.gecko) {\n                return;\n            }\n\n            var target = $(e.target).closest(\"a[href]\");\n\n            if ((e.which == 2 || (e.which == 1 && e.ctrlKey)) && target && target.is(\"a[href]\")) {\n                window.open(target.attr(\"href\"), \"_new\");\n            }\n\n            if (e.target.tagName && e.target.tagName.toLowerCase() === \"html\") {\n                setTimeout(function() {\n                    editor.body.focus();\n                }, 0);\n            }\n        },\n\n        _mouseup: function(e) {\n            var that = this;\n\n            if (kendo.support.mobileOS.ios && e && $(e.target).is(SELECT_OVERLAY_SELECTOR)) {\n                return;\n            }\n\n            if (that._selectionStarted) {\n                setTimeout(function() {\n                    that._selectionChange();\n                }, 1);\n            }\n        },\n\n        _populateValue: function(options, domElement) {\n            var that = this,\n                editorNS = kendo.ui.editor,\n                dom = editorNS.Dom,\n                value, comments;\n\n            if (options && options.value) {\n                value = options.value;\n            } else if (that.textarea) {\n                // indented HTML introduces problematic ranges in IE\n                value = domElement.value;\n\n                if (!value.replace(/\\s/g, '').length) {\n                    value = value.replace(/\\s/g, '');\n                }\n\n                // revert encoding of value when content is fetched from cache\n                if (that.options.encoded && domElement.defaultValue && domElement.defaultValue.trim().length) {\n                    value = domElement.defaultValue;\n                }\n\n                var deserializedRoot = editorNS.Serializer.htmlToDom(value, $(\"<div></div>\")[0], that.options.deserialization);\n                comments = dom.getAllComments(deserializedRoot);\n                value = EditorUtils.cacheComments(value, comments);\n                value = value.replace(/[\\r\\n\\v\\f\\t ]+/ig, \" \");\n                value = EditorUtils.retrieveComments(value, comments);\n            } else {\n                value = domElement.innerHTML;\n            }\n\n            that.value(value || '\\ufeff');\n        },\n\n        _resetGroups: function(current) {\n            var result = {};\n\n            Object.keys(current).map(key => {\n                result[key + \"_\"] = current[key];\n            });\n\n            return result;\n        },\n\n        _processToolbarItems: function(optionsTools) {\n            var flatDefaultTools = {},\n                processedObject = {},\n                tools = [],\n                currentGroups = $.extend(true, {}, toolGroups),\n                i, j, t, name, guidGroupName;\n\n            for (i = 0; i < optionsTools.length; i++) {\n                t = optionsTools[i];\n\n                if (Array.isArray(t)) {\n                    guidGroupName = kendo.guid();\n\n                    for (j = 0; j < t.length; j++) {\n                        [flatDefaultTools, name] = this._processToolOptions(t[j], flatDefaultTools);\n\n                        if (!name) {\n                            continue;\n                        }\n\n                        flatDefaultTools[name].gr = guidGroupName;\n                    }\n                } else {\n                    [flatDefaultTools, name] = this._processToolOptions(t, flatDefaultTools);\n\n                    if (!name) {\n                        continue;\n                    } else if (name === \"separator\") {\n                        currentGroups = this._resetGroups(currentGroups);\n                    }\n\n                    Object.keys(currentGroups).map(key => {\n                        var group = currentGroups[key];\n\n                        if (group.includes(name)) {\n                            flatDefaultTools[name].gr = key;\n                        }\n                    });\n                }\n            }\n\n            Object.values(flatDefaultTools).map((tool) => {\n                var group = tool.gr;\n\n                delete tool.gr;\n\n                if (group === undefined$1) {\n                    processedObject[tool.name] = tool;\n                } else {\n                    if (!processedObject[group]) {\n                        processedObject[group] = [];\n                    }\n\n                    processedObject[group].push(tool);\n                }\n            });\n\n            tools = Object.values(processedObject).map((g) => {\n                var result;\n\n                if (g.length) {\n                    result = g.map((to) => to.name);\n                } else {\n                    result = g.name;\n                }\n\n                if (result.length === 1) {\n                    result = result[0];\n                }\n\n                return result;\n            });\n\n            return [tools, flatDefaultTools];\n        },\n\n        _processDefaultTool: function(tool, defaultTools) {\n            var name = tool.name,\n                result = {},\n                options;\n\n            if ($.isPlainObject(tool)) {\n                if (name && defaultTools[name]) {\n                    // configured tool\n                    result = extend({}, defaultTools[name]);\n                    extend(result.options, tool);\n                } else {\n                    // custom tool\n                    options = extend({ icon: \"gear\", type: \"button\" }, tool);\n\n                    if (!options.name) {\n                        options.name = \"custom\";\n                    }\n\n                    options.cssClass = \"k-\" + options.name;\n\n                    result = {\n                        options: options\n                    };\n\n                    name = options.name;\n                }\n            } else if (defaultTools[tool]) {\n                name = tool;\n                result = defaultTools[name];\n            } else {\n                return null;\n            }\n\n            this.tools[name] = result;\n\n            return result;\n        },\n\n        _processToolOptions: function(t, flatDefaultTools) {\n            var that = this,\n                defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                tool, name, view, shortcuts, options, uiOptions, icon, toolOptions, originalOptions, palette;\n\n            tool = this._processDefaultTool(t, defaultTools);\n\n            if (!tool) {\n                return [flatDefaultTools, null];\n            }\n\n            options = tool.options;\n            name = options.name;\n            uiOptions = options.ui || {};\n            icon = EditorUtils.getToolCssClass(options.name, options.icon);\n\n            // We want to preserve any custom properties from the original tool object.\n            originalOptions = $.isPlainObject(t) ? $.extend({}, t) : {};\n            delete originalOptions.items;\n\n            toolOptions = $.extend({\n                name: options.name,\n                command: options.command,\n                template: options.template,\n                attributes: { class: options.cssClass },\n                type: \"button\",\n                icon: icon,\n                showText: \"overflow\",\n                showIcon: \"both\"\n            }, uiOptions, originalOptions);\n\n            if (options.tooltip) {\n                if (!toolOptions.attributes) {\n                    toolOptions.attributes = {};\n                }\n\n                toolOptions.attributes.title = options.tooltip;\n            }\n            if (options.exec) {\n                toolOptions.click = options.exec.bind(that);\n                delete toolOptions.exec;\n            }\n\n            if (toolOptions.component === \"ColorPicker\") {\n                if (options.palette !== undefined$1 || uiOptions.palette !== kendo.ui.editor.ColorTool.fn.options.palette) {\n                    palette = options.palette || kendo.ui.editor.ColorTool.fn.options.palette;\n                    view = options.palette !== undefined$1 && !options.palette ? \"gradient\" : \"palette\";\n                    toolOptions.componentOptions.palette = view === \"palette\" ? palette : undefined$1;\n                    toolOptions.componentOptions.views = [view];\n                    toolOptions.componentOptions.preview = view === \"gradient\";\n                    toolOptions.componentOptions.input = view === \"gradient\";\n                    toolOptions.componentOptions.buttons = view === \"gradient\";\n\n                    if (view === \"gradient\") {\n                        delete toolOptions.componentOptions.columns;\n                    }\n                }\n                if (view === \"palette\" && options.columns) {\n                    toolOptions.componentOptions.columns = options.columns;\n                }\n            }\n\n            if (toolOptions.component === \"DropDownList\" || toolOptions.component === \"ComboBox\") {\n                if (!toolOptions.componentOptions) {\n                    toolOptions.componentOptions = {};\n                }\n\n                if (!toolOptions.componentOptions.dataSource) {\n                    if (that.options[name] && Array.isArray(that.options[name])) {\n                        toolOptions.componentOptions.dataSource = that.options[name];\n                    } else {\n                        toolOptions.componentOptions.dataSource = options.items;\n                    }\n                }\n            }\n            if (toolOptions.template) {\n                delete toolOptions.type;\n            }\n\n            shortcuts = this._shortcutSequence(name);\n\n            if (shortcuts !== \"\") {\n                if (!toolOptions.attributes) {\n                    toolOptions.attributes = {};\n                }\n\n                toolOptions.attributes[\"aria-keyshortcuts\"] = shortcuts;\n            }\n\n            flatDefaultTools[name] = toolOptions;\n\n            return [flatDefaultTools, name];\n        },\n\n        _refreshTools: function() {\n            var that = this,\n                range = that.getRange(),\n                editorNS = kendo.ui.editor,\n                rangeUtils = editorNS.RangeUtils,\n                nodes = rangeUtils.textNodes(range),\n                immutables = that.options.immutables,\n                immutablesContext = that._immutablesContext(range),\n                defaultTools = that.tools;\n\n            nodes = editorNS.Dom.filterBy(nodes, editorNS.Dom.htmlIndentSpace, true);\n\n            if (!nodes.length) {\n                nodes = [range.startContainer];\n            }\n\n            that.toolbar.element.find(\"[data-command]\")\n                .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                .each(function() {\n                    var toolName = this.getAttribute(\"data-command\"),\n                        tool = defaultTools[toolName],\n                        ui;\n\n                    if (tool) {\n                        ui = $(this);\n\n                        if (tool.update) {\n                            tool.update(ui, nodes, that.undoRedoStack);\n                        }\n\n                        if (immutables) {\n                            that._updateImmutablesState(tool, ui, immutablesContext);\n                        }\n                    }\n                });\n        },\n\n        _registerHandler: function(element, type, handler) {\n            var editor = this;\n            var NS = \".kendoEditor\";\n            var eventNames;\n            var i;\n\n            element = $(element);\n\n            if (!this._handlers) {\n                this._handlers = [];\n            }\n\n            if (element.length) {\n                if ($.isPlainObject(type)) {\n                    for (var t in type) {\n                        if (type.hasOwnProperty(t)) {\n                            this._registerHandler(element, t, type[t]);\n                        }\n                    }\n                } else {\n                    //map the original event to handle interaction on mobile platforms\n                    eventNames = kendo.applyEventMap(type).split(\" \");\n\n                    for (i = 0; i < eventNames.length; i++) {\n                        editor._handlers.push({\n                            element: element,\n                            type: eventNames[i] + NS,\n                            handler: handler\n                        });\n\n                        element.on(eventNames[i] + NS, handler);\n                    }\n                }\n            }\n        },\n\n        _runPostContentKeyCommands: function(e) {\n            var range = this.getRange();\n            var tools = this.keyboard.toolsFromShortcut(this.tools, e);\n\n            for (var i = 0; i < tools.length; i++) {\n                var tool = tools[i];\n                var o = tool.options;\n                if (!o.keyPressCommand) {\n                    continue;\n                }\n\n                var cmd = new o.command({ range: range });\n                if (cmd.changesContent()) {\n                    this.keyboard.endTyping(true);\n                    this.exec(tool.name);\n                }\n            }\n\n            this._handleSpaceAndNewLines();\n        },\n\n        _handleSpaceAndNewLines: function() {\n            const that = this,\n                refreshDelay = that.options.formattingMarksRefreshDelay,\n                editorNS = kendo.ui.editor,\n                applyFormattingMarks = editorNS.applyFormattingMarks,\n                clearFormattingMarksOverlay = editorNS.clearFormattingMarksOverlay;\n\n            if (that._toggledFormattingMarks) {\n                if (that._formattingMarksOverlay.children().length) {\n                    clearFormattingMarksOverlay(that);\n                }\n\n                if (refreshDelay) {\n                    clearTimeout(that._formattingMarksTimeout);\n                    that._formattingMarksTimeout = setTimeout(() => applyFormattingMarks(that), refreshDelay);\n                } else {\n                    applyFormattingMarks(that);\n                }\n\n            }\n        },\n\n        _selectionChange: function() {\n            this._selectionStarted = false;\n            this.saveSelection();\n            this.trigger(\"select\", {});\n        },\n\n        _setOptionsTools: function(optionsTools) {\n            var that = this,\n                toolbar = that.toolbar,\n                toolbarContainer = toolbar.element,\n                tools, defaults, toolbarOptions;\n\n            toolbar.destroy();\n            toolbarContainer.empty();\n\n            that.tools = [];\n            [tools, defaults] = that._processToolbarItems(optionsTools);\n            that._setNativeTools();\n\n            toolbarOptions = {\n                tools: tools,\n                defaultTools: defaults,\n                parentMessages: that.options.messages,\n                resizable: that.options.resizable === true || Boolean(that.options.resizable && that.options.resizable.toolbar && that.options.resizable.toolbar?.mode !== \"none\"),\n                toggle: that._handleToolbarClick.bind(this),\n                click: that._handleToolbarClick.bind(this),\n                overflow: $.isPlainObject(that.options.resizable?.toolbar) ? that.options.resizable.toolbar : undefined$1,\n            };\n\n            that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n            that._bindTools();\n        },\n\n        _setNativeTools: function() {\n            var defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                i;\n\n            for (i = 0; i < NATIVE_TOOLS.length; i++) {\n                if (!this.tools[NATIVE_TOOLS[i]]) {\n                    this.tools[NATIVE_TOOLS[i]] = defaultTools[NATIVE_TOOLS[i]];\n                }\n            }\n        },\n\n        _setupHeight: function(type) {\n            var that = this;\n\n            if (type == \"textarea\") {\n                setTimeout(function() {\n                    var heightStyle = that.wrapper[0].style.height;\n                    var expectedHeight = parseInt(heightStyle, 10);\n                    var actualHeight = that.wrapper.height();\n                    if (heightStyle.indexOf(\"px\") > 0 && !isNaN(expectedHeight) && actualHeight > expectedHeight) {\n                        that.wrapper.height(expectedHeight - (actualHeight - expectedHeight));\n                    }\n                });\n            }\n        },\n\n        _setupKeyboard: function() {\n            var that = this,\n                editorNS = kendo.ui.editor;\n\n            that.keyboard = new editorNS.Keyboard([\n                new editorNS.BackspaceHandler(that),\n                new editorNS.TypingHandler(that),\n                new editorNS.SystemHandler(that),\n                new editorNS.SelectAllHandler(that)\n            ]);\n        },\n\n        _setupType: function(element) {\n            var domElement = element[0],\n                type = kendo.ui.editor.Dom.name(domElement),\n                id = domElement.id,\n                toolbarContainer;\n\n            if (!id) {\n                id = kendo.guid();\n                domElement.setAttribute(\"id\", id);\n            }\n\n            if (type == \"textarea\") {\n                this._wrapTextarea();\n\n                toolbarContainer = this.wrapper.find(\".k-editor-toolbar\");\n                toolbarContainer.attr(\"aria-controls\", id);\n            } else {\n                $(domElement).attr(\"contenteditable\", true).addClass(\"k-editor k-editor-inline\");\n                toolbarContainer = $('<div class=\"k-editor-toolbar\"/>').insertBefore(element);\n            }\n\n            return toolbarContainer;\n        },\n\n        _isInlineEditor: function() {\n            return this.element.hasClass(\"k-editor-inline\");\n        },\n\n        _shortcutSequence: function(name) {\n            var tool = kendo.ui.Editor.defaultTools[name],\n                res = \"\",\n                options;\n\n            if (!tool || !tool.options) {\n                return res;\n            }\n\n            options = tool.options;\n\n            if (options.ctrl) {\n                res += \"Ctrl+\";\n            }\n\n            if (options.shift) {\n                res += \"Shift+\";\n            }\n\n            if (options.alt) {\n                res += \"Alt+\";\n            }\n\n            if (options.key) {\n                res += options.key;\n            }\n\n            return res;\n        },\n\n        _spellCorrect: function(editor) {\n            var beforeCorrection;\n            var falseTrigger = false;\n\n            this._registerHandler(editor.body, {\n                \"contextmenu\": function() {\n                    editor.one(\"select\", function() {\n                        beforeCorrection = null;\n                    });\n\n                    editor._spellCorrectTimeout = setTimeout(function() {\n                        beforeCorrection = new kendo.ui.editor.RestorePoint(editor.getRange(), editor.body);\n                        falseTrigger = false;\n                    }, 10);\n                },\n                \"input\": function() {\n                    if (!beforeCorrection) {\n                        return;\n                    }\n\n                    if (kendo.support.browser.mozilla && !falseTrigger) {\n                        falseTrigger = true;\n                        return;\n                    }\n\n                    kendo.ui.editor._finishUpdate(editor, beforeCorrection);\n                }\n            });\n        },\n\n        _togglePlaceholder: function(show) {\n            var that = this,\n                body = that.body,\n                $body = $(body),\n                placeholder = that.options.placeholder;\n\n            if (!that.textarea || !placeholder) {\n                return;\n            }\n\n            $body.attr('aria-label', function() {\n                return show ? placeholder : \"\";\n            });\n\n            $body.toggleClass(PLACEHOLDER_CLASS, show);\n        },\n\n        _toolbarFocused: function() {\n            var active = kendo._activeElement(),\n                popup = this.windowInstance,\n                overflowPopup = this.overflowPopup;\n\n            return (popup && $(active).closest(popup.wrapper).length) ||\n                (overflowPopup && overflowPopup.visible());\n        },\n\n        _updateImmutablesState: function(tool, ui, immutablesContext) {\n            let toolbar = this.toolbar,\n                name = tool.name,\n                overflowAnchor = toolbar.overflowAnchor,\n                uiElement = ui.closest(\"[ref-toolbar-tool]\"),\n                trackImmutables = tool.options.trackImmutables,\n                toolInOverflowMenuIsHidden = true,\n                editorNS = kendo.ui.editor;\n\n            if (trackImmutables === undefined$1) {\n                trackImmutables = $.inArray(name, editorNS.Immutables.toolsToBeUpdated) > -1;\n            }\n\n            if (overflowAnchor && !overflowAnchor.hasClass(\"k-hidden\")) {\n                const overflowMenu = toolbar.overflowMenu,\n                    toolInOverflowMenu = overflowMenu?.element.find(`[data-command=\"${tool.options.name}\"]`);\n\n                toolInOverflowMenuIsHidden = toolInOverflowMenu?.hasClass(\"k-hidden\");\n            }\n\n            if (trackImmutables) {\n                if (immutablesContext) {\n                    toolbar.hide(uiElement);\n                } else if (toolInOverflowMenuIsHidden) {\n                    toolbar.show(uiElement);\n                }\n            }\n        },\n\n        _wrapTextarea: function() {\n            var that = this,\n                textarea = that.element,\n                w = textarea[0].style.width,\n                h = textarea[0].style.height,\n                template = EditorUtils.editorWrapperTemplate(),\n                editorWrap = $(template).insertBefore(textarea),\n                editArea = editorWrap.find(\".k-editable-area\");\n\n            editorWrap.css({\n                \"width\": w,\n                \"height\": h\n            });\n\n            textarea.attr(\"autocomplete\", \"off\")\n                .appendTo(editArea).addClass(\"k-content k-raw-content\").css(\"display\", \"none\");\n\n            that.textarea = textarea;\n            that.wrapper = editorWrap;\n        },\n\n        // Resizing methods\n        _resizable: function() {\n            let that = this;\n            let resizable = this.options.resizable;\n            let isResizable = $.isPlainObject(resizable) ? (resizable.content === undefined$1 || resizable.content === true) : resizable;\n            let resizableMin = $.isPlainObject(resizable.min) ? resizable.min : { minHeight: resizable.min };\n            let resizableMax = $.isPlainObject(resizable.max) ? resizable.max : { maxHeight: resizable.max };\n\n            if (isResizable && this.textarea) {\n                that.wrapper.addClass('k-editor-resizable');\n\n                if (resizableMin.minHeight) {\n                    that.wrapper.css(\"min-height\", resizableMin.minHeight);\n                }\n\n                if (resizableMax.maxHeight) {\n                    that.wrapper.css(\"max-height\", resizableMax.maxHeight);\n                }\n\n                if (resizableMin.minWidth) {\n                    that.wrapper.css(\"min-width\", resizableMin.minWidth);\n                }\n\n                if (resizableMax.maxWidth) {\n                    that.wrapper.css(\"max-width\", resizableMax.maxWidth);\n                }\n\n                that.resizeObserver = new ResizeObserver(() => {\n                    clearTimeout(that._resizeTimeOut);\n\n                    that._resizeTimeOut = setTimeout(function() {\n                        that.toolbar.resize();\n                        that._handleSpaceAndNewLines();\n                    }, 50);\n\n                });\n                that.resizeObserver.observe(that.wrapper[0]);\n            }\n        },\n\n        _destroyResizings: function() {\n            var editor = this;\n\n            editor._destroyElementResizing();\n            kendo.ui.editor.ElementResizingFactory.current.dispose(editor);\n            editor._destroyRowResizing();\n            kendo.ui.editor.RowResizing.dispose(editor);\n            editor._destroyColumnResizing();\n            kendo.ui.editor.ColumnResizing.dispose(editor);\n        },\n\n        _initializeElementResizing: function() {\n            var editor = this;\n\n            kendo.ui.editor.ElementResizingFactory.current.create(editor);\n\n            editor._showElementResizeHandlesProxy = editor._showElementResizeHandles.bind(editor);\n            editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n        },\n\n        _destroyElementResizing: function() {\n            var editor = this;\n            var elementResizing = editor.elementResizing;\n\n            if (elementResizing) {\n                elementResizing.destroy();\n                editor.elementResizing = null;\n            }\n\n            if (editor._showElementResizeHandlesProxy) {\n                editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n            }\n        },\n\n        _showElementResizeHandles: function() {\n            var editor = this;\n            var elementResizing = editor.elementResizing;\n\n            if (elementResizing && elementResizing.element && elementResizing.element.parentNode) {\n                elementResizing.showResizeHandles();\n            } else if (elementResizing && (!elementResizing.element || !elementResizing.element.parentNode)) {\n                editor._destroyElementResizing();\n            }\n        },\n\n        _initializeColumnResizing: function() {\n            kendo.ui.editor.ColumnResizing.create(this);\n        },\n\n        _destroyColumnResizing: function() {\n            var editor = this;\n\n            if (editor.columnResizing) {\n                editor.columnResizing.destroy();\n                editor.columnResizing = null;\n            }\n        },\n\n        _initializeRowResizing: function() {\n            kendo.ui.editor.RowResizing.create(this);\n        },\n\n        _destroyRowResizing: function() {\n            var editor = this;\n\n            if (editor.rowResizing) {\n                editor.rowResizing.destroy();\n                editor.rowResizing = null;\n            }\n        },\n\n        // ToolBar Window methods\n        _getWindowWidth: function() {\n            var that = this,\n                wrapper = that.windowInstance.wrapper,\n                editorElement = that.element;\n\n            return outerWidth(editorElement) - parseInt(wrapper.css(\"border-left-width\"), 10) - parseInt(wrapper.css(\"border-right-width\"), 10);\n        },\n\n        _hideWindow: function() {\n            if (this.windowInstance) {\n                this.windowInstance.close();\n            }\n        },\n\n        _overlapsWindow: function(box) {\n            var toolbarWrapper = this.windowInstance.wrapper,\n                toolbarWrapperOffset = toolbarWrapper.offset(),\n                toolbarWrapperLeft = toolbarWrapperOffset.left,\n                toolbarWrapperTop = toolbarWrapperOffset.top,\n                boxOffset = box.offset(),\n                boxOffsetLeft = boxOffset.left,\n                boxOffsetTop = boxOffset.top;\n\n            return !(boxOffsetLeft + box.width() < toolbarWrapperLeft ||\n                    boxOffsetLeft > toolbarWrapperLeft + toolbarWrapper.width() ||\n                    boxOffsetTop + box.height() < toolbarWrapperTop ||\n                    boxOffsetTop > toolbarWrapperTop + toolbarWrapper.height());\n        },\n\n        _showWindow: function() {\n            var that = this,\n                windowInstance = that.windowInstance,\n                wrapper, editorElement, editorOffset,\n                browser = kendo.support.browser;\n\n            if (windowInstance) {\n                wrapper = windowInstance.wrapper;\n                editorElement = that.element;\n\n                if (!wrapper.is(\":visible\") || !that.windowInstance.options.visible) {\n\n                    if (!wrapper[0].style.width) {\n                        wrapper.width(this._getWindowWidth());\n                    }\n\n                    // track content position when other parts of page change\n                    if (!windowInstance._moved) {\n                        editorOffset = editorElement.offset();\n                        wrapper.css({\n                            top: Math.max(0, parseInt(editorOffset.top, 10) - outerHeight(wrapper) - parseInt(that.windowInstance.element.css(\"padding-bottom\"), 10)),\n                            left: Math.max(0, parseInt(editorOffset.left, 10))\n                        });\n                    }\n\n                    if ((browser.msie || browser.edge) && that._overlapsWindow(editorElement)) {\n                        setTimeout(function() {\n                            windowInstance.open();\n                        }, 0);\n                    } else {\n                        windowInstance.open();\n                    }\n                }\n            }\n        }\n    });\n\n    Editor.defaultTools = {};\n\n    kendo.ui.plugin(Editor);\n\n    var Tool = Class.extend({\n        init: function(options) {\n            this.options = options;\n        },\n\n        command: function(commandArguments) {\n            return new this.options.command(commandArguments);\n        },\n\n        update: $.noop\n    });\n\n    Tool.exec = function(editor, name, value) {\n        editor.exec(name, { value: value });\n    };\n\n    var UndoTool = Tool.extend({\n        command: $.noop,\n        update: function(ui, nodes, undoRedoStack) {\n            var that = this,\n                name = that.options.name,\n                toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n            switch (name) {\n                case \"undo\":\n                    toolbar.enable(ui, undoRedoStack.canUndo());\n                    break;\n                case \"redo\":\n                    toolbar.enable(ui, undoRedoStack.canRedo());\n                    break;\n                default:\n                    break;\n            }\n\n            ui.removeAttr(\"disabled\");\n        }\n    });\n\n    EditorUtils.registerTool(\"separator\", new Tool({ ui: { type: \"separator\" } }));\n    EditorUtils.registerTool(\"undo\", new UndoTool({ key: \"Z\", ctrl: true }));\n    EditorUtils.registerTool(\"redo\", new UndoTool({ key: \"Y\", ctrl: true }));\n\n    // Exports ================================================================\n\n    var emptyElementContent = '\\ufeff';\n    var emptyTableCellContent = emptyElementContent;\n\n    if (browser.msie || browser.edge) {\n        emptyTableCellContent = emptyElementContent = \"&nbsp;\";\n    }\n\n    extend(kendo.ui, {\n        editor: {\n            EditorUtils: EditorUtils,\n            Tool: Tool,\n            emptyElementContent: emptyElementContent,\n            emptyTableCellContent: emptyTableCellContent\n        }\n    });\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(Editor.prototype);\n        Editor.prototype._drawPDF = function() {\n            return kendo.drawing.drawDOM(this.body, this.options.pdf);\n        };\n        Editor.prototype.saveAsPDF = function() {\n            var progress = new $.Deferred();\n            var promise = progress.promise();\n            var args = { promise: promise };\n\n            if (this.trigger(\"pdfExport\", args)) {\n                return;\n            }\n\n            var options = this.options.pdf;\n\n            this._drawPDF(progress)\n            .then(function(root) {\n                return kendo.drawing.exportPDF(root, options);\n            })\n            .done(function(dataURI) {\n                kendo.saveAs({\n                    dataURI: dataURI,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL,\n                    proxyTarget: options.proxyTarget,\n                    forceProxy: options.forceProxy\n                });\n                progress.resolve();\n            })\n            .fail(function(err) {\n                progress.reject(err);\n            });\n\n            return promise;\n        };\n    }\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    map = $.map,\n    extend = $.extend,\n    browser = kendo.support.browser,\n    STYLE = \"style\",\n    FLOAT = \"float\",\n    CSSFLOAT = \"cssFloat\",\n    STYLEFLOAT = \"styleFloat\",\n    CLASS = \"class\",\n    KMARKER = \"k-marker\";\n\nfunction makeMap(items) {\n    var obj = {},\n        i, len;\n\n    for (i = 0, len = items.length; i < len; i++) {\n        obj[items[i]] = true;\n    }\n    return obj;\n}\n\nvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\".split(\",\")),\n    nonListBlockElements = \"p,div,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,map,menu,noframes,noscript,object,pre,script,table,tbody,td,tfoot,th,thead,tr,header,article,nav,footer,section,aside,main,figure,figcaption\".split(\",\"),\n    blockElements = nonListBlockElements.concat([\"ul\",\"ol\",\"li\"]),\n    block = makeMap(blockElements),\n    selfClosing = makeMap(\"area,base,br,col,command,embed,hr,img,input,keygen,link,menuitem,meta,param,source,track,wbr\".split(\",\")),\n    inlineElements = \"span,em,a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,strike,strong,sub,sup,textarea,tt,u,var,data,time,mark,ruby\".split(\",\"),\n    inline = makeMap(inlineElements),\n    fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\".split(\",\")),\n    nonEmptyNonTextContentElements = [\"hgroup\",\"ol\",\"ul\",\"dl\",\"object\",\"video\",\"audio\",\"table\",\"colgroup\",\"tbody\",\"thead\",\"tfoot\",\"tr\",\"select\",\"optgroup\"];\n\nvar normalize = function(node) {\n    if (node.nodeType == 1) {\n        node.normalize();\n    }\n};\n\nif (browser.msie && browser.version >= 8) {\n    normalize = function(parent) {\n        if (parent.nodeType == 1 && parent.firstChild) {\n            var prev = parent.firstChild,\n                node = prev;\n\n            normalize(node);\n\n            while (true) {\n                node = node.nextSibling;\n\n                if (!node) {\n                    break;\n                }\n\n                normalize(node);\n\n                if (node.nodeType == 3 && prev.nodeType == 3) {\n                    node.nodeValue = prev.nodeValue + node.nodeValue;\n                    Dom.remove(prev);\n                }\n\n                prev = node;\n            }\n        }\n    };\n}\n\nvar whitespace = /^\\s+$/,\n    emptyspace = /^[\\n\\r\\t]+$/,\n    rgb = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i,\n    bom = /\\ufeff/g,\n    whitespaceOrBom = /^(\\s+|\\ufeff)$/,\n    persistedScrollTop,\n    cssAttributes =\n           (\"color,padding-left,padding-right,padding-top,padding-bottom,\" +\n            \"background-color,background-attachment,background-image,background-position,background-repeat,\" +\n            \"border-top-style,border-top-width,border-top-color,\" +\n            \"border-bottom-style,border-bottom-width,border-bottom-color,\" +\n            \"border-left-style,border-left-width,border-left-color,\" +\n            \"border-right-style,border-right-width,border-right-color,\" +\n            \"font-family,font-size,font-style,font-variant,font-weight,line-height\"\n           ).split(\",\"),\n    htmlRe = /[<>&]/g,\n    entityRe = /[\\u00A0-\\u2666<>&]/g,\n    entityTable = {\n            34: 'quot', 38: 'amp', 39: 'apos', 60: 'lt', 62: 'gt',\n            160: 'nbsp', 161: 'iexcl', 162: 'cent', 163: 'pound', 164: 'curren',\n            165: 'yen', 166: 'brvbar', 167: 'sect', 168: 'uml', 169: 'copy',\n            170: 'ordf', 171: 'laquo', 172: 'not', 173: 'shy', 174: 'reg',\n            175: 'macr', 176: 'deg', 177: 'plusmn', 178: 'sup2', 179: 'sup3',\n            180: 'acute', 181: 'micro', 182: 'para', 183: 'middot', 184: 'cedil',\n            185: 'sup1', 186: 'ordm', 187: 'raquo', 188: 'frac14', 189: 'frac12',\n            190: 'frac34', 191: 'iquest', 192: 'Agrave', 193: 'Aacute', 194: 'Acirc',\n            195: 'Atilde', 196: 'Auml', 197: 'Aring', 198: 'AElig', 199: 'Ccedil',\n            200: 'Egrave', 201: 'Eacute', 202: 'Ecirc', 203: 'Euml', 204: 'Igrave',\n            205: 'Iacute', 206: 'Icirc', 207: 'Iuml', 208: 'ETH', 209: 'Ntilde',\n            210: 'Ograve', 211: 'Oacute', 212: 'Ocirc', 213: 'Otilde', 214: 'Ouml',\n            215: 'times', 216: 'Oslash', 217: 'Ugrave', 218: 'Uacute', 219: 'Ucirc',\n            220: 'Uuml', 221: 'Yacute', 222: 'THORN', 223: 'szlig', 224: 'agrave',\n            225: 'aacute', 226: 'acirc', 227: 'atilde', 228: 'auml', 229: 'aring',\n            230: 'aelig', 231: 'ccedil', 232: 'egrave', 233: 'eacute', 234: 'ecirc',\n            235: 'euml', 236: 'igrave', 237: 'iacute', 238: 'icirc', 239: 'iuml',\n            240: 'eth', 241: 'ntilde', 242: 'ograve', 243: 'oacute', 244: 'ocirc',\n            245: 'otilde', 246: 'ouml', 247: 'divide', 248: 'oslash', 249: 'ugrave',\n            250: 'uacute', 251: 'ucirc', 252: 'uuml', 253: 'yacute', 254: 'thorn',\n            255: 'yuml', 402: 'fnof', 913: 'Alpha', 914: 'Beta', 915: 'Gamma',\n            916: 'Delta', 917: 'Epsilon', 918: 'Zeta', 919: 'Eta', 920: 'Theta',\n            921: 'Iota', 922: 'Kappa', 923: 'Lambda', 924: 'Mu', 925: 'Nu',\n            926: 'Xi', 927: 'Omicron', 928: 'Pi', 929: 'Rho', 931: 'Sigma',\n            932: 'Tau', 933: 'Upsilon', 934: 'Phi', 935: 'Chi', 936: 'Psi',\n            937: 'Omega', 945: 'alpha', 946: 'beta', 947: 'gamma', 948: 'delta',\n            949: 'epsilon', 950: 'zeta', 951: 'eta', 952: 'theta', 953: 'iota',\n            954: 'kappa', 955: 'lambda', 956: 'mu', 957: 'nu', 958: 'xi',\n            959: 'omicron', 960: 'pi', 961: 'rho', 962: 'sigmaf', 963: 'sigma',\n            964: 'tau', 965: 'upsilon', 966: 'phi', 967: 'chi', 968: 'psi',\n            969: 'omega', 977: 'thetasym', 978: 'upsih', 982: 'piv', 8226: 'bull',\n            8230: 'hellip', 8242: 'prime', 8243: 'Prime', 8254: 'oline', 8260: 'frasl',\n            8472: 'weierp', 8465: 'image', 8476: 'real', 8482: 'trade', 8501: 'alefsym',\n            8592: 'larr', 8593: 'uarr', 8594: 'rarr', 8595: 'darr', 8596: 'harr',\n            8629: 'crarr', 8656: 'lArr', 8657: 'uArr', 8658: 'rArr', 8659: 'dArr',\n            8660: 'hArr', 8704: 'forall', 8706: 'part', 8707: 'exist', 8709: 'empty',\n            8711: 'nabla', 8712: 'isin', 8713: 'notin', 8715: 'ni', 8719: 'prod',\n            8721: 'sum', 8722: 'minus', 8727: 'lowast', 8730: 'radic', 8733: 'prop',\n            8734: 'infin', 8736: 'ang', 8743: 'and', 8744: 'or', 8745: 'cap',\n            8746: 'cup', 8747: 'int', 8756: 'there4', 8764: 'sim', 8773: 'cong',\n            8776: 'asymp', 8800: 'ne', 8801: 'equiv', 8804: 'le', 8805: 'ge',\n            8834: 'sub', 8835: 'sup', 8836: 'nsub', 8838: 'sube', 8839: 'supe',\n            8853: 'oplus', 8855: 'otimes', 8869: 'perp', 8901: 'sdot', 8968: 'lceil',\n            8969: 'rceil', 8970: 'lfloor', 8971: 'rfloor', 9001: 'lang', 9002: 'rang',\n            9674: 'loz', 9824: 'spades', 9827: 'clubs', 9829: 'hearts', 9830: 'diams',\n            338: 'OElig', 339: 'oelig', 352: 'Scaron', 353: 'scaron', 376: 'Yuml',\n            710: 'circ', 732: 'tilde', 8194: 'ensp', 8195: 'emsp', 8201: 'thinsp',\n            8204: 'zwnj', 8205: 'zwj', 8206: 'lrm', 8207: 'rlm', 8211: 'ndash',\n            8212: 'mdash', 8216: 'lsquo', 8217: 'rsquo', 8218: 'sbquo', 8220: 'ldquo',\n            8221: 'rdquo', 8222: 'bdquo', 8224: 'dagger', 8225: 'Dagger', 8240: 'permil',\n            8249: 'lsaquo', 8250: 'rsaquo', 8364: 'euro'\n        };\n\nvar Dom = {\n    block: block,\n    inline: inline,\n\n    findNodeIndex: function(node, skipText) {\n        var i = 0;\n\n        if (!node) {\n            return -1;\n        }\n\n        while (true) {\n            node = node.previousSibling;\n\n            if (!node) {\n                break;\n            }\n\n            if (!(skipText && node.nodeType == 3)) {\n                i++;\n            }\n        }\n\n        return i;\n    },\n\n    isDataNode: function(node) {\n        return node && node.nodeValue !== null && node.data !== null;\n    },\n\n    isAncestorOf: function(parent, node) {\n        try {\n            return !Dom.isDataNode(parent) && ($.contains(parent, Dom.isDataNode(node) ? node.parentNode : node) || node.parentNode == parent);\n        } catch (e) {\n            return false;\n        }\n    },\n\n    isAncestorOrSelf: function(root, node) {\n        return Dom.isAncestorOf(root, node) || root == node;\n    },\n\n    findClosestAncestor: function(root, node) {\n        if (Dom.isAncestorOf(root, node)) {\n            while (node && node.parentNode != root) {\n                node = node.parentNode;\n            }\n        }\n\n        return node;\n    },\n\n    getAllComments: function(rootElem) {\n        var comments = [];\n        // Fourth argument, which is actually obsolete according to the DOM4 standard, is required in IE 11\n        var iterator = document.createNodeIterator(rootElem,\n            NodeFilter.SHOW_COMMENT,\n            function() {\n                return NodeFilter.FILTER_ACCEPT;\n            }, false);\n\n        var curNode = iterator.nextNode();\n        while (curNode) {\n            comments.push(curNode.nodeValue);\n            curNode = iterator.nextNode();\n        }\n        return comments;\n    },\n\n    getNodeLength: function(node) {\n        return Dom.isDataNode(node) ? node.length : node.childNodes.length;\n    },\n\n    splitDataNode: function(node, offset) {\n        var newNode = node.cloneNode(false);\n        var denormalizedText = \"\";\n        var iterator = node.nextSibling;\n        var temp;\n\n        while (iterator && iterator.nodeType == 3 && iterator.nodeValue) {\n            denormalizedText += iterator.nodeValue;\n            temp = iterator;\n            iterator = iterator.nextSibling;\n            Dom.remove(temp);\n        }\n\n        node.deleteData(offset, node.length);\n        newNode.deleteData(0, offset);\n        newNode.nodeValue += denormalizedText;\n        Dom.insertAfter(newNode, node);\n    },\n\n    attrEquals: function(node, attributes) {\n        for (var key in attributes) {\n            var value = node[key];\n\n            if (key == FLOAT) {\n                value = node[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT];\n            }\n\n            if (typeof value == \"object\") {\n                if (!Dom.attrEquals(value, attributes[key])) {\n                    return false;\n                }\n            } else if (value != attributes[key]) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    blockParentOrBody: function(node) {\n        return Dom.parentOfType(node, blockElements) || node.ownerDocument.body;\n    },\n\n    blockParents: function(nodes) {\n        var blocks = [],\n            i, len;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            var block = Dom.parentOfType(nodes[i], Dom.blockElements);\n            if (block && $.inArray(block, blocks) < 0) {\n                blocks.push(block);\n            }\n        }\n\n        return blocks;\n    },\n\n    windowFromDocument: function(document) {\n        return document.defaultView || document.parentWindow;\n    },\n\n    normalize: normalize,\n    blockElements: blockElements,\n    nonListBlockElements: nonListBlockElements,\n    inlineElements: inlineElements,\n    empty: empty,\n    fillAttrs: fillAttrs,\n    nodeTypes: {\n        ELEMENT_NODE: 1,\n        ATTRIBUTE_NODE: 2,\n        TEXT_NODE: 3,\n        CDATA_SECTION_NODE: 4,\n        ENTITY_REFERENCE_NODE: 5,\n        ENTITY_NODE: 6,\n        PROCESSING_INSTRUCTION_NODE: 7,\n        COMMENT_NODE: 8,\n        DOCUMENT_NODE: 9,\n        DOCUMENT_TYPE_NODE: 10,\n        DOCUMENT_FRAGMENT_NODE: 11,\n        NOTATION_NODE: 12\n    },\n\n    toHex: function(color) {\n        var matches = rgb.exec(color);\n\n        if (!matches) {\n            return color;\n        }\n\n        return \"#\" + map(matches.slice(1), function(x) {\n            x = parseInt(x, 10).toString(16);\n            return x.length > 1 ? x : \"0\" + x;\n        }).join(\"\");\n    },\n\n    encode: function(value, options) {\n        var encodableChars = (!options || options.entities) ? entityRe : htmlRe;\n        return value.replace(encodableChars, function(c) {\n            var charCode = c.charCodeAt(0);\n            var entity = entityTable[charCode];\n            return entity ? '&' + entity + ';' : c;\n        });\n    },\n    isBom: function(node) {\n        return node && node.nodeType === 3 && /^[\\ufeff]+$/.test(node.nodeValue);\n    },\n    stripBom: function(text) {\n        return (text || \"\").replace(bom, \"\");\n    },\n\n    stripBomNode: function(node) {\n        if (Dom.isBom(node)) {\n            node.parentNode.removeChild(node);\n        }\n    },\n\n    insignificant: function(node) {\n        var attr = node.attributes;\n\n        return node.className == \"k-marker\" || (Dom.is(node, 'br') && (node.className == \"k-br\" || attr._moz_dirty || attr._moz_editor_bogus_node)) || (Dom.is(node, 'span') && (node.className == \"k-br\"));\n    },\n    tableCell: function(node) {\n        return Dom.is(node, \"td\") || Dom.is(node, \"th\");\n    },\n    significantNodes: function(nodes) {\n        return $.grep(nodes, function(child) {\n            var name = Dom.name(child);\n\n            if (name == 'br' || Dom.insignificant(child) || Dom.emptyTextNode(child) || (child.nodeType == 1 && !empty[name] && Dom.emptyNode(child))) {\n                return false;\n            }\n            return true;\n        });\n    },\n\n    emptyTextNode: function(node) {\n        return node && node.nodeType == 3 && whitespaceOrBom.test(node.nodeValue);\n    },\n\n    emptyNode: function(node) {\n        return node.nodeType == 1 && !Dom.significantNodes(node.childNodes).length;\n    },\n\n    name: function(node) {\n        return node.nodeName.toLowerCase();\n    },\n\n    significantChildNodes: function(node) {\n        return $.grep(node.childNodes, function(child) {\n            return child.nodeType != 3 || !Dom.isWhitespace(child);\n        });\n    },\n\n    getTextNodes: function(body, nodes) {\n        const childNodes = body.childNodes;\n        nodes = nodes || [];\n\n        for (const node of childNodes) {\n            if (node.nodeType === this.nodeTypes.TEXT_NODE &&\n                (blockElements.includes(Dom.name(node.parentNode)) ||\n                inlineElements.includes(Dom.name(node.parentNode)) ||\n                node.parentNode === body)) {\n                nodes.push(node);\n            } else if (node.nodeType === this.nodeTypes.ELEMENT_NODE) {\n                this.getTextNodes(node, nodes);\n            }\n        }\n\n        return nodes;\n    },\n\n    lastTextNode: function(node) {\n        var result = null;\n\n        if (node.nodeType == 3) {\n            return node;\n        }\n\n        for (var child = node.lastChild; child; child = child.previousSibling) {\n            result = Dom.lastTextNode(child);\n\n            if (result) {\n                return result;\n            }\n        }\n\n        return result;\n    },\n\n    is: function(node, nodeName) {\n        return node && Dom.name(node) == nodeName;\n    },\n\n    isMarker: function(node) {\n        return node.className == KMARKER;\n    },\n\n    isWhitespace: function(node) {\n        return whitespace.test(node.nodeValue);\n    },\n\n    allowsTextContent: function(node) {\n        var result = true;\n\n        nonEmptyNonTextContentElements.every(function(name) {\n            if (Dom.is(node, name)) {\n                result = false;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    },\n\n    allWhitespaceContent: function(node) {\n        var child = node.firstChild;\n        while (child && Dom.isWhitespace(child)) {\n            child = child.nextSibling;\n        }\n\n        return !child;\n    },\n\n    isEmptyspace: function(node) {\n        return emptyspace.test(node.nodeValue);\n    },\n\n    htmlIndentSpace: function(node) {\n        if (!(Dom.isDataNode(node) && Dom.isWhitespace(node))) {\n            return false;\n        }\n\n        if (emptyspace.test(node.nodeValue)) {\n            return true;\n        }\n\n        var sibling = function(el, direction) {\n            while (el[direction]) {\n                el = el[direction];\n                if (Dom.significantNodes([el]).length > 0) {\n                    return el;\n                }\n            }\n        };\n\n        var parent = node.parentNode;\n        var prev = sibling(node, \"previousSibling\");\n        var next = sibling(node, \"nextSibling\");\n\n        if (bom.test(node.nodeValue)) {\n            return !!(prev || next);\n        }\n\n        if ($(parent).is(\"tr,tbody,thead,tfoot,table,ol,ul\")) {\n            return true;\n        }\n\n        if (Dom.isBlock(parent) || Dom.is(parent, \"body\")) {\n            var isPrevBlock = prev && Dom.isBlock(prev);\n            var isNextBlock = next && Dom.isBlock(next);\n            if ((!next && isPrevBlock) || (!prev && isNextBlock) || (isPrevBlock && isNextBlock)) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n\n    isBlock: function(node) {\n        return block[Dom.name(node)];\n    },\n\n    isSelfClosing: function(node) {\n        return selfClosing[Dom.name(node)];\n    },\n\n    isEmpty: function(node) {\n        return empty[Dom.name(node)];\n    },\n\n    isInline: function(node) {\n        return inline[Dom.name(node)];\n    },\n\n    isImg: function(node) {\n        return Dom.name(node) == \"img\";\n    },\n\n    isBr: function(node) {\n        return Dom.name(node) == \"br\";\n    },\n\n    list: function(node) {\n        var name = node ? Dom.name(node) : \"\";\n        return name == \"ul\" || name == \"ol\" || name == \"dl\";\n    },\n\n    scrollContainer: function(doc) {\n        var wnd = Dom.windowFromDocument(doc),\n            scrollContainer = (wnd.contentWindow || wnd).document || wnd.ownerDocument || wnd;\n\n        if (scrollContainer.compatMode == 'BackCompat') {\n            scrollContainer = scrollContainer.body;\n        } else {\n            scrollContainer = scrollContainer.scrollingElement || scrollContainer.documentElement;\n        }\n\n        return scrollContainer;\n    },\n\n    scrollTo: function(node, toStart) {\n        var doc = node.ownerDocument;\n        var wnd = Dom.windowFromDocument(doc);\n        var windowHeight = wnd.innerHeight;\n        var scrollContainer = Dom.scrollContainer(doc);\n        var element, elementTop, elementHeight, marker;\n\n        if (Dom.isDataNode(node)) {\n            if (toStart) {\n                marker = Dom.create(doc, \"span\", { \"innerHTML\": \"&#xfeff;\" });\n                Dom.insertBefore(marker, node);\n                element = $(marker);\n            } else {\n                element = $(node.parentNode);\n            }\n        } else {\n            element = $(node);\n        }\n\n        elementTop = element.offset().top;\n        elementHeight = element[0].offsetHeight;\n\n        if (toStart || !elementHeight) {\n            elementHeight = parseInt(element.css(\"line-height\"), 10) ||\n                            Math.ceil(1.2 * parseInt(element.css(\"font-size\"), 10)) ||\n                            15;\n        }\n\n        if (marker) {\n            Dom.remove(marker);\n        }\n\n        if (elementHeight + elementTop > scrollContainer.scrollTop + windowHeight) {\n            scrollContainer.scrollTop = elementHeight + elementTop - windowHeight;\n        }\n    },\n\n    persistScrollTop: function(doc) {\n        persistedScrollTop = Dom.scrollContainer(doc).scrollTop;\n    },\n\n    offset: function(target, offsetParent) {\n        var result = { top: target.offsetTop, left: target.offsetLeft };\n        var parent = target.offsetParent;\n\n        while (parent && (!offsetParent || Dom.isAncestorOf(offsetParent, parent))) {\n            result.top += parent.offsetTop;\n            result.left += parent.offsetLeft;\n            parent = parent.offsetParent;\n        }\n\n        return result;\n    },\n\n    restoreScrollTop: function(doc) {\n        if (typeof persistedScrollTop == \"number\") {\n            Dom.scrollContainer(doc).scrollTop = persistedScrollTop;\n            persistedScrollTop = undefined;\n        }\n    },\n\n    insertAt: function(parent, newElement, position) {\n        parent.insertBefore(newElement, parent.childNodes[position] || null);\n    },\n\n    insertBefore: function(newElement, referenceElement) {\n        if (referenceElement.parentNode) {\n            return referenceElement.parentNode.insertBefore(newElement, referenceElement);\n        } else {\n            return referenceElement;\n        }\n    },\n\n    insertAfter: function(newElement, referenceElement) {\n        return referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);\n    },\n\n    remove: function(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    },\n\n    removeChildren: function(node) {\n        while (node.firstChild) {\n            node.removeChild(node.firstChild);\n        }\n    },\n\n    removeTextSiblings: function(node) {\n        var parentNode = node.parentNode;\n\n        while (node.nextSibling && node.nextSibling.nodeType == 3) {\n            parentNode.removeChild(node.nextSibling);\n        }\n\n        while (node.previousSibling && node.previousSibling.nodeType == 3) {\n            parentNode.removeChild(node.previousSibling);\n        }\n    },\n\n    trim: function(parent) {\n        for (var i = parent.childNodes.length - 1; i >= 0; i--) {\n            var node = parent.childNodes[i];\n            if (Dom.isDataNode(node)) {\n                if (!Dom.stripBom(node.nodeValue).length) {\n                    Dom.remove(node);\n                }\n            } else if (node.className != KMARKER) {\n                Dom.trim(node);\n\n                if ((!Dom.isEmpty(node) && node.childNodes.length === 0) ||\n                    (Dom.isBlock(node) && Dom.allWhitespaceContent(node))) {\n                    Dom.remove(node);\n                }\n            }\n        }\n\n        return parent;\n    },\n\n    closest: function(node, tags) {\n        if (typeof tags === \"string\") {\n            tags = [tags];\n        }\n\n        while (node && tags.indexOf(Dom.name(node)) < 0) {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    closestBy: function(node, condition, rootCondition) {\n        while (node && !condition(node)) {\n            if (rootCondition && rootCondition(node)) {\n                return null;\n            }\n            node = node.parentNode;\n        }\n        return node;\n    },\n\n    sibling: function(node, direction) {\n        do {\n            node = node[direction];\n        } while (node && node.nodeType != 1);\n\n        return node;\n    },\n\n    next: function(node) {\n        return Dom.sibling(node, \"nextSibling\");\n    },\n\n    prev: function(node) {\n        return Dom.sibling(node, \"previousSibling\");\n    },\n\n    parentOfType: function(node, tags) {\n        do {\n            node = node.parentNode;\n        } while (node && !(Dom.ofType(node, tags)));\n\n        return node;\n    },\n\n    ofType: function(node, tags) {\n        return $.inArray(Dom.name(node), tags) >= 0;\n    },\n\n    changeTag: function(referenceElement, tagName, skipAttributes) {\n        var newElement = Dom.create(referenceElement.ownerDocument, tagName),\n            attributes = referenceElement.attributes,\n            i, len, name, value, attribute;\n\n        if (!skipAttributes) {\n            for (i = 0, len = attributes.length; i < len; i++) {\n                attribute = attributes[i];\n                if (attribute.specified) {\n                    // IE < 8 cannot set class or style via setAttribute\n                    name = attribute.nodeName;\n                    value = attribute.nodeValue;\n                    if (name == CLASS) {\n                        newElement.className = value;\n                    } else if (name == STYLE) {\n                        newElement.style.cssText = referenceElement.style.cssText;\n                    } else {\n                        newElement.setAttribute(name, value);\n                    }\n                }\n            }\n        }\n\n        while (referenceElement.firstChild) {\n            newElement.appendChild(referenceElement.firstChild);\n        }\n\n        Dom.insertBefore(newElement, referenceElement);\n        Dom.remove(referenceElement);\n        return newElement;\n    },\n\n    editableParent: function(node) {\n        while (node && (node.nodeType == 3 || node.contentEditable !== 'true')) {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    wrap: function(node, wrapper) {\n        Dom.insertBefore(wrapper, node);\n        wrapper.appendChild(node);\n        return wrapper;\n    },\n\n    unwrap: function(node) {\n        var parent = node.parentNode;\n        while (node.firstChild) {\n            parent.insertBefore(node.firstChild, node);\n        }\n\n        parent.removeChild(node);\n    },\n\n    wrapper: function(node) {\n        var wrapper = Dom.closestBy(node, function(el) {\n            return el.parentNode && Dom.significantNodes(el.parentNode.childNodes).length > 1;\n        });\n\n        return $(wrapper).is(\"body,.k-editor\") ? undefined : wrapper;\n    },\n\n    isChildOfBaseContainer: function(node) {\n        return $(node).parent().is(\"body,.k-editor\");\n    },\n\n    create: function(document, tagName, attributes) {\n        return Dom.attr(document.createElement(tagName), attributes);\n    },\n\n    createEmptyNode: function(document, tagName, attributes) {\n        var node = Dom.attr(document.createElement(tagName), attributes);\n        node.innerHTML = \"\\ufeff\";\n        return node;\n    },\n\n    attr: function(element, attributes) {\n        attributes = extend({}, attributes);\n\n        if (attributes && STYLE in attributes) {\n            Dom.style(element, attributes.style);\n            delete attributes.style;\n        }\n\n        for (var attr in attributes) {\n            if (attributes[attr] === null) {\n                element.removeAttribute(attr);\n                delete attributes[attr];\n            } else if (attr == \"className\") {\n                element[attr] = attributes[attr];\n            }\n        }\n\n        return extend(element, attributes);\n    },\n\n    mergeAttributes: function(origin, target, traverseCss) {\n        if (!origin.attributes.length) {\n            return;\n        }\n\n        $.each(origin.attributes, function() {\n            if (this.name !== \"contenteditable\" && (!traverseCss || this.name !== STYLE)) {\n                $(target).attr(this.name, this.value);\n            }\n\n            if (traverseCss && this.name === STYLE) {\n                $.each(origin.style, function() {\n                    target.style[this] = origin.style[this];\n                });\n            }\n        });\n    },\n\n    style: function(node, value) {\n        $(node).css(value || {});\n    },\n\n    unstyle: function(node, value) {\n        for (var key in value) {\n            if (key == FLOAT) {\n                node.style[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT] = \"\";\n            } else {\n                node.style[key] = \"\";\n            }\n        }\n\n        if (node.style.cssText === \"\") {\n            node.removeAttribute(STYLE);\n        }\n    },\n\n    inlineStyle: function(body, name, attributes) {\n        var span = $(Dom.create(body.ownerDocument, name, attributes)),\n            style;\n\n        body.appendChild(span[0]);\n\n        style = map(cssAttributes, function(value) {\n            if (browser.msie && value == \"line-height\" && span.css(value) == \"1px\") {\n                return \"line-height:1.5\";\n            } else {\n                return value + \":\" + span.css(value);\n            }\n        }).join(\";\");\n\n        span.remove();\n\n        return style;\n    },\n\n    getEffectiveBackground: function(element) {\n        var backgroundStyle = element.css(\"background-color\") || \"\";\n\n        if (backgroundStyle.indexOf(\"rgba(0, 0, 0, 0\") < 0 && backgroundStyle !== \"transparent\") {\n            return backgroundStyle;\n        } else if (element[0].tagName.toLowerCase() === \"html\") {\n            return \"Window\";\n        } else {\n            return Dom.getEffectiveBackground(element.parent());\n        }\n    },\n\n    innerText: function(node) {\n        var text = node.innerHTML;\n        text = text.replace(/<!--(.|\\s)*?-->/gi, \"\");\n        text = text.replace(/<\\/?[^>]+?\\/?>/gm, \"\");\n\n        return text;\n    },\n\n    removeClass: function(node, classNames) {\n        var className = \" \" + node.className + \" \",\n            classes = classNames.split(\" \"),\n            i, len;\n\n        for (i = 0, len = classes.length; i < len; i++) {\n            className = className.replace(\" \" + classes[i] + \" \", \" \");\n        }\n\n        className = kendo.trim(className);\n\n        if (className.length) {\n            node.className = className;\n        } else {\n            node.removeAttribute(CLASS);\n        }\n    },\n\n    commonAncestor: function() {\n        var count = arguments.length,\n            paths = [],\n            minPathLength = Infinity,\n            output = null,\n            i, ancestors, node, first, j;\n\n        if (!count) {\n            return null;\n        }\n\n        if (count == 1) {\n            return arguments[0];\n        }\n\n        for (i = 0; i < count; i++) {\n            ancestors = [];\n            node = arguments[i];\n            while (node) {\n                ancestors.push(node);\n                node = node.parentNode;\n            }\n            paths.push(ancestors.reverse());\n            minPathLength = Math.min(minPathLength, ancestors.length);\n        }\n\n        if (count == 1) {\n            return paths[0][0];\n        }\n\n        for (i = 0; i < minPathLength; i++) {\n            first = paths[0][i];\n\n            for (j = 1; j < count; j++) {\n                if (first != paths[j][i]) {\n                    return output;\n                }\n            }\n\n            output = first;\n        }\n        return output;\n    },\n\n    closestSplittableParent: function(nodes) {\n        var result;\n\n        if (nodes.length == 1) {\n            result = Dom.parentOfType(nodes[0], [\"ul\",\"ol\"]);\n        } else {\n            result = Dom.commonAncestor.apply(null, nodes);\n        }\n\n        if (!result) {\n            result = Dom.parentOfType(nodes[0], [\"p\", \"td\"]) || nodes[0].ownerDocument.body;\n        }\n\n        if (Dom.isInline(result)) {\n            result = Dom.blockParentOrBody(result);\n        }\n\n        var editableParents = map(nodes, Dom.editableParent);\n        var editableAncestor = Dom.commonAncestor(editableParents)[0];\n\n        if ($.contains(result, editableAncestor)) {\n            result = editableAncestor;\n        }\n\n        return result;\n    },\n\n    closestEditable: function(node, types) {\n        var closest;\n        var editable = Dom.editableParent(node);\n\n        if (Dom.ofType(node, types)) {\n            closest = node;\n        } else {\n            closest = Dom.parentOfType(node, types);\n        }\n\n        if ((closest && editable && $.contains(closest, editable)) || (!closest && editable)) {\n            closest = editable;\n        }\n\n        return closest;\n    },\n\n    closestEditableOfType: function(node, types) {\n        var editable = Dom.closestEditable(node, types);\n\n        if (editable && Dom.ofType(editable, types) && !$(editable).is(\".k-editor\")) {\n            return editable;\n        }\n    },\n\n    filter: function(tagName, nodes, invert) {\n        var filterFn = function(node) {\n            return Dom.name(node) == tagName;\n        };\n\n        return Dom.filterBy(nodes, filterFn, invert);\n    },\n\n    filterBy: function(nodes, condition, invert) {\n        var i = 0;\n        var len = nodes.length;\n        var result = [];\n        var match;\n\n        for (; i < len; i++) {\n            match = condition(nodes[i]);\n            if ((match && !invert) || (!match && invert)) {\n                result.push(nodes[i]);\n            }\n        }\n\n        return result;\n    },\n\n    ensureTrailingBreaks: function(node) {\n        var elements = $(node).find(\"p,td,th\");\n        var length = elements.length;\n        var i = 0;\n\n        if (length) {\n            for (; i < length; i++) {\n                Dom.ensureTrailingBreak(elements[i]);\n            }\n        } else {\n            Dom.ensureTrailingBreak(node);\n        }\n    },\n\n    removeTrailingBreak: function(node) {\n        $(node).find(\"br[type=_moz],.k-br\").remove();\n    },\n\n    ensureTrailingBreak: function(node) {\n        Dom.removeTrailingBreak(node);\n\n        var lastChild = node.lastChild;\n        var name = lastChild && Dom.name(lastChild);\n        var br;\n\n        if (!name ||\n            (name != \"br\" && name != \"img\") ||\n            (name == \"br\" && lastChild.className != \"k-br\")) {\n            br = node.ownerDocument.createElement(\"br\");\n            br.className = \"k-br\";\n            node.appendChild(br);\n        }\n    },\n\n    // Start: Table Utilities\n\n    reMapTableColumns: function(table, colAttr) {\n        Dom._mapColIndices(table, colAttr);\n    },\n\n    clearTableMappings: function(table, colAttr) {\n        $(table).find(\"[\" + colAttr + \"]\").removeAttr(colAttr);\n    },\n\n    _mapColIndices: function(table, colAttr) {\n        var registeredColumns = {};\n\n        for (var rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n            var cells = table.rows[rowIndex].cells;\n            var colIndex = 0;\n            for (var cellIndex = 0; cellIndex < cells.length; cellIndex++) {\n                var cell = cells[cellIndex];\n\n                if (cell.rowSpan > 1) {\n                    this._mapColspan(cell, rowIndex, colIndex, registeredColumns);\n                }\n\n                if (registeredColumns[rowIndex]) {\n                    while (registeredColumns[rowIndex][colIndex]) {\n                        colIndex++;\n                    }\n                }\n\n                cell.setAttribute(colAttr, colIndex);\n\n                if (cell.colSpan > 1) {\n                    colIndex = colIndex + cell.colSpan - 1;\n                }\n                colIndex++;\n            }\n        }\n    },\n\n    _mapColspan: function(cell, rowIndex, colIndex, registeredColumns) {\n        var rowSpan = cell.rowSpan,\n            colSpan = cell.colSpan,\n            index;\n\n        for (var ci = 0; ci < colSpan; ci++) {\n            index = colIndex + ci;\n\n            for (var ri = rowIndex + 1; ri < rowIndex + rowSpan; ri++) {\n\n                if (!registeredColumns[ri]) {\n                    registeredColumns[ri] = {};\n                    registeredColumns[ri].length = 0;\n                }\n\n                if (registeredColumns[rowIndex]) {\n                    while (registeredColumns[rowIndex][index]) {\n                        index++;\n                    }\n                }\n\n                registeredColumns[ri][index] = true;\n                registeredColumns[ri].length++;\n            }\n        }\n\n    },\n\n    associateWithIds: function(table) {\n        var that = this;\n        var numberOfTheadRows = 0;\n        var tableRows = table.rows;\n        var numberOfTableRows = tableRows.length;\n        var theadMatrix = [];\n        var tbodyMatrix = [];\n        var theadRows, i;\n\n        if (table.tHead) {\n            theadRows = table.tHead.rows;\n            numberOfTheadRows = theadRows.length;\n        } else {\n            numberOfTheadRows = that._getNumberOfHeaderRows(table);\n            theadRows = [];\n            for (i = 0; i < numberOfTheadRows; i++) {\n                theadRows.push(tableRows[i]);\n            }\n        }\n        for (i = 0; i < numberOfTheadRows; i++) {\n            theadMatrix.push([]);\n        }\n        for (i = 0; i < numberOfTableRows; i++) {\n            tbodyMatrix.push([]);\n        }\n\n        that._generateIdsForColumns(theadMatrix, theadRows);\n        that._generateIdsForRows(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n        that._assignIds(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n    },\n\n    _generateIdsForColumns: function(theadMatrix, theadRows) {\n        var timestamp = new Date().getTime();\n        var numberOfTheadRows = theadRows ? theadRows.length : 0;\n        var row, cells, cell, col, id, colspan, rowspan, i, j, k, l;\n\n        for (i = 0; i < numberOfTheadRows; i++) {\n            row = theadRows[i];\n            cells = row.cells;\n            col = 0;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                id = \"table\" + i + j + (++timestamp);\n                cell.setAttribute(\"id\", id);\n                colspan = cell.getAttribute(\"colspan\") || 1;\n                rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                while (theadMatrix[i][j + col]) {\n                    col += 1;\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    for (l = 0; l < colspan; l++) {\n                        theadMatrix[i + k][j + col + l] = id;\n                    }\n                }\n            }\n        }\n    },\n\n    _generateIdsForRows: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n        var that = this;\n        var timestamp = new Date().getTime();\n        var numberOfTableRows = tableRows.length;\n        var row, cells, cell, col, id, colspan, rowspan, i, j, k, l, colIndex, headers;\n\n        var pushHeaderId = function(row) {\n            headers.push(row[colIndex]);\n        };\n\n        for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n            row = tableRows[i];\n            cells = $(row.cells).filter(\"th\");\n            col = 0;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                id = \"table\" + i + j + (++timestamp);\n                cell.setAttribute(\"id\", id);\n                colspan = cell.getAttribute(\"colspan\") || 1;\n                rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                while (tbodyMatrix[i][j + col]) {\n                    col += 1;\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    for (l = 0; l < colspan; l++) {\n                        tbodyMatrix[i + k][j + col + l] = id;\n                    }\n                }\n\n                colIndex = cell.getAttribute(\"col-index\");\n                headers = [];\n                theadMatrix.forEach(pushHeaderId);\n                headers = headers.filter(that._onlyUnique);\n                cell.setAttribute(\"headers\", headers.join(\" \").trim());\n            }\n        }\n    },\n\n    _assignIds: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n        var that = this;\n        var numberOfTableRows = tableRows.length;\n        var row, cells, cell, i, j, colIndex, headers;\n\n        var pushHeaderId = function(row) {\n            headers.push(row[colIndex]);\n        };\n\n        for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n            row = tableRows[i];\n            cells = $(row.cells).filter(\"td\");\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                colIndex = cell.getAttribute(\"col-index\");\n                headers = tbodyMatrix[i].slice();\n\n                theadMatrix.forEach(pushHeaderId);\n                headers = headers.filter(that._onlyUnique);\n                cell.setAttribute(\"headers\", headers.join(\" \").trim());\n            }\n        }\n    },\n\n    _getNumberOfColumns: function(table) {\n        var cells = $(table).find(\"th, td\");\n        var numberOfCols = 0;\n        var cell, i, currentIndex;\n\n        for (i = 0; i < cells.length; i++) {\n            cell = cells[i];\n            currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n            if (currentIndex > numberOfCols) {\n                numberOfCols = currentIndex;\n            }\n        }\n\n        return numberOfCols;\n    },\n\n    _getNumberOfHeaderColumns: function(table, numberOfHeaderRows) {\n        var rows = table.rows;\n        var numberOfCols = 0;\n        var currentIndex, row, i, j, cell;\n\n        for (i = numberOfHeaderRows; i < rows.length; i++) {\n            row = rows[i];\n\n            for (j = 0; j < row.cells.length; j++) {\n                cell = row.cells[j];\n\n                if (this.is(cell, \"th\")) {\n                    currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n                    if (currentIndex > numberOfCols) {\n                        numberOfCols = currentIndex;\n                    }\n                }\n            }\n        }\n\n        return numberOfCols;\n    },\n\n    _getNumberOfHeaderRows: function(table) {\n        var rows = table.rows;\n        var thead = table.tHead;\n        var number = thead && table.tHead.rows ? table.tHead.rows.length : 0;\n        var j, row, cell, length;\n\n        if (number === 0) {\n            row = rows[0];\n            length = row.cells && row.cells.length;\n\n            while (row && length && this.is(row.cells[0], \"th\")) {\n                for (j = 0; j < length; j++) {\n                    cell = row ? row.cells[j] : null;\n\n                    if (!this.is(cell, \"th\")) {\n                        row = null;\n                    }\n                }\n\n                if (row) {\n                    number += 1;\n                    row = this.next(row);\n                    length = row && row.cells && row.cells.length;\n                }\n            }\n        }\n\n        return number;\n    },\n\n    // End: Table Utilities\n\n    _onlyUnique: function(value, index, self) {\n        return self.indexOf(value) === index;\n    }\n};\n\nkendo.ui.editor.Dom = Dom;\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\n// Imports ================================================================\nvar kendo = window.kendo;\nvar Editor = kendo.ui.editor;\nvar dom = Editor.Dom;\nvar extend = $.extend;\n\nvar fontSizeMappings = 'xx-small,x-small,small,medium,large,x-large,xx-large'.split(',');\nvar quoteRe = /\"/g; //\"\nvar brRe = /<br[^>]*>/i;\nvar pixelRe = /^\\d+(\\.\\d*)?(px)?$/i;\nvar emptyPRe = /<p>(?:&nbsp;)?<\\/p>/i;\nvar cssDeclaration = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/g;\nvar sizzleAttr = /^sizzle-\\d+/i;\nvar scriptAttr = /^k-script-/i;\nvar onerrorRe = /\\s*onerror\\s*=\\s*(?:'|\")?([^'\">\\s]*)(?:'|\")?/i;\nvar br = '<br class=\"k-br\">';\nvar bomSpan = \"<span class='k-br'>\\ufeff</span>\";\n\nvar div = document.createElement(\"div\");\ndiv.innerHTML = \" <hr>\";\nvar supportsLeadingWhitespace = div.firstChild.nodeType === 3;\ndiv = null;\nvar isFunction = kendo.isFunction;\n\nvar TD = \"td\";\n\nvar Serializer = {\n    toEditableHtml: function(html) {\n        return (html || \"\")\n            .replace(/<!\\[CDATA\\[(.*)?\\]\\]>/g, \"<!--[CDATA[$1]]-->\")\n            .replace(/<(\\/?)script([^>]*)>/ig, \"<$1k:script$2>\")\n            .replace(/<img([^>]*)>/ig, function(match) {\n                return match.replace(onerrorRe, \"\");\n            })\n            .replace(/(<\\/?img[^>]*>)[\\r\\n\\v\\f\\t ]+/ig, \"$1\")\n            .replace(/^<(table|blockquote)/i, br + '<$1')\n            .replace(/^[\\s]*(&nbsp;|\\u00a0)/i, '$1')\n            .replace(/<\\/(table|blockquote)>$/i, '</$1>' + br);\n    },\n\n    _toEditableImmutables: function(body) {\n        var immutable = Editor.Immutables.immutable,\n            emptyTextNode = dom.emptyTextNode,\n            first = body.firstChild,\n            last = body.lastChild;\n\n        while (emptyTextNode(first)) {\n            first = first.nextSibling;\n        }\n\n        while (emptyTextNode(last)) {\n            last = last.previousSibling;\n        }\n\n        if (first && immutable(first)) {\n            $(bomSpan).prependTo(body);\n        }\n\n        if (last && immutable(last)) {\n            $(bomSpan).appendTo(body);\n        }\n    },\n\n    _fillEmptyElements: function(body) {\n        // fills empty elements to allow them to be focused\n        $(body).find(\"p,td\").each(function() {\n            var p = $(this);\n            if (/^\\s*$/g.test(p.text()) && !p.find(\"img,input\").length) {\n                var node = this;\n                while (node.children[0] && node.children[0].nodeType != 3) {\n                    node = node.children[0];\n                }\n\n                if (node.nodeType == 1 && !dom.empty[dom.name(node)]) {\n                    if (dom.is(node, \"td\")) {\n                        node.innerHTML = kendo.ui.editor.emptyTableCellContent;\n                    }\n                    else {\n                        node.innerHTML = kendo.ui.editor.emptyElementContent;\n                    }\n                }\n            }\n        });\n    },\n\n    _removeSystemElements: function(body) {\n        // removes persisted system elements\n        $(\".k-paste-container\", body).remove();\n    },\n\n    _resetOrderedLists: function(root) {\n        // fix for IE9 OL bug -- https://connect.microsoft.com/IE/feedback/details/657695/ordered-list-numbering-changes-from-correct-to-0-0\n        var ols = root.getElementsByTagName(\"ol\"), i, ol, originalStart;\n\n        for (i = 0; i < ols.length; i++) {\n            ol = ols[i];\n            originalStart = ol.getAttribute(\"start\");\n\n            ol.setAttribute(\"start\", 1);\n\n            if (originalStart) {\n                ol.setAttribute(\"start\", originalStart);\n            } else {\n                ol.removeAttribute(originalStart);\n            }\n        }\n    },\n\n    _preventScriptExecution: function(root) {\n        $(root).find(\"*\").each(function() {\n            var attributes = this.attributes;\n            var attribute, i, l, name;\n            var attributesToRemove = [];\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n\n                if (attribute.specified && /^on/i.test(name)) {\n                    this.setAttribute(\"k-script-\" + name, attribute.value);\n                    attributesToRemove.push(name);\n                }\n            }\n\n            for (i = 0, l = attributesToRemove.length; i < l; i++) {\n                this.removeAttribute(attributesToRemove[i]);\n            }\n        });\n    },\n\n    htmlToDom: function(html, root, options) {\n        var browser = kendo.support.browser;\n        var msie = browser.msie;\n        var o = options || {};\n        var immutables = o.immutables;\n\n        html = Serializer.toEditableHtml(html);\n\n        if (isFunction(o.custom)) {\n            html = o.custom(html) || html;\n        }\n        root.innerHTML = html;\n\n        if (immutables) {\n            immutables.deserialize(root);\n        }\n\n        if (msie) {\n            // unicode characters denormalize the DOM tree in IE9\n            dom.normalize(root);\n\n            Serializer._resetOrderedLists(root);\n        }\n\n        Serializer._preventScriptExecution(root);\n\n        Serializer._fillEmptyElements(root);\n\n        Serializer._removeSystemElements(root);\n\n        Serializer._toEditableImmutables(root);\n\n        // add k-table class to all tables\n        $(\"table\", root).addClass(\"k-table\");\n\n        return root;\n    },\n\n    domToXhtml: function(root, options) {\n        var result = [];\n        var immutables = options && options.immutables;\n\n        function semanticFilter(attributes) {\n            return $.grep(attributes, function(attr) {\n                return attr.name != \"style\";\n            });\n        }\n\n        function mapStart(node, tag) {\n            result.push('<' + tag);\n            attr(node);\n            result.push('>');\n        }\n\n        var tagMap = {\n            iframe: {\n                start: function(node) { mapStart(node, \"iframe\"); },\n                end: function() { result.push('</iframe>'); }\n            },\n            'k:script': {\n                start: function(node) { mapStart(node, \"script\"); },\n                end: function() { result.push('</script>'); },\n                skipEncoding: true\n            },\n            span: {\n                canOptimize: true,\n                semantic: true,\n                start: function(node) {\n                    var style = node.style;\n\n                    var attributes = specifiedAttributes(node);\n                    var semanticAttributes = semanticFilter(attributes);\n\n                    if (semanticAttributes.length) {\n                        result.push(\"<span\"); attr(node, semanticAttributes); result.push(\">\");\n                    }\n\n                    if (style.textDecoration == \"underline\") {\n                        result.push(\"<u>\");\n                    }\n\n                    var font = [];\n                    if (style.color) {\n                        font.push('color=\"' + dom.toHex(style.color) + '\"');\n                    }\n\n                    if (style.fontFamily) {\n                        font.push('face=\"' + style.fontFamily + '\"');\n                    }\n\n                    if (style.fontSize) {\n                        var size = $.inArray(style.fontSize, fontSizeMappings);\n                        font.push('size=\"' + size + '\"');\n                    }\n\n                    // Apply the rest of the inline styles back\n                    var inlineStyles = [];\n                    var ignoredStylePrefixes = [\"text-decoration\", \"color\", \"font\"];\n\n                    for (let i = 0; i < style.length; i++) {\n                        var inlineStyle = style[i];\n\n                        if (ignoredStylePrefixes.filter(prop => inlineStyle.startsWith(prop)).length <= 0) {\n                            inlineStyles.push(`${inlineStyle}: ${style[inlineStyle]}`);\n                        }\n                    }\n\n                    if (inlineStyles.length) {\n                        font.push('style=\"' + inlineStyles.join(\";\") + '\"');\n                    }\n\n                    if (font.length) {\n                        result.push(\"<font \" + font.join(\" \") + \">\");\n                    }\n                },\n                end: function(node) {\n                    var style = node.style;\n\n                    if (style.color || style.fontFamily || style.fontSize) {\n                        result.push(\"</font>\");\n                    }\n\n                    if (style.textDecoration == \"underline\") {\n                        result.push(\"</u>\");\n                    }\n\n                    if (semanticFilter(specifiedAttributes(node)).length) {\n                        result.push(\"</span>\");\n                    }\n                }\n            },\n            strong: {\n                semantic: true,\n                start: function(node) { mapStart(node, \"b\"); },\n                end: function() { result.push('</b>'); }\n            },\n            em: {\n                semantic: true,\n                start: function(node) { mapStart(node, \"i\"); },\n                end: function() { result.push('</i>'); }\n            },\n            b: {\n                semantic: false,\n                start: function(node) { mapStart(node, \"strong\"); },\n                end: function() { result.push('</strong>'); }\n            },\n            i: {\n                semantic: false,\n                start: function(node) { mapStart(node, \"em\"); },\n                end: function() { result.push('</em>'); }\n            },\n            u: {\n                semantic: false,\n                start: function(node) {\n                    result.push('<span');\n\n                    var attributes = specifiedAttributes(node);\n                    var style = $(attributes).filter(function(i, item) { return item.name == \"style\"; })[0];\n                    var styleObj = { nodeName: \"style\", value: \"text-decoration:underline;\" };\n\n                    if (style) {\n                        styleObj.value = style.value;\n                        if (!/text-decoration/i.test(styleObj.value)) {\n                            styleObj.value = \"text-decoration:underline;\" + styleObj.value;\n                        }\n                        attributes.splice($.inArray(style, attributes), 1);\n                    }\n                    attributes.push(styleObj);\n\n                    attr(node, attributes);\n                    result.push('>');\n                },\n                end: function() { result.push('</span>'); }\n            },\n            font: {\n                canOptimize: true,\n                semantic: false,\n                start: function(node) {\n                    result.push('<span style=\"');\n\n                    var color = node.getAttribute('color');\n                    var size = fontSizeMappings[node.getAttribute('size')];\n                    var face = node.getAttribute('face');\n\n                    if (color) {\n                        result.push('color:');\n                        result.push(dom.toHex(color));\n                        result.push(';');\n                    }\n\n                    if (face) {\n                        result.push('font-family:');\n                        result.push(face);\n                        result.push(';');\n                    }\n\n                    if (size) {\n                        result.push('font-size:');\n                        result.push(size);\n                        result.push(';');\n                    }\n\n                    result.push('\">');\n                },\n                end: function() {\n                    result.push('</span>');\n                }\n            }\n        };\n\n        tagMap.script = tagMap[\"k:script\"];\n\n        options = options || {};\n\n        if (typeof options.semantic == \"undefined\") {\n            options.semantic = true;\n        }\n\n        function cssProperties(cssText) {\n            var trim = kendo.trim;\n            var css = trim(cssText);\n            var match;\n            var property, value;\n            var properties = [];\n\n            cssDeclaration.lastIndex = 0;\n\n            while (true) {\n                match = cssDeclaration.exec(css);\n\n                if (!match) {\n                    break;\n                }\n\n                property = trim(match[1].toLowerCase());\n                value = trim(match[2]);\n\n                if (property == \"font-size-adjust\" || property == \"font-stretch\") {\n                    continue;\n                }\n\n                if (property.indexOf('color') >= 0) {\n                    value = dom.toHex(value);\n                } else if (property.indexOf('font') >= 0) {\n                    value = value.replace(quoteRe, \"'\");\n                } else if (/\\burl\\(/g.test(value)) {\n                    value = value.replace(quoteRe, \"\");\n                }\n\n                properties.push({ property: property, value: value });\n            }\n\n            return properties;\n        }\n\n        function styleAttr(cssText) {\n            var properties = cssProperties(cssText);\n            var i;\n\n            for (i = 0; i < properties.length; i++) {\n                result.push(properties[i].property);\n                result.push(':');\n                result.push(properties[i].value);\n                result.push(';');\n            }\n        }\n\n        function specifiedAttributes(node) {\n            var result = [];\n            var attributes = node.attributes;\n            var attribute, i, l;\n            var name, value, specified;\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n\n                name = attribute.nodeName;\n                value = attribute.value;\n                specified = attribute.specified;\n\n                // In IE < 8 the 'value' attribute is not returned as 'specified'. The same goes for type=\"text\"\n                if (name == 'value' && 'value' in node && node.value) {\n                    specified = true;\n                } else if (name == 'type' && value == 'text') {\n                    specified = true;\n                } else if (name == \"class\" && !value) {\n                    specified = false;\n                } else if (sizzleAttr.test(name)) {\n                    specified = false;\n                } else if (name == 'complete') {\n                    specified = false;\n                } else if (name == 'altHtml') {\n                    specified = false;\n                } else if (name == 'start' && dom.is(node, \"ul\")) {\n                    specified = false;\n                } else if (name == 'start' && dom.is(node, \"ol\") && value == \"1\") {\n                    specified = false;\n                } else if (name.indexOf('_moz') >= 0) {\n                    specified = false;\n                } else if (scriptAttr.test(name)) {\n                    specified = !!options.scripts;\n                } else if (name == 'data-role' && value == 'resizable' && (dom.is(node, \"tr\") || dom.is(node, \"td\"))) {\n                    specified = false;\n                }\n\n                if (specified) {\n                    result.push(attribute);\n                }\n            }\n\n            return result;\n        }\n\n        function attr(node, attributes) {\n            var i, l, attribute, name, value;\n\n            attributes = attributes || specifiedAttributes(node);\n\n            if (dom.is(node, 'img')) {\n                var width = node.style.width,\n                    height = node.style.height,\n                    $node = $(node);\n\n                if (width && pixelRe.test(width)) {\n                    $node.attr('width', parseInt(width, 10));\n                    dom.unstyle(node, { width: undefined$1 });\n                }\n\n                if (height && pixelRe.test(height)) {\n                    $node.attr('height', parseInt(height, 10));\n                    dom.unstyle(node, { height: undefined$1 });\n                }\n            }\n\n            if (!attributes.length) {\n                return;\n            }\n\n            // Remove the following if everything seems to be in order.\n            // https://github.com/telerik/kendo-ui-core/issues/3639\n            // attributes.sort(function (a, b) {\n            //     return a.nodeName > b.nodeName ? 1 : a.nodeName < b.nodeName ? -1 : 0;\n            // });\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n                value = attribute.value;\n\n                if (name == \"class\" && value == \"k-table\") {\n                    continue;\n                }\n\n                name = name.replace(scriptAttr, \"\");\n\n                result.push(' ');\n                result.push(name);\n                result.push('=\"');\n\n                if (name == 'style') {\n                    styleAttr(value || node.style.cssText);\n                } else if (name == 'src' || name == 'href') {\n                    result.push(kendo.htmlEncode(node.getAttribute(name, 2)));\n                } else {\n                    result.push(dom.fillAttrs[name] ? name : value);\n                }\n\n                result.push('\"');\n            }\n        }\n\n        function children(node, skip, skipEncoding) {\n            for (var childNode = node.firstChild; childNode; childNode = childNode.nextSibling) {\n                child(childNode, skip, skipEncoding);\n            }\n        }\n\n        function text(node) {\n            return node.nodeValue.replace(/\\ufeff/g, \"\");\n        }\n\n        function isEmptyBomNode(node) {\n            if (dom.isBom(node)) {\n                do {\n                    node = node.parentNode;\n\n                    if (dom.is(node, TD) && node.childNodes.length === 1) {\n                        return true;\n                    }\n\n                    if (node.childNodes.length !== 1) {\n                        return false;\n                    }\n                } while (!dom.isBlock(node));\n\n                return true;\n            }\n\n            return false;\n        }\n\n        function child(node, skip, skipEncoding) {\n            var nodeType = node.nodeType,\n                tagName, mapper,\n                parent, value, previous, jqNode;\n\n            if (immutables && Editor.Immutables.immutable(node)) {\n                result.push(immutables.serialize(node));\n            } else if (nodeType == 1) {\n                tagName = dom.name(node);\n                jqNode = $(node);\n\n                if (jqNode.hasClass(\"k-element-resize-handle-wrapper\") || jqNode.hasClass(\"k-column-resize-handle-wrapper\") || jqNode.hasClass(\"k-row-resize-handle-wrapper\")) {\n                    return;\n                }\n\n                if (!tagName || dom.insignificant(node)) {\n                    return;\n                }\n\n                if (!options.scripts && (tagName == \"script\" || tagName == \"k:script\")) {\n                    return;\n                }\n\n                mapper = tagMap[tagName];\n\n                if (mapper) {\n                    if (mapper.canOptimize &&\n                        options.optimizeTags &&\n                        shouldOptimize(node)) {\n                            children(node, false, mapper.skipEncoding);\n                        return;\n                    }\n\n                    if (typeof mapper.semantic == \"undefined\" ||\n                        (options.semantic ^ mapper.semantic)) {\n                        mapper.start(node);\n                        children(node, false, mapper.skipEncoding);\n                        mapper.end(node);\n                        return;\n                    }\n                }\n\n                result.push('<');\n                result.push(tagName);\n\n                attr(node);\n\n                if (dom.empty[tagName]) {\n                    result.push(' />');\n                } else {\n                    result.push('>');\n                    children(node, skip || dom.is(node, 'pre'));\n                    result.push('</');\n                    result.push(tagName);\n                    result.push('>');\n                }\n            } else if (nodeType == 3) {\n                if (isEmptyBomNode(node)) {\n                    result.push('&nbsp;');\n                    return;\n                }\n\n                value = text(node);\n\n                if (!skip && supportsLeadingWhitespace) {\n                    parent = node.parentNode;\n                    previous = node.previousSibling;\n\n                    if (!previous) {\n                         previous = (dom.isInline(parent) ? parent : node).previousSibling;\n                    }\n\n                    if (!previous || previous.innerHTML === \"\" || dom.isBlock(previous)) {\n                        if (options.keepEOL) {\n                            value = value.replace(/[\\r\\n\\v\\f\\t ]+/, ' ');\n                        } else {\n                            value = value.replace(/^[\\r\\n\\v\\f\\t ]+/, '');\n                        }\n                    }\n\n                    value = value.replace(/ +/, ' ');\n                }\n\n                result.push(skipEncoding ? value : dom.encode(value, options));\n\n            } else if (nodeType == 4) {\n                result.push('<![CDATA[');\n                result.push(node.data);\n                result.push(']]>');\n            } else if (nodeType == 8) {\n                if (node.data.indexOf('[CDATA[') < 0) {\n                    result.push('<!--');\n                    result.push(node.data);\n                    result.push('-->');\n                } else {\n                    result.push('<!');\n                    result.push(node.data);\n                    result.push('>');\n                }\n            }\n        }\n\n        function shouldOptimize(node) {\n            return node.attributes.length === 0;\n        }\n\n        function textOnly(root) {\n            var childrenCount = root.childNodes.length;\n            var textChild = childrenCount && root.firstChild.nodeType == 3;\n\n            return textChild && (childrenCount == 1 || (childrenCount == 2 && dom.insignificant(root.lastChild)));\n        }\n\n        function runCustom() {\n            if (kendo.isFunction(options.custom)) {\n                result = options.custom(result) || result;\n            }\n        }\n\n        if (textOnly(root)) {\n            result = dom.encode(text(root.firstChild).replace(/[\\r\\n\\v\\f\\t ]+/, ' '), options);\n            runCustom();\n\n            return result;\n        }\n\n        children(root);\n        result = result.join('');\n        runCustom();\n\n        // if serialized dom contains only whitespace elements, consider it empty (required field validation)\n        if (result.replace(brRe, \"\").replace(emptyPRe, \"\") === \"\") {\n            return \"\";\n        }\n\n        return result;\n    }\n\n};\n\nextend(Editor, {\n    Serializer: Serializer\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        browser = kendo.support.browser,\n        dom = Editor.Dom,\n        findNodeIndex = dom.findNodeIndex,\n        isDataNode = dom.isDataNode,\n        findClosestAncestor = dom.findClosestAncestor,\n        getNodeLength = dom.getNodeLength,\n        normalize = dom.normalize;\n\nvar SelectionUtils = {\n    selectionFromWindow: function(window) {\n        if (!window) {\n            return;\n        }\n\n        if (!(\"getSelection\" in window)) {\n            return new W3CSelection(window.document);\n        }\n\n        return window.getSelection();\n    },\n\n    selectionFromRange: function(range) {\n        var rangeDocument = RangeUtils.documentFromRange(range);\n        return SelectionUtils.selectionFromDocument(rangeDocument);\n    },\n\n    selectionFromDocument: function(document) {\n        return SelectionUtils.selectionFromWindow(dom.windowFromDocument(document));\n    }\n};\n\nvar W3CRange = Class.extend({\n    init: function(doc) {\n        $.extend(this, {\n            ownerDocument: doc, /* not part of the spec; used when cloning ranges, traversing the dom and creating fragments */\n            startContainer: doc,\n            endContainer: doc,\n            commonAncestorContainer: doc,\n            startOffset: 0,\n            endOffset: 0,\n            collapsed: true\n        });\n    },\n\n    // Positioning Methods\n    setStart: function(node, offset) {\n        this.startContainer = node;\n        this.startOffset = offset;\n        updateRangeProperties(this);\n        fixIvalidRange(this, true);\n    },\n\n    setEnd: function(node, offset) {\n        this.endContainer = node;\n        this.endOffset = offset;\n        updateRangeProperties(this);\n        fixIvalidRange(this, false);\n    },\n\n    setStartBefore: function(node) {\n        this.setStart(node.parentNode, findNodeIndex(node));\n    },\n\n    setStartAfter: function(node) {\n        this.setStart(node.parentNode, findNodeIndex(node) + 1);\n    },\n\n    setEndBefore: function(node) {\n        this.setEnd(node.parentNode, findNodeIndex(node));\n    },\n\n    setEndAfter: function(node) {\n        this.setEnd(node.parentNode, findNodeIndex(node) + 1);\n    },\n\n    selectNode: function(node) {\n        this.setStartBefore(node);\n        this.setEndAfter(node);\n    },\n\n    selectNodeContents: function(node) {\n        this.setStart(node, 0);\n        this.setEnd(node, node[node.nodeType === 1 ? 'childNodes' : 'nodeValue'].length);\n    },\n\n    collapse: function(toStart) {\n        var that = this;\n\n        if (toStart) {\n            that.setEnd(that.startContainer, that.startOffset);\n        } else {\n            that.setStart(that.endContainer, that.endOffset);\n        }\n    },\n\n    // Editing Methods\n\n    deleteContents: function() {\n        var that = this,\n            range = that.cloneRange();\n\n        if (that.startContainer != that.commonAncestorContainer) {\n            that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n        }\n\n        that.collapse(true);\n\n        (function deleteSubtree(iterator) {\n            while (iterator.next()) {\n                if (iterator.hasPartialSubtree()) {\n                    deleteSubtree(iterator.getSubtreeIterator());\n                } else {\n                    iterator.remove();\n                }\n            }\n        })(new RangeIterator(range));\n    },\n\n    cloneContents: function() {\n        // clone subtree\n        var document = RangeUtils.documentFromRange(this);\n        return (function cloneSubtree(iterator) {\n                var node, frag = document.createDocumentFragment();\n\n                while (node = iterator.next()) {\n                    node = node.cloneNode(!iterator.hasPartialSubtree());\n\n                    if (iterator.hasPartialSubtree()) {\n                        node.appendChild(cloneSubtree(iterator.getSubtreeIterator()));\n                    }\n\n                    frag.appendChild(node);\n                }\n\n                return frag;\n        })(new RangeIterator(this));\n    },\n\n    extractContents: function() {\n        var that = this,\n            range = that.cloneRange();\n\n        if (that.startContainer != that.commonAncestorContainer) {\n            that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n        }\n\n        that.collapse(true);\n\n        var document = RangeUtils.documentFromRange(that);\n\n        return (function extractSubtree(iterator) {\n            var node, frag = document.createDocumentFragment();\n\n            while (node = iterator.next()) {\n                if (iterator.hasPartialSubtree()) {\n                    node = node.cloneNode(false);\n                    node.appendChild(extractSubtree(iterator.getSubtreeIterator()));\n                } else {\n                    iterator.remove(that.originalRange);\n                }\n\n                frag.appendChild(node);\n            }\n\n            return frag;\n        })(new RangeIterator(range));\n    },\n\n    insertNode: function(node) {\n        var that = this;\n\n        if (isDataNode(that.startContainer)) {\n            if (that.startOffset != that.startContainer.nodeValue.length) {\n                dom.splitDataNode(that.startContainer, that.startOffset);\n            }\n\n            dom.insertAfter(node, that.startContainer);\n        } else {\n            dom.insertAt(that.startContainer, node, that.startOffset);\n        }\n\n        that.setStart(that.startContainer, that.startOffset);\n    },\n\n    cloneRange: function() {\n        // fast copy\n        return $.extend(new W3CRange(this.ownerDocument), {\n            startContainer: this.startContainer,\n            endContainer: this.endContainer,\n            commonAncestorContainer: this.commonAncestorContainer,\n            startOffset: this.startOffset,\n            endOffset: this.endOffset,\n            collapsed: this.collapsed,\n\n            originalRange: this /* not part of the spec; used to update the original range when calling extractContents() on clones */\n        });\n    },\n\n    // used for debug purposes\n    toString: function() {\n        var startNodeName = this.startContainer.nodeName,\n            endNodeName = this.endContainer.nodeName;\n\n        return [startNodeName == \"#text\" ? this.startContainer.nodeValue : startNodeName, '(', this.startOffset, ') : ',\n                endNodeName == \"#text\" ? this.endContainer.nodeValue : endNodeName, '(', this.endOffset, ')'].join('');\n    }\n});\n\nW3CRange.fromNode = function(node) {\n    return new W3CRange(node.ownerDocument);\n};\n\n/* can be used in Range.compareBoundaryPoints if we need it one day */\nfunction compareBoundaries(start, end, startOffset, endOffset) {\n    if (start == end) {\n        return endOffset - startOffset;\n    }\n\n    // end is child of start\n    var container = end;\n    while (container && container.parentNode != start) {\n        container = container.parentNode;\n    }\n\n    if (container) {\n        return findNodeIndex(container) - startOffset;\n    }\n\n    // start is child of end\n    container = start;\n    while (container && container.parentNode != end) {\n        container = container.parentNode;\n    }\n\n    if (container) {\n        return endOffset - findNodeIndex(container) - 1;\n    }\n\n    // deep traversal\n    var root = dom.commonAncestor(start, end);\n    var startAncestor = start;\n\n    while (startAncestor && startAncestor.parentNode != root) {\n        startAncestor = startAncestor.parentNode;\n    }\n\n    if (!startAncestor) {\n        startAncestor = root;\n    }\n\n    var endAncestor = end;\n    while (endAncestor && endAncestor.parentNode != root) {\n        endAncestor = endAncestor.parentNode;\n    }\n\n    if (!endAncestor) {\n        endAncestor = root;\n    }\n\n    if (startAncestor == endAncestor) {\n        return 0;\n    }\n\n    return findNodeIndex(endAncestor) - findNodeIndex(startAncestor);\n}\n\nfunction fixIvalidRange(range, toStart) {\n    function isInvalidRange(range) {\n        try {\n            return compareBoundaries(range.startContainer, range.endContainer, range.startOffset, range.endOffset) < 0;\n        } catch (ex) {\n            // range was initially invalid (e.g. when cloned from invalid range) - it must be fixed\n            return true;\n        }\n    }\n\n    if (isInvalidRange(range)) {\n        if (toStart) {\n            range.commonAncestorContainer = range.endContainer = range.startContainer;\n            range.endOffset = range.startOffset;\n        } else {\n            range.commonAncestorContainer = range.startContainer = range.endContainer;\n            range.startOffset = range.endOffset;\n        }\n\n        range.collapsed = true;\n    }\n}\n\nfunction updateRangeProperties(range) {\n    range.collapsed = range.startContainer == range.endContainer && range.startOffset == range.endOffset;\n\n    var node = range.startContainer;\n    while (node && node != range.endContainer && !dom.isAncestorOf(node, range.endContainer)) {\n        node = node.parentNode;\n    }\n\n    range.commonAncestorContainer = node;\n}\n\nvar RangeIterator = Class.extend({\n    init: function(range) {\n        $.extend(this, {\n            range: range,\n            _current: null,\n            _next: null,\n            _end: null\n        });\n\n        if (range.collapsed) {\n            return;\n        }\n\n        var root = range.commonAncestorContainer;\n\n        this._next = range.startContainer == root && !isDataNode(range.startContainer) ?\n        range.startContainer.childNodes[range.startOffset] :\n        findClosestAncestor(root, range.startContainer);\n\n        this._end = range.endContainer == root && !isDataNode(range.endContainer) ?\n        range.endContainer.childNodes[range.endOffset] :\n        findClosestAncestor(root, range.endContainer).nextSibling;\n    },\n\n    hasNext: function() {\n        return !!this._next;\n    },\n\n    next: function() {\n        var that = this,\n            current = that._current = that._next;\n        that._next = that._current && that._current.nextSibling != that._end ?\n        that._current.nextSibling : null;\n\n        if (isDataNode(that._current)) {\n            if (that.range.endContainer == that._current) {\n                current = current.cloneNode(true);\n                current.deleteData(that.range.endOffset, current.length - that.range.endOffset);\n            }\n\n            if (that.range.startContainer == that._current) {\n                current = current.cloneNode(true);\n                current.deleteData(0, that.range.startOffset);\n            }\n        }\n\n        return current;\n    },\n\n    traverse: function(callback) {\n        var that = this,\n            current;\n\n        function next() {\n            that._current = that._next;\n            that._next = that._current && that._current.nextSibling != that._end ? that._current.nextSibling : null;\n            return that._current;\n        }\n\n        while (current = next()) {\n            if (that.hasPartialSubtree()) {\n                that.getSubtreeIterator().traverse(callback);\n            } else {\n                callback(current);\n            }\n        }\n\n        return current;\n    },\n\n    remove: function(originalRange) {\n        var that = this,\n            inStartContainer = that.range.startContainer == that._current,\n            inEndContainer = that.range.endContainer == that._current,\n            start, end, delta;\n\n        if (isDataNode(that._current) && (inStartContainer || inEndContainer)) {\n            start = inStartContainer ? that.range.startOffset : 0;\n            end = inEndContainer ? that.range.endOffset : that._current.length;\n            delta = end - start;\n\n            if (originalRange && (inStartContainer || inEndContainer)) {\n                if (that._current == originalRange.startContainer && start <= originalRange.startOffset) {\n                    originalRange.startOffset -= delta;\n                }\n\n                if (that._current == originalRange.endContainer && end <= originalRange.endOffset) {\n                    originalRange.endOffset -= delta;\n                }\n            }\n\n            that._current.deleteData(start, delta);\n        } else {\n            var parent = that._current.parentNode;\n\n            if (originalRange && (that.range.startContainer == parent || that.range.endContainer == parent)) {\n                var nodeIndex = findNodeIndex(that._current);\n\n                if (parent == originalRange.startContainer && nodeIndex <= originalRange.startOffset) {\n                    originalRange.startOffset -= 1;\n                }\n\n                if (parent == originalRange.endContainer && nodeIndex < originalRange.endOffset) {\n                    originalRange.endOffset -= 1;\n                }\n            }\n\n            dom.remove(that._current);\n        }\n    },\n\n    hasPartialSubtree: function() {\n        return !isDataNode(this._current) &&\n        (dom.isAncestorOrSelf(this._current, this.range.startContainer) ||\n            dom.isAncestorOrSelf(this._current, this.range.endContainer));\n    },\n\n    getSubtreeIterator: function() {\n        return new RangeIterator(this.getSubRange());\n    },\n\n    getSubRange: function() {\n        var that = this,\n            subRange = that.range.cloneRange();\n        subRange.selectNodeContents(that._current);\n        if (dom.isAncestorOrSelf(that._current, that.range.startContainer)) {\n            subRange.setStart(that.range.startContainer, that.range.startOffset);\n        }\n        if (dom.isAncestorOrSelf(that._current, that.range.endContainer)) {\n            subRange.setEnd(that.range.endContainer, that.range.endOffset);\n        }\n\n        return subRange;\n    }\n});\n\nvar W3CSelection = Class.extend({\n    init: function(doc) {\n        this.ownerDocument = doc;\n        this.rangeCount = 1;\n    },\n\n    addRange: function(range) {\n        var textRange = this.ownerDocument.body.createTextRange();\n\n        // end container should be adopted first in order to prevent selection with negative length\n        adoptContainer(textRange, range, false);\n        adoptContainer(textRange, range, true);\n\n        textRange.select();\n    },\n\n    removeAllRanges: function() {\n        var selection = this.ownerDocument.selection;\n\n        if (selection.type != \"None\") {\n            selection.empty();\n        }\n    },\n\n    getRangeAt: function() {\n        var textRange,\n            range = new W3CRange(this.ownerDocument),\n            selection = this.ownerDocument.selection,\n            element, commonAncestor;\n\n        try {\n            textRange = selection.createRange();\n            element = textRange.item ? textRange.item(0) : textRange.parentElement();\n            if (element.ownerDocument != this.ownerDocument) {\n                return range;\n            }\n        } catch (ex) {\n            return range;\n        }\n\n        if (selection.type == \"Control\") {\n            range.selectNode(textRange.item(0));\n        } else {\n            commonAncestor = textRangeContainer(textRange);\n            adoptEndPoint(textRange, range, commonAncestor, true);\n            adoptEndPoint(textRange, range, commonAncestor, false);\n\n            if (range.startContainer.nodeType == 9) {\n                range.setStart(range.endContainer, range.startOffset);\n            }\n\n            if (range.endContainer.nodeType == 9) {\n                range.setEnd(range.startContainer, range.endOffset);\n            }\n\n            if (textRange.compareEndPoints(\"StartToEnd\", textRange) === 0) {\n                range.collapse(false);\n            }\n\n            var startContainer = range.startContainer,\n                endContainer = range.endContainer,\n                body = this.ownerDocument.body;\n\n            if (!range.collapsed && range.startOffset === 0 && range.endOffset == getNodeLength(range.endContainer) && // check for full body selection\n                !(startContainer == endContainer && isDataNode(startContainer) && startContainer.parentNode == body)) { // but not when single textnode is selected\n                var movedStart = false,\n                    movedEnd = false;\n\n                while (findNodeIndex(startContainer) === 0 && startContainer == startContainer.parentNode.firstChild && startContainer != body) {\n                    startContainer = startContainer.parentNode;\n                    movedStart = true;\n                }\n\n                while (findNodeIndex(endContainer) == getNodeLength(endContainer.parentNode) - 1 && endContainer == endContainer.parentNode.lastChild && endContainer != body) {\n                    endContainer = endContainer.parentNode;\n                    movedEnd = true;\n                }\n\n                if (startContainer == body && endContainer == body && movedStart && movedEnd) {\n                    range.setStart(startContainer, 0);\n                    range.setEnd(endContainer, getNodeLength(body));\n                }\n            }\n        }\n\n        return range;\n    }\n});\n\nfunction textRangeContainer(textRange) {\n    var left = textRange.duplicate(),\n        right = textRange.duplicate();\n\n    left.collapse(true);\n    right.collapse(false);\n\n    return dom.commonAncestor(textRange.parentElement(), left.parentElement(), right.parentElement());\n}\n\nfunction adoptContainer(textRange, range, start) {\n    // find anchor node and offset\n    var container = range[start ? \"startContainer\" : \"endContainer\"],\n        offset = range[start ? \"startOffset\" : \"endOffset\"],\n        textOffset = 0,\n        isData = isDataNode(container),\n        anchorNode = isData ? container : container.childNodes[offset] || null,\n        anchorParent = isData ? container.parentNode : container,\n        doc = range.ownerDocument,\n        cursor = doc.body.createTextRange(),\n        cursorNode;\n\n    // visible data nodes need a text offset\n    if (container.nodeType == 3 || container.nodeType == 4) {\n        textOffset = offset;\n    }\n\n    if (!anchorParent) {\n        anchorParent = doc.body;\n    }\n\n    if (anchorParent.nodeName.toLowerCase() == \"img\") {\n        cursor.moveToElementText(anchorParent);\n        cursor.collapse(false);\n        textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n    } else {\n        // create a cursor element node to position range (since we can't select text nodes)\n        cursorNode = anchorParent.insertBefore(dom.create(doc, \"a\"), anchorNode);\n\n        cursor.moveToElementText(cursorNode);\n        dom.remove(cursorNode);\n        cursor[start ? \"moveStart\" : \"moveEnd\"](\"character\", textOffset);\n        cursor.collapse(false);\n        textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n    }\n}\n\nfunction adoptEndPoint(textRange, range, commonAncestor, start) {\n    var cursorNode = dom.create(range.ownerDocument, \"a\"),\n        cursor = textRange.duplicate(),\n        comparison = start ? \"StartToStart\" : \"StartToEnd\",\n        result, parent, target,\n        previous, next,\n        args, index,\n        appended = false;\n\n    cursorNode.innerHTML = \"\\ufeff\";\n    cursor.collapse(start);\n\n    parent = cursor.parentElement();\n\n    if (!dom.isAncestorOrSelf(commonAncestor, parent)) {\n        parent = commonAncestor;\n    }\n\n    // detect range end points\n    // insert cursorNode within the textRange parent and move the cursor until it gets outside of the textRange\n    do {\n        if (appended) {\n            parent.insertBefore(cursorNode, cursorNode.previousSibling);\n        } else {\n            parent.appendChild(cursorNode);\n            appended = true;\n        }\n        cursor.moveToElementText(cursorNode);\n    } while ((result = cursor.compareEndPoints(comparison, textRange)) > 0 && cursorNode.previousSibling);\n\n    target = cursorNode.nextSibling;\n\n    if (result == -1 && isDataNode(target)) {\n        cursor.setEndPoint(start ? \"EndToStart\" : \"EndToEnd\", textRange);\n\n        dom.remove(cursorNode);\n\n        args = [target, cursor.text.length];\n    } else {\n        previous = !start && cursorNode.previousSibling;\n        next = start && cursorNode.nextSibling;\n\n        if (isDataNode(next)) {\n            args = [next, 0];\n        } else if (isDataNode(previous)) {\n            args = [previous, previous.length];\n        } else {\n            index = findNodeIndex(cursorNode);\n\n            if (parent.nextSibling && index == parent.childNodes.length - 1) {\n                args = [parent.nextSibling, 0];\n            } else {\n                args = [parent, index];\n            }\n        }\n\n        dom.remove(cursorNode);\n    }\n\n    range[start ? \"setStart\" : \"setEnd\"](...args);\n}\n\nvar RangeEnumerator = Class.extend({\n    init: function(range) {\n        this.enumerate = function() {\n            var nodes = [];\n\n            function visit(node) {\n                if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                    nodes.push(node);\n                } else {\n                    node = node.firstChild;\n                    while (node) {\n                        visit(node);\n                        node = node.nextSibling;\n                    }\n                }\n            }\n\n            new RangeIterator(range).traverse(visit);\n\n            return nodes;\n        };\n    }\n});\n\nvar ImmutablesRangeIterator = RangeIterator.extend({\n    hasPartialSubtree: function() {\n        var immutable = Editor.Immutables && Editor.Immutables.immutable;\n        return immutable && !immutable(this._current) && RangeIterator.fn.hasPartialSubtree.call(this);\n    },\n\n    getSubtreeIterator: function() {\n        return new ImmutablesRangeIterator(this.getSubRange());\n    }\n});\n\nvar ImmutablesRangeEnumerator = Class.extend({\n    init: function(range) {\n        this.enumerate = function() {\n            var nodes = [];\n            var immutable = Editor.Immutables && Editor.Immutables.immutable;\n            function visit(node) {\n                if (immutable && !immutable(node)) {\n                    if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                        nodes.push(node);\n                    } else {\n                        node = node.firstChild;\n                        while (node) {\n                            visit(node);\n                            node = node.nextSibling;\n                        }\n                    }\n                }\n            }\n\n            new ImmutablesRangeIterator(range).traverse(visit);\n\n            return nodes;\n        };\n    }\n});\n\nvar RestorePoint = Class.extend({\n    init: function(range, body, options) {\n        var that = this;\n        that.range = range;\n        that.rootNode = RangeUtils.documentFromRange(range);\n        that.body = body || that.getEditable(range);\n        if (dom.name(that.body) != \"body\") {\n            that.rootNode = that.body;\n        }\n\n        that.startContainer = that.nodeToPath(range.startContainer);\n        that.endContainer = that.nodeToPath(range.endContainer);\n        that.startOffset = that.offset(range.startContainer, range.startOffset);\n        that.endOffset = that.offset(range.endContainer, range.endOffset);\n\n        that.immutables = options && options.immutables;\n\n        if (that.immutables) {\n            that.serializedImmutables = Editor.Immutables.removeImmutables(that.body);\n        }\n\n        that.html = that.body.innerHTML;\n\n        if (that.immutables && !that.serializedImmutables.empty) {\n            Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n        }\n    },\n\n    index: function(node) {\n        var result = 0,\n            lastType = node.nodeType;\n\n        while (node = node.previousSibling) {\n            var nodeType = node.nodeType;\n\n            if (nodeType != 3 || lastType != nodeType) {\n                result ++;\n            }\n\n            lastType = nodeType;\n        }\n\n        return result;\n    },\n\n    getEditable: function(range) {\n        var root = range.commonAncestorContainer;\n\n        while (root && (root.nodeType == 3 || root.attributes && (!root.attributes.contentEditable || root.attributes.contentEditable.nodeValue.toLowerCase() == \"false\"))) {\n            root = root.parentNode;\n        }\n\n        return root;\n    },\n\n    restoreHtml: function() {\n        var that = this;\n\n        dom.removeChildren(that.body);\n        that.body.innerHTML = that.html;\n        if (that.immutables && !that.serializedImmutables.empty) {\n            Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n        }\n    },\n\n    offset: function(node, value) {\n        if (node.nodeType == 3) {\n            while ((node = node.previousSibling) && node.nodeType == 3) {\n                value += node.nodeValue.length;\n            }\n        }\n\n        return value;\n    },\n\n    nodeToPath: function(node) {\n        var path = [];\n\n        while (node != this.rootNode) {\n            path.push(this.index(node));\n            node = node.parentNode;\n        }\n\n        return path;\n    },\n\n    toRangePoint: function(range, start, path, denormalizedOffset) {\n        var node = this.rootNode,\n            length = path.length,\n            offset = denormalizedOffset;\n\n        while (length-- && node) {\n            node = node.childNodes[path[length]];\n        }\n\n        while (node && node.nodeType == 3 && node.nodeValue.length < offset) {\n            offset -= node.nodeValue.length;\n            node = node.nextSibling;\n        }\n\n        if (node && offset >= 0) {\n            range[start ? 'setStart' : 'setEnd'](node, offset);\n        }\n    },\n\n    toRange: function() {\n        var that = this,\n            result = that.range.cloneRange();\n\n        that.toRangePoint(result, true, that.startContainer, that.startOffset);\n        that.toRangePoint(result, false, that.endContainer, that.endOffset);\n\n        return result;\n    }\n\n});\n\nvar Marker = Class.extend({\n    init: function() {\n        this.caret = null;\n    },\n\n    addCaret: function(range) {\n        var that = this;\n        var caret = that.caret = dom.create(RangeUtils.documentFromRange(range), 'span', { className: 'k-marker' });\n        range.insertNode(caret);\n\n        dom.stripBomNode(caret.previousSibling);\n        dom.stripBomNode(caret.nextSibling);\n\n        range.selectNode(caret);\n        return caret;\n    },\n\n    removeCaret: function(range) {\n        var that = this,\n            previous = that.caret.previousSibling,\n            startOffset = 0;\n\n        if (previous) {\n            startOffset = isDataNode(previous) ? previous.nodeValue.length : findNodeIndex(previous);\n        }\n\n        var container = that.caret.parentNode;\n        var containerIndex = previous ? findNodeIndex(previous) : 0;\n\n        dom.remove(that.caret);\n        normalize(container);\n\n        var node = container.childNodes[containerIndex];\n\n        if (isDataNode(node)) {\n            range.setStart(node, startOffset);\n        } else if (node) {\n            var textNode = dom.lastTextNode(node);\n            if (textNode) {\n                range.setStart(textNode, textNode.nodeValue.length);\n            } else {\n                range[previous ? 'setStartAfter' : 'setStartBefore'](node);\n            }\n        } else {\n            if (!browser.msie && !container.innerHTML) {\n                container.innerHTML = '<br _moz_dirty=\"\" />';\n            }\n\n            range.selectNodeContents(container);\n        }\n        range.collapse(true);\n    },\n\n    add: function(range, expand) {\n        var that = this;\n\n        var collapsed = range.collapsed && !RangeUtils.isExpandable(range);\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (expand && range.collapsed) {\n            that.addCaret(range);\n            range = RangeUtils.expand(range);\n        }\n\n        var rangeBoundary = range.cloneRange();\n\n        rangeBoundary.collapse(false);\n        that.end = dom.create(doc, 'span', { className: 'k-marker' });\n        rangeBoundary.insertNode(that.end);\n\n        rangeBoundary = range.cloneRange();\n        rangeBoundary.collapse(true);\n        that.start = that.end.cloneNode(true);\n        rangeBoundary.insertNode(that.start);\n\n        that._removeDeadMarkers(that.start, that.end);\n\n        if (collapsed) {\n            var bom = doc.createTextNode(\"\\ufeff\");\n            dom.insertAfter(bom.cloneNode(), that.start);\n            dom.insertBefore(bom, that.end);\n        }\n\n        normalize(range.commonAncestorContainer);\n\n        range.setStartBefore(that.start);\n        range.setEndAfter(that.end);\n\n        return range;\n    },\n\n    _removeDeadMarkers: function(start, end) {\n        if (start.previousSibling && start.previousSibling.nodeValue == \"\\ufeff\") {\n            dom.remove(start.previousSibling);\n        }\n\n        if (end.nextSibling && end.nextSibling.nodeValue == \"\\ufeff\") {\n            dom.remove(end.nextSibling);\n        }\n    },\n\n    _normalizedIndex: function(node) {\n        var index = findNodeIndex(node);\n        var pointer = node;\n\n        while (pointer.previousSibling) {\n            if (pointer.nodeType == 3 && pointer.previousSibling.nodeType == 3) {\n                index--;\n            }\n\n            pointer = pointer.previousSibling;\n        }\n\n        return index;\n    },\n\n    remove: function(range) {\n        var that = this,\n            start = that.start,\n            end = that.end,\n            shouldNormalizeStart,\n            shouldNormalizeEnd,\n            shouldNormalize;\n\n        normalize(range.commonAncestorContainer);\n\n        while (!start.nextSibling && start.parentNode) {\n            start = start.parentNode;\n        }\n\n        while (!end.previousSibling && end.parentNode) {\n            end = end.parentNode;\n        }\n\n        // merely accessing the siblings will solve range issues in IE\n        shouldNormalizeStart = (start.previousSibling && start.previousSibling.nodeType == 3) &&\n                               (start.nextSibling && start.nextSibling.nodeType == 3);\n\n        shouldNormalizeEnd = (end.previousSibling && end.previousSibling.nodeType == 3) &&\n                             (end.nextSibling && end.nextSibling.nodeType == 3);\n\n        shouldNormalize = shouldNormalizeStart && shouldNormalizeEnd;\n\n        start = start.nextSibling;\n        end = end.previousSibling;\n\n        var isBomSelected = start === end && dom.isBom(start);\n        if (isBomSelected && start.length > 1) {\n            start.nodeValue = start.nodeValue.charAt(0);\n        }\n\n        var collapsed = isBomSelected;\n        var collapsedToStart = false;\n        // collapsed range\n        if (start == that.end) {\n            collapsedToStart = !!that.start.previousSibling;\n            start = end = that.start.previousSibling || that.end.nextSibling;\n            collapsed = true;\n        }\n\n        dom.remove(that.start);\n        dom.remove(that.end);\n\n        if (!start || !end) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            range.collapse(true);\n            return;\n        }\n\n        var startOffset = collapsed ? isDataNode(start) ? start.nodeValue.length : start.childNodes.length : 0;\n        var endOffset = isDataNode(end) ? end.nodeValue.length : end.childNodes.length;\n\n        if (start.nodeType == 3) {\n            while (start.previousSibling && start.previousSibling.nodeType == 3) {\n                start = start.previousSibling;\n                startOffset += start.nodeValue.length;\n            }\n        }\n\n        if (end.nodeType == 3) {\n            while (end.previousSibling && end.previousSibling.nodeType == 3) {\n                end = end.previousSibling;\n                endOffset += end.nodeValue.length;\n            }\n        }\n\n        var startParent = start.parentNode;\n        var endParent = end.parentNode;\n        var startIndex = this._normalizedIndex(start);\n        var endIndex = this._normalizedIndex(end);\n\n        normalize(startParent);\n        if (start.nodeType == 3) {\n            start = startParent.childNodes[startIndex];\n        }\n\n        normalize(endParent);\n        if (end.nodeType == 3) {\n            end = endParent.childNodes[endIndex];\n        }\n\n        if (collapsed) {\n            if (start.nodeType == 3) {\n                range.setStart(start, startOffset);\n            } else {\n                range[collapsedToStart ? 'setStartAfter' : 'setStartBefore'](start);\n            }\n\n            range.collapse(true);\n\n        } else {\n            if (start.nodeType == 3) {\n                range.setStart(start, startOffset);\n            } else {\n                range.setStartBefore(start);\n            }\n\n            if (end.nodeType == 3) {\n                range.setEnd(end, endOffset);\n            } else {\n                range.setEndAfter(end);\n            }\n        }\n\n        if (that.caret) {\n            that.removeCaret(range);\n        }\n    }\n});\n\nvar boundary = /[\\u0009-\\u000d]|\\u0020|\\u00a0|\\ufeff|\\.|,|;|:|!|\\(|\\)|\\?/;\n\nvar RangeUtils = {\n    nodes: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        if (!nodes.length) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                nodes = dom.significantChildNodes(range.commonAncestorContainer);\n            }\n        }\n        return nodes;\n    },\n\n    textNodes: function(range) {\n        var allNodes = new RangeEnumerator(range).enumerate(),\n            result = allNodes.filter(function(node) {\n                return dom.allowsTextContent(node.parentElement);\n            });\n\n        return result;\n    },\n\n    editableTextNodes: function(range) {\n        var nodes = [],\n            immutableParent = Editor.Immutables && Editor.Immutables.immutableParent,\n            result = [];\n\n        if (immutableParent && !immutableParent(range.commonAncestorContainer)) {\n            nodes = new ImmutablesRangeEnumerator(range).enumerate();\n            result = nodes.filter(function(node) {\n                return dom.allowsTextContent(node.parentElement);\n            });\n        }\n\n        return result;\n    },\n\n    documentFromRange: function(range) {\n        var startContainer = range.startContainer;\n        return startContainer.nodeType == 9 ? startContainer : startContainer.ownerDocument;\n    },\n\n    createRange: function(document) {\n        return document.createRange();\n    },\n\n    selectRange: function(range) {\n        var image = RangeUtils.image(range);\n        if (image) {\n            range.setStartAfter(image);\n            range.setEndAfter(image);\n        }\n        var selection = SelectionUtils.selectionFromRange(range);\n        selection.removeAllRanges();\n        selection.addRange(range);\n    },\n\n    stringify: function(range) {\n        return kendo.format(\n            \"{0}:{1} - {2}:{3}\",\n            dom.name(range.startContainer), range.startOffset,\n            dom.name(range.endContainer), range.endOffset\n        );\n    },\n\n    split: function(range, node, trim) {\n        function partition(start) {\n            var partitionRange = range.cloneRange();\n            partitionRange.collapse(start);\n            partitionRange[start ? 'setStartBefore' : 'setEndAfter'](node);\n            var contents = partitionRange.extractContents();\n            if (trim) {\n                contents = dom.trim(contents);\n            }\n            dom[start ? 'insertBefore' : 'insertAfter'](contents, node);\n        }\n        partition(true);\n        partition(false);\n    },\n\n    mapAll: function(range, map) {\n        var nodes = [];\n\n        new RangeIterator(range).traverse(function(node) {\n            var mapped = map(node);\n\n            if (mapped && $.inArray(mapped, nodes) < 0) {\n                nodes.push(mapped);\n            }\n        });\n\n        return nodes;\n    },\n\n    getAll: function(range, predicate) {\n        var selector = predicate;\n\n        if (typeof predicate == \"string\") {\n            predicate = function(node) {\n                return dom.is(node, selector);\n            };\n        }\n\n        return RangeUtils.mapAll(range, function(node) {\n            if (predicate(node)) {\n                return node;\n            }\n        });\n    },\n\n    getMarkers: function(range) {\n        return RangeUtils.getAll(range, function(node) {\n            return node.className == 'k-marker';\n        });\n    },\n\n    image: function(range) {\n        var nodes = RangeUtils.getAll(range, \"img\");\n\n        if (nodes.length == 1) {\n            return nodes[0];\n        }\n    },\n\n    isStartOf: function(originalRange, node) {\n        if (originalRange.startOffset !== 0) {\n            return false;\n        }\n\n        var range = originalRange.cloneRange();\n\n        while (range.startOffset === 0 && range.startContainer != node) {\n            var index = dom.findNodeIndex(range.startContainer);\n            var parent = range.startContainer.parentNode;\n\n            while (index > 0 && parent[index - 1] && dom.insignificant(parent[index - 1])) {\n                index--;\n            }\n\n            range.setStart(parent, index);\n        }\n\n        return range.startOffset === 0 && range.startContainer == node;\n    },\n\n    isEndOf: function(originalRange, node) {\n        var range = originalRange.cloneRange();\n\n        range.collapse(false);\n\n        var start = range.startContainer;\n\n        if (dom.isDataNode(start) && range.startOffset == dom.getNodeLength(start)) {\n            range.setStart(start.parentNode, dom.findNodeIndex(start) + 1);\n            range.collapse(true);\n        }\n\n        range.setEnd(node, dom.getNodeLength(node));\n\n        var nodes = [];\n\n        function visit(node) {\n            if (!dom.insignificant(node) && !(dom.isDataNode(node) && /^[\\ufeff]*$/.test(node.nodeValue))) {\n                nodes.push(node);\n            }\n        }\n\n        new RangeIterator(range).traverse(visit);\n\n        return !nodes.length;\n    },\n\n    wrapSelectedElements: function(range) {\n        var startEditable = dom.editableParent(range.startContainer);\n        var endEditable = dom.editableParent(range.endContainer);\n\n        while (range.startOffset === 0 && range.startContainer != startEditable) {\n            range.setStart(range.startContainer.parentNode, dom.findNodeIndex(range.startContainer));\n        }\n\n        function isEnd(offset, container) {\n            var length = dom.getNodeLength(container);\n\n            if (offset == length) {\n                return true;\n            }\n\n            for (var i = offset; i < length; i++) {\n                if (!dom.insignificant(container.childNodes[i])) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        while (isEnd(range.endOffset, range.endContainer) && range.endContainer != endEditable) {\n            range.setEnd(range.endContainer.parentNode, dom.findNodeIndex(range.endContainer) + 1);\n        }\n\n        return range;\n    },\n\n    expand: function(range) {\n        var result = range.cloneRange();\n\n        var startContainer = result.startContainer.childNodes[result.startOffset === 0 ? 0 : result.startOffset - 1];\n        var endContainer = result.endContainer.childNodes[result.endOffset];\n\n        if (!isDataNode(startContainer) || !isDataNode(endContainer)) {\n            return result;\n        }\n\n        var beforeCaret = startContainer.nodeValue;\n        var afterCaret = endContainer.nodeValue;\n\n        if (!beforeCaret || !afterCaret) {\n            return result;\n        }\n\n        var startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n        var endOffset = afterCaret.search(boundary);\n\n        if (!startOffset || !endOffset) {\n            return result;\n        }\n\n        endOffset = endOffset == -1 ? afterCaret.length : endOffset;\n        startOffset = startOffset == -1 ? 0 : beforeCaret.length - startOffset;\n\n        result.setStart(startContainer, startOffset);\n        result.setEnd(endContainer, endOffset);\n\n        return result;\n    },\n\n    isExpandable: function(range) {\n        var node = range.startContainer;\n        var rangeDocument = RangeUtils.documentFromRange(range);\n\n        if (node == rangeDocument || node == rangeDocument.body) {\n            return false;\n        }\n\n        var result = range.cloneRange();\n\n        var value = node.nodeValue;\n        if (!value) {\n            return false;\n        }\n\n        var beforeCaret = value.substring(0, result.startOffset);\n        var afterCaret = value.substring(result.startOffset);\n\n        var startOffset = 0, endOffset = 0;\n\n        if (beforeCaret) {\n            startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n        }\n\n        if (afterCaret) {\n            endOffset = afterCaret.search(boundary);\n        }\n\n        return startOffset && endOffset;\n    }\n};\n\nextend(Editor, {\n    SelectionUtils: SelectionUtils,\n    W3CRange: W3CRange,\n    RangeIterator: RangeIterator,\n    W3CSelection: W3CSelection,\n    RangeEnumerator: RangeEnumerator,\n    RestorePoint: RestorePoint,\n    Marker: Marker,\n    RangeUtils: RangeUtils\n});\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        template = kendo.template,\n        RangeUtils = Editor.RangeUtils,\n        complexBlocks = [\"ul\", \"ol\", \"tbody\", \"thead\", \"table\"],\n        toolsToBeUpdated = [\n            \"bold\",\n            \"italic\",\n            \"underline\",\n            \"strikethrough\",\n            \"superscript\",\n            \"subscript\",\n            \"forecolor\",\n            \"backcolor\",\n            \"fontname\",\n            \"fontsize\",\n            \"createlink\",\n            \"unlink\",\n            \"autolink\",\n            \"addcolumnleft\",\n            \"addcolumnright\",\n            \"addrowabove\",\n            \"addrowbelow\",\n            \"deleterow\",\n            \"deletecolumn\",\n            \"mergecells\",\n            \"formatting\",\n            \"cleanformatting\" ],\n        IMMUTABALE = \"k-immutable\",\n        IMMUTABALE_MARKER_SELECTOR = \"[\" + IMMUTABALE + \"]\",\n        IMMUTABLE_SELECTOR = \"[contenteditable='false']\";\n\n    var rootCondition = function(node) {\n        return $(node).is(\"body,.k-editor\");\n    };\n\n    var immutable = function(node) {\n        return node.getAttribute && node.getAttribute(\"contenteditable\") == \"false\";\n    };\n\n    var immutableParent = function(node) {\n        return dom.closestBy(node, immutable, rootCondition);\n    };\n\n    var expandImmutablesIn = function(range) {\n        var startImmutableParent = immutableParent(range.startContainer);\n        var endImmutableParent = immutableParent(range.endContainer);\n\n        if (startImmutableParent || endImmutableParent) {\n            if (startImmutableParent) {\n                range.setStartBefore(startImmutableParent);\n            }\n            if (endImmutableParent) {\n                range.setEndAfter(endImmutableParent);\n            }\n        }\n    };\n\n    var immutablesContext = function(range) {\n        if (immutableParent(range.commonAncestorContainer)) {\n            return true;\n        } else if (immutableParent(range.startContainer) || immutableParent(range.endContainer)) {\n            var editableNodes = RangeUtils.editableTextNodes(range);\n            if (editableNodes.length === 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    var randomId = function(length) {\n        var result = '';\n        var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        for (var i = length || 10; i > 0; --i) {\n            result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n        }\n        return result;\n    };\n\n    var removeImmutables = function(root) {\n        var serializedImmutables = { empty: true }, nodeName, id, serialized;\n         $(root).find(IMMUTABLE_SELECTOR).each(function(i, node) {\n            nodeName = dom.name(node);\n            id = randomId();\n            serialized = \"<\" + nodeName + \" \" + IMMUTABALE + \"='\" + id + \"'></\" + nodeName + \">\";\n            serializedImmutables[id] = { node: node, style: $(node).attr(\"style\") };\n            serializedImmutables.empty = false;\n            $(node).replaceWith(serialized);\n        });\n\n        return serializedImmutables;\n    };\n\n    var restoreImmutables = function(root, serializedImmutables) {\n        var id, immutable;\n        $(root).find(IMMUTABALE_MARKER_SELECTOR).each(function(i, node) {\n            id = node.getAttribute(IMMUTABALE);\n            immutable = serializedImmutables[id];\n            $(node).replaceWith(immutable.node);\n            if (immutable.style != $(immutable.node).attr(\"style\")) {\n                $(immutable.node).removeAttr(\"style\").attr(\"style\", immutable.style);\n            }\n        });\n    };\n\n    var deletingKey = function(keyCode) {\n        var keys = kendo.keys;\n        return keyCode === keys.BACKSPACE || keyCode == keys.DELETE;\n    };\n    var updateToolOptions = function(tool) {\n        var options = tool ? tool.options : undefined$1;\n        if (options && options.finder) {\n            options.finder._initOptions({ immutables: true });\n        }\n    };\n\n    var Immutables = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n            this.serializedImmutables = {};\n            this.options = $.extend({}, editor && editor.options && editor.options.immutables);\n\n            var tools = kendo.ui.Editor.defaultTools;\n            updateToolOptions(tools.justifyLeft);\n            updateToolOptions(tools.justifyCenter);\n            updateToolOptions(tools.justifyRight);\n            updateToolOptions(tools.justifyFull);\n        },\n\n        serialize: function(node) {\n            var result = this._toHtml(node),\n                id;\n\n            if (result.indexOf(IMMUTABALE) === -1) {\n                id = this.randomId();\n                result = result.replace(/>/, ' ' + IMMUTABALE + '=\"' + id + '\">');\n            } else {\n                id = result.match(/k-immutable\\s*=\\s*['\"](.*)['\"]/)[1];\n            }\n\n            this.serializedImmutables[id] = node;\n            return result;\n        },\n\n        _toHtml: function(node) {\n            var serialization = this.options.serialization;\n            var serializationType = typeof serialization;\n            var nodeName;\n\n            switch (serializationType) {\n                case \"string\":\n                    return template(serialization)(node);\n                case \"function\":\n                    return serialization(node);\n                default:\n                    nodeName = dom.name(node);\n                    return \"<\" + nodeName + \"></\" + nodeName + \">\";\n            }\n        },\n\n        deserialize: function(node) {\n            var that = this;\n            var deserialization = this.options.deserialization;\n\n            $(IMMUTABALE_MARKER_SELECTOR, node).each(function() {\n                var id = this.getAttribute(IMMUTABALE);\n                var immutable = that.serializedImmutables[id];\n                if (kendo.isFunction(deserialization)) {\n                    deserialization(this, immutable);\n                }\n                $(this).replaceWith(immutable);\n            });\n\n            that.serializedImmutables = {};\n        },\n\n        randomId: function(length) {\n            return randomId(length);\n        },\n\n        keydown: function(e, range) {\n            var isDeleting = deletingKey(e.keyCode);\n            var shouldCancelEvent = (isDeleting && this._cancelDeleting(e, range)) ||\n                (!isDeleting && this._cancelTyping(e, range));\n\n            if (shouldCancelEvent) {\n                e.preventDefault();\n                return true;\n            }\n        },\n\n        _cancelTyping: function(e, range) {\n            var editor = this.editor;\n            var keyboard = editor.keyboard;\n\n            return range.collapsed && !keyboard.typingInProgress &&\n                keyboard.isTypingKey(e) && immutablesContext(range);\n        },\n\n        _cancelDeleting: function(e, range) {\n            var keys = kendo.keys;\n            var backspace = e.keyCode === keys.BACKSPACE;\n            var del = e.keyCode == keys.DELETE;\n\n            if (!backspace && !del) {\n                return false;\n            }\n            var cancelDeleting = false;\n            if (range.collapsed) {\n                if (immutablesContext(range)) {\n                    return true;\n                }\n                var immutable = this.nextImmutable(range, del);\n                if (immutable && backspace) {\n                    var closestSelectionLi = dom.closest(range.commonAncestorContainer, \"li\");\n                    if (closestSelectionLi) {\n                        var closestImmutableLi = dom.closest(immutable, \"li\");\n                        if (closestImmutableLi && closestImmutableLi !== closestSelectionLi) {\n                            return cancelDeleting;\n                        }\n                    }\n                }\n                if (immutable && !dom.tableCell(immutable)) {\n                    if (dom.parentOfType(immutable, complexBlocks) === dom.parentOfType(range.commonAncestorContainer, complexBlocks)) {\n                        while (immutable && immutable.parentNode.childNodes.length == 1) {\n                            immutable = immutable.parentNode;\n                        }\n                        if (dom.tableCell(immutable)) {\n                            return cancelDeleting;\n                        }\n                        this._removeImmutable(immutable, range);\n                    }\n                    cancelDeleting = true;\n                }\n            }\n            return cancelDeleting;\n        },\n\n        nextImmutable: function(range, forwards) {\n            var commonContainer = range.commonAncestorContainer;\n            if (dom.isBom(commonContainer) || ((forwards && RangeUtils.isEndOf(range, commonContainer)) || (!forwards && RangeUtils.isStartOf(range, commonContainer)))) {\n                var next = this._nextNode(commonContainer, forwards);\n                if (next && dom.isBlock(next) && !immutableParent(next)) {\n                    while (next && next.children && next.children[forwards ? 0 : next.children.length - 1]) {\n                        next = next.children[forwards ? 0 : next.children.length - 1];\n                    }\n                }\n                return immutableParent(next);\n            }\n        },\n\n        _removeImmutable: function(immutable, range) {\n            var editor = this.editor;\n            var startRestorePoint = new Editor.RestorePoint(range, editor.body);\n            dom.remove(immutable);\n            Editor._finishUpdate(editor, startRestorePoint);\n        },\n\n        _nextNode: function(node, forwards) {\n            var sibling = forwards ? \"nextSibling\" : \"previousSibling\";\n            var current = node, next;\n            while (current && !next && !dom.isChildOfBaseContainer(current)) {\n                next = current[sibling];\n                if (next && dom.isDataNode(next) && /^\\s|[\\ufeff]$/.test(next.nodeValue)) {\n                    current = next;\n                    next = current[sibling];\n                }\n                if (!next) {\n                    current = current.parentNode;\n                }\n            }\n            return next;\n        }\n    });\n\n    Immutables.immutable = immutable;\n    Immutables.immutableParent = immutableParent;\n    Immutables.expandImmutablesIn = expandImmutablesIn;\n    Immutables.immutablesContext = immutablesContext;\n    Immutables.toolsToBeUpdated = toolsToBeUpdated;\n    Immutables.removeImmutables = removeImmutables;\n    Immutables.restoreImmutables = restoreImmutables;\n\n    Editor.Immutables = Immutables;\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        editorNS = kendo.ui.editor,\n        dom = editorNS.Dom,\n        RestorePoint = editorNS.RestorePoint,\n        Marker = editorNS.Marker,\n        extend = $.extend;\n\nfunction finishUpdate(editor, startRestorePoint) {\n    var endRestorePoint = editor.selectionRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n    var command = new GenericCommand(startRestorePoint, endRestorePoint);\n    command.editor = editor;\n\n    editor.undoRedoStack.push(command);\n    editor._refreshTools();\n\n    return endRestorePoint;\n}\n\nvar Command = Class.extend({\n    init: function(options) {\n        this.options = options;\n        this.restorePoint = new RestorePoint(options.range, options.body, { immutables: options.immutables });\n        this.marker = new Marker();\n        this.formatter = options.formatter;\n    },\n\n    getRange: function() {\n        return this.restorePoint.toRange();\n    },\n\n    lockRange: function(expand) {\n        return this.marker.add(this.getRange(), expand);\n    },\n\n    releaseRange: function(range) {\n        this.marker.remove(range);\n        this.editor.selectRange(range);\n    },\n\n    undo: function() {\n        var point = this.restorePoint;\n        point.restoreHtml();\n        this.editor.selectRange(point.toRange());\n    },\n\n    redo: function() {\n        this.exec();\n    },\n\n    createDialog: function(content, options) {\n        var editor = this.editor;\n\n        return $(content).appendTo(document.body)\n            .kendoWindow(extend({}, editor.options.dialogOptions, options))\n            .closest(\".k-window\")\n            .addClass(\"k-editor-window\")\n            .toggleClass(\"k-rtl\", kendo.support.isRtl(editor.wrapper)).end();\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        this.formatter.editor = this.editor;\n        this.formatter.toggle(range);\n        this.releaseRange(range);\n    },\n\n    postExec: function() {\n        this.editor._handleSpaceAndNewLines();\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    expandImmutablesIn: function(range) {\n        if (this.immutables()) {\n            kendo.ui.editor.Immutables.expandImmutablesIn(range);\n            this.restorePoint = new RestorePoint(range, this.editor.body);\n        }\n    },\n\n    _actionButtonsTemplate: function({ messages, insertButtonIcon, cancelButtonIcon }) {\n        return '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n        kendo.html.renderButton(`<button class=\"k-dialog-insert\">${messages.dialogInsert}</button>`, { themeColor: \"primary\", icon: insertButtonIcon }) +\n        kendo.html.renderButton(`<button class=\"k-dialog-close\">${messages.dialogCancel}</button>`, { icon: cancelButtonIcon }) +\n    '</div>';\n    }\n});\n\nvar GenericCommand = Class.extend({\n    init: function(startRestorePoint, endRestorePoint) {\n        this.body = startRestorePoint.body;\n        this.startRestorePoint = startRestorePoint;\n        this.endRestorePoint = endRestorePoint;\n    },\n\n    redo: function() {\n        dom.removeChildren(this.body);\n\n        this.body.innerHTML = this.endRestorePoint.html;\n        this.editor.selectRange(this.endRestorePoint.toRange());\n    },\n\n    undo: function() {\n        dom.removeChildren(this.body);\n\n        this.body.innerHTML = this.startRestorePoint.html;\n        this.editor.selectRange(this.startRestorePoint.toRange());\n    }\n});\n\nextend(editorNS, {\n    _finishUpdate: finishUpdate,\n    Command: Command,\n    GenericCommand: GenericCommand\n});\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    dom = Editor.Dom;\n\nvar ViewHtmlCommand = Command.extend({\n    init: function(options) {\n        var cmd = this;\n        cmd.options = options;\n        Command.fn.init.call(cmd, options);\n        cmd.attributes = null;\n        cmd.async = true;\n    },\n\n    exec: function() {\n        var that = this,\n            editor = that.editor,\n            options = editor.options,\n            messages = editor.options.messages,\n            dialog = $(kendo.template(ViewHtmlCommand.template)(messages)).appendTo(document.body),\n            textarea = \".k-editor-textarea > textarea\",\n            content, comments;\n\n        options.serialization.immutables = editor.immutables;\n\n        comments = dom.getAllComments(editor.body);\n\n        content = EditorUtils.cacheComments(editor.value(), comments);\n        content = ViewHtmlCommand.indent(content);\n        content = EditorUtils.retrieveComments(content, comments);\n\n        options.serialization.immutables = undefined$1;\n\n        function apply(e) {\n            options.deserialization.immutables = editor.immutables;\n            editor.value(dialog.find(textarea).val());\n            options.deserialization.immutables = undefined$1;\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            editor.trigger(\"change\");\n        }\n\n        function close(e) {\n            e.preventDefault();\n\n            dialog.data(\"kendoWindow\").destroy();\n\n            if (editor.immutables) {\n                editor.immutables.serializedImmutables = {};\n            }\n\n            editor.focus();\n        }\n\n        let window = this.createDialog(dialog, {\n            title: messages.viewHtml,\n            _footerTemplate: ViewHtmlCommand._footerTemplate,\n            _footerMessages: messages,\n            width: 600,\n            height: 400,\n            resizable: true,\n            close: close,\n            visible: false\n        })\n            .find(textarea).val(content).end()\n            .data(\"kendoWindow\");\n\n            window.center().open();\n\n            window.wrapper.find(\".k-dialog-update\").on(\"click\", apply).end();\n            window.wrapper.find(\".k-dialog-close\").on(\"click\", close).end();\n        dialog.find(textarea).trigger(\"focus\");\n    }\n});\n\nextend(ViewHtmlCommand, {\n    template: () =>\n    '<div class=\"k-editor-dialog k-popup-edit-form k-viewhtml-dialog\">' +\n        '<span class=\"k-input k-textarea k-input-solid k-input-md k-rounded-md k-editor-textarea\"><textarea class=\"k-input-inner !k-overflow-auto !k-resize-none\"></textarea></span>' +\n    '</div>',\n    _footerTemplate: ({ dialogUpdate, dialogCancel }) =>\n    `<div class=\"k-actions k-actions-start k-actions-horizontal k-window-actions\">` +\n        kendo.html.renderButton(`<button class=\"k-dialog-update\">${kendo.htmlEncode(dialogUpdate)}</button>`, { themeColor: \"primary\", icon: \"check\" }) +\n        kendo.html.renderButton(`<button class=\"k-dialog-close\">${kendo.htmlEncode(dialogCancel)}</button>`, { icon: \"cancel-outline\" }) +\n    `</div>`,\n    indent: function(content) {\n        return content.replace(/<\\/(p|li|ul|ol|h[1-6]|table|tr|td|th)>/ig, \"</$1>\\n\")\n                      .replace(/<(ul|ol)([^>]*)><li/ig, \"<$1$2>\\n<li\")\n                      .replace(/<br \\/>/ig, \"<br />\\n\")\n                      .replace(/\\n$/, \"\");\n    }\n});\n\nkendo.ui.editor.ViewHtmlCommand = ViewHtmlCommand;\n\nEditor.EditorUtils.registerTool(\"viewHtml\", new Tool({ command: ViewHtmlCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    Command = Editor.Command,\n    EditorUtils = Editor.EditorUtils;\n\nvar FormatCommand = Command.extend({\n    init: function(options) {\n        options.formatter = options.formatter();\n        var finder = options.formatter.finder;\n        if (finder && EditorUtils.formatByName(\"immutable\", finder.format)) {\n            finder._initOptions({ immutables: options.immutables });\n            options.finder && options.finder._initOptions({ immutables: options.immutables });\n        }\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar FormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        var that = this;\n\n        return new FormatCommand(extend(commandArguments, {\n            formatter: that.options.formatter,\n            finder: that.options.finder\n        }));\n    },\n\n    update: function(ui, nodes) {\n        var isFormatted = this.options.finder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (toolbar && ui.getKendoToggleButton()) {\n            toolbar.toggle(ui, isFormatted);\n        }\n    }\n});\n\n$.extend(Editor, {\n    FormatCommand: FormatCommand,\n    FormatTool: FormatTool\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    Editor = kendo.ui.editor,\n    formats = kendo.ui.Editor.fn.options.formats,\n    Tool = Editor.Tool,\n    FormatTool = Editor.FormatTool,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    extend = $.extend,\n    registerTool = Editor.EditorUtils.registerTool,\n    registerFormat = Editor.EditorUtils.registerFormat,\n    MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n    KEYDOWN_NS = \"keydown.kendoEditor\",\n    KMARKER = \"k-marker\";\n\nvar InlineFormatFinder = Class.extend({\n    init: function(format) {\n        this.format = format;\n    },\n\n    numberOfSiblings: function(referenceNode) {\n        var textNodesCount = 0,\n            elementNodesCount = 0,\n            markerCount = 0,\n            parentNode = referenceNode.parentNode,\n            node;\n\n        for (node = parentNode.firstChild; node; node = node.nextSibling) {\n            if (node != referenceNode) {\n                if (node.className == KMARKER) {\n                    markerCount++;\n                } else if (node.nodeType == 3) {\n                    textNodesCount++;\n                } else {\n                    elementNodesCount++;\n                }\n            }\n        }\n\n        if (markerCount > 1 && parentNode.firstChild.className == KMARKER && parentNode.lastChild.className == KMARKER) {\n            // full node selection\n            return 0;\n        } else {\n            return elementNodesCount + textNodesCount;\n        }\n    },\n\n    findSuitable: function(sourceNode, skip) {\n        if (!skip && this.numberOfSiblings(sourceNode) > 0) {\n            return null;\n        }\n\n        var node = sourceNode.parentNode;\n        var tags = this.format[0].tags;\n\n        while (!dom.ofType(node, tags)) {\n            if (this.numberOfSiblings(node) > 0) {\n                return null;\n            }\n\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    findFormat: function(sourceNode) {\n        var format = this.format,\n            attrEquals = dom.attrEquals,\n            i, len, node, tags, attributes;\n\n        for (i = 0, len = format.length; i < len; i++) {\n            node = sourceNode;\n            tags = format[i].tags;\n            attributes = format[i].attr;\n\n            if (node && dom.ofType(node, tags) && attrEquals(node, attributes)) {\n                return node;\n            }\n\n            while (node) {\n                node = dom.parentOfType(node, tags);\n                if (node && attrEquals(node, attributes)) {\n                    return node;\n                }\n            }\n        }\n\n        return null;\n    },\n\n    isFormatted: function(nodes) {\n        var i, len;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            if (this.findFormat(nodes[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n});\n\nvar InlineFormatter = Class.extend({\n    init: function(format, values) {\n        this.finder = new InlineFormatFinder(format);\n        this.attributes = extend({}, format[0].attr, values);\n        this.tag = format[0].tags[0];\n    },\n\n    wrap: function(node) {\n        return dom.wrap(node, dom.create(node.ownerDocument, this.tag, this.attributes));\n    },\n\n    activate: function(range, nodes) {\n        if (this.finder.isFormatted(nodes)) {\n            this.split(range);\n            this.remove(nodes);\n        } else {\n            this.apply(nodes);\n        }\n    },\n\n    toggle: function(range) {\n        var textNodes = this.immutables() ? RangeUtils.editableTextNodes : RangeUtils.textNodes;\n        var nodes = textNodes(range);\n\n        if (nodes.length > 0) {\n            this.activate(range, nodes);\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    apply: function(nodes) {\n        var formatNodes = [];\n        var i, l, node, formatNode;\n\n        if (nodes.length > 1) {\n            for (i = 0, l = nodes.length; i < l; i++) {\n                node = nodes[i];\n                formatNode = this.format(node, true);\n                formatNodes.push(formatNode);\n\n            }\n        } else {\n            node = nodes[0];\n            this.format(node, false);\n        }\n\n        this.consolidate(formatNodes);\n    },\n\n    format: function(node, outerMostInline) {\n        var formatNode = this.finder.findSuitable(node);\n        var attributes = this.attributes;\n        var styleAttr = attributes ? attributes.style || {} : {};\n\n        if (formatNode) {\n            if (dom.is(formatNode, \"font\")) {\n                if (styleAttr.color) {\n                    formatNode.removeAttribute(\"color\");\n                }\n                if (styleAttr.fontName) {\n                    formatNode.removeAttribute(\"face\");\n                }\n                if (styleAttr.fontSize) {\n                    formatNode.removeAttribute(\"size\");\n                }\n            }\n            dom.attr(formatNode, attributes);\n        } else {\n            if (outerMostInline) {\n                while (!dom.isBlock(node.parentNode) && node.parentNode.childNodes.length == 1 && node.parentNode.contentEditable !== 'true') {\n                    node = node.parentNode;\n                }\n            }\n\n            formatNode = this.wrap(node);\n        }\n\n        return formatNode;\n    },\n\n    remove: function(nodes) {\n        var i, l, formatNode;\n\n        for (i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n            if (formatNode) {\n                if (this.attributes && this.attributes.style) {\n                    dom.unstyle(formatNode, this.attributes.style);\n                    if (!formatNode.style.cssText && !formatNode.attributes[\"class\"]) {\n                        dom.unwrap(formatNode);\n                    }\n                } else {\n                    dom.unwrap(formatNode);\n                }\n            }\n        }\n    },\n\n    split: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        var l = nodes.length;\n        var i, formatNode;\n\n        if (l > 0) {\n            for (i = 0; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    RangeUtils.split(range, formatNode, true);\n                }\n            }\n        }\n    },\n\n    consolidate: function(nodes) {\n        var node, last;\n\n        while (nodes.length > 1) {\n            node = nodes.pop();\n            last = nodes[nodes.length - 1];\n\n            if (node.previousSibling && node.previousSibling.className == KMARKER) {\n                last.appendChild(node.previousSibling);\n            }\n\n            if (node.tagName == last.tagName &&\n                node.previousSibling == last &&\n                node.style.cssText == last.style.cssText &&\n                node.className === last.className) {\n\n                while (node.firstChild) {\n                    last.appendChild(node.firstChild);\n                }\n\n                dom.remove(node);\n            }\n        }\n    }\n});\n\nvar GreedyInlineFormatFinder = InlineFormatFinder.extend({\n    init: function(format, greedyProperty, fontAttr, defaultValue) {\n        this.format = format;\n        this.greedyProperty = greedyProperty;\n        this.fontAttr = fontAttr;\n        this.defaultValue = defaultValue;\n        InlineFormatFinder.fn.init.call(this, format);\n    },\n\n    getInlineCssValue: function(node) {\n        var attributes = node.attributes;\n        var trim = kendo.trim;\n        var i, l, attribute, name, attributeValue, css, pair, cssIndex, len;\n        var propertyAndValue, property, value;\n\n        if (!attributes) {\n            return;\n        }\n\n        for (i = 0, l = attributes.length; i < l; i++) {\n            attribute = attributes[i];\n            name = attribute.nodeName;\n            attributeValue = attribute.nodeValue;\n\n            if (attribute.specified && name == \"style\") {\n\n                css = trim(attributeValue || node.style.cssText).split(\";\");\n\n                for (cssIndex = 0, len = css.length; cssIndex < len; cssIndex++) {\n                    pair = css[cssIndex];\n                    if (pair.length) {\n                        propertyAndValue = pair.split(\":\");\n                        property = trim(propertyAndValue[0].toLowerCase());\n                        value = trim(propertyAndValue[1]);\n\n                        if (property != this.greedyProperty) {\n                            continue;\n                        }\n\n                        return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n                    }\n                }\n            }\n\n            if (this.fontAttr && attribute.specified && name == this.fontAttr) {\n                property = attribute.nodeValue;\n                value = attribute.nodeValue;\n\n                return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n            }\n        }\n    },\n\n    getFormatInner: function(node) {\n        var $node = $(dom.isDataNode(node) ? node.parentNode : node);\n        var parents = $node.parentsUntil(\"[contentEditable]\").addBack().toArray().reverse();\n        var i, len, value;\n\n        for (i = 0, len = parents.length; i < len; i++) {\n            value = this.greedyProperty == \"className\" ? parents[i].className : this.getInlineCssValue(parents[i]);\n\n            if (value) {\n                return value;\n            }\n        }\n\n        return this.defaultValue || \"inherit\";\n    },\n\n    getFormat: function(nodes) {\n        var result = this.getFormatInner(nodes[0]), i, len;\n\n        for (i = 1, len = nodes.length; i < len; i++) {\n            if (result != this.getFormatInner(nodes[i])) {\n                return \"\";\n            }\n        }\n\n        return result;\n    },\n\n    isFormatted: function(nodes) {\n        return this.getFormat(nodes) !== \"\";\n    }\n});\n\nvar GreedyInlineFormatter = InlineFormatter.extend({\n    init: function(format, values, greedyProperty) {\n        InlineFormatter.fn.init.call(this, format, values);\n\n        this.values = values;\n        this.finder = new GreedyInlineFormatFinder(format, greedyProperty);\n\n        if (greedyProperty) {\n            this.greedyProperty = kendo.toCamelCase(greedyProperty);\n        }\n\n    },\n\n    activate: function(range, nodes) {\n        var greedyProperty = this.greedyProperty;\n        var action = \"apply\";\n\n        this.split(range);\n\n        if (greedyProperty && this.values.style[greedyProperty] == \"inherit\") {\n            action = \"remove\";\n        }\n\n        this[action](nodes);\n    }\n});\n\nvar InlineFormatTool = FormatTool.extend({\n    init: function(options) {\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new InlineFormatFinder(options.format),\n            formatter: function() { return new InlineFormatter(options.format); }\n        }));\n    }\n});\n\nvar DelayedExecutionTool = Tool.extend({\n    update: function(ui, nodes) {\n        var list = ui.data(this.type);\n\n        list.close();\n        list.value(this.finder.getFormat(nodes));\n    }\n});\n\nvar FontTool = DelayedExecutionTool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        // IE has single selection hence we are using select box instead of combobox\n        this.type = \"kendoComboBox\";\n        this.format = [{ tags: [\"span\", \"font\"] }];\n        this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr);\n    },\n\n    command: function(commandArguments) {\n        var options = this.options,\n            format = this.format,\n            style = {};\n\n        return new Editor.FormatCommand(extend(commandArguments, {\n            formatter: function() {\n                style[options.domAttr] = commandArguments.value;\n\n                return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n            }\n        }));\n    },\n\n    initialize: function(ui, editor) {\n        var options = this.options,\n            toolName = options.name,\n            dataSource,\n            range,\n            widget = ui.data(\"kendoComboBox\"),\n            defaultValue = [];\n\n        if (!widget) {\n            return;\n        }\n\n        if (options.defaultValue) {\n           defaultValue = [{\n                text: editor.options.messages[options.defaultValue[0].text],\n                value: options.defaultValue[0].value\n           }];\n        }\n\n        dataSource = defaultValue.concat(options.items ? options.items : (editor.options[toolName] || [] ));\n        widget.setDataSource(dataSource);\n\n        widget.bind(\"change\", (e) => {\n            editor._range = range;\n            if (e.sender.value() !== \"\") {\n                Tool.exec(editor, toolName, e.sender.value());\n            }\n        });\n\n        widget.bind(\"close\", () => {\n            setTimeout(function() {\n                editor._deleteSavedRange();\n            },0);\n        });\n\n        widget.value(\"inherit\");\n\n        widget.wrapper.on(MOUSEDOWN_NS, \".k-select,.k-input-button,.k-input\", function() {\n            var newRange = editor.getRange();\n            range = editor._containsRange(newRange) ? newRange : range;\n        })\n        .on(KEYDOWN_NS, function(e) {\n            if (e.keyCode === kendo.keys.ENTER) {\n                editor._deleteSavedRange();\n                e.preventDefault();\n            }\n        });\n    }\n\n});\n\nvar ColorTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        this.format = [{ tags: [\"span\",\"font\"] }];\n        this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr);\n    },\n\n    options: {\n        palette: \"websafe\",\n        columns: 18\n    },\n\n    update: function() {\n        this._widget.close();\n    },\n\n    command: function(commandArguments) {\n        var options = this.options,\n            format = this.format,\n            style = {};\n\n        return new Editor.FormatCommand(extend(commandArguments, {\n            formatter: function() {\n                style[options.domAttr] = commandArguments.value;\n\n                return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n            }\n        }));\n    },\n\n    initialize: function(ui, editor) {\n        var that = this,\n            toolName = that.options.name,\n            component = this._widget = ui.getKendoColorPicker();\n\n        if (!component) {\n            return;\n        }\n\n        component.bind(\"change\", () => {\n            var color = component.value();\n\n            if (color) {\n                Tool.exec(editor, toolName, color);\n            }\n\n            delete that.storedRange;\n            delete that._inputFocused;\n\n            editor.focus();\n        });\n\n        component.bind(\"open\", () => {\n            that.storedRange = editor.getRange();\n\n            component._popup.element.on(MOUSEDOWN_NS, function(e) {\n                if (!$(e.target).is(\"input.k-color-value\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if (!component._popup.element.is(\"[unselectable='on']\")) {\n                component._popup.element\n                    .attr({ unselectable: \"on\" })\n                    .find(\"*:not(input)\").attr(\"unselectable\", \"on\")\n                    .end().find(\"input\").on(\"focus\", function() {\n                        that._inputFocused = true;\n                    });\n            }\n\n            component._popup.one(\"activate\", () => {\n                component._popup.element.find(\".k-colorpalette\").trigger(\"focus\");\n            });\n        });\n\n        component.bind(\"close\", (e) => {\n            component._popup.element.off(MOUSEDOWN_NS);\n        });\n\n        component.unbind(\"activate\").bind(\"activate\", (e) => {\n            if (!component._value || component._value.toCssRgba() === \"rgba(255, 255, 255, 0)\") {\n                return;\n            }\n\n            component.trigger(\"change\");\n        });\n\n        component.wrapper\n            .attr({ unselectable: \"on\" })\n            .find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n\n        component.value(\"transparent\");\n    }\n});\n\nextend(Editor, {\n    InlineFormatFinder: InlineFormatFinder,\n    InlineFormatter: InlineFormatter,\n    DelayedExecutionTool: DelayedExecutionTool,\n    GreedyInlineFormatFinder: GreedyInlineFormatFinder,\n    GreedyInlineFormatter: GreedyInlineFormatter,\n    InlineFormatTool: InlineFormatTool,\n    FontTool: FontTool,\n    ColorTool: ColorTool\n});\n\nregisterFormat(\"bold\", [ { tags: [\"strong\", \"b\"] }, { tags: [\"span\"], attr: { style: { fontWeight: \"bold\" } } } ]);\nregisterTool(\"bold\", new InlineFormatTool({\n    key: \"B\",\n    ctrl: true,\n    format: formats.bold,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"italic\", [ { tags: [\"em\", \"i\"] }, { tags: [\"span\"], attr: { style: { fontStyle: \"italic\" } } } ]);\nregisterTool(\"italic\", new InlineFormatTool({\n    key: \"I\",\n    ctrl: true,\n    format: formats.italic,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"underline\", [ { tags: [\"span\"], attr: { style: { textDecoration: \"underline\" } } }, { tags: [\"u\"] } ]);\nregisterTool(\"underline\", new InlineFormatTool({\n    key: \"U\",\n    ctrl: true,\n    format: formats.underline,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"strikethrough\", [ { tags: [\"del\", \"strike\"] }, { tags: [\"span\"], attr: { style: { textDecoration: \"line-through\" } } } ]);\nregisterTool(\"strikethrough\", new InlineFormatTool({\n    format: formats.strikethrough,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"superscript\", [ { tags: [\"sup\"] } ]);\nregisterTool(\"superscript\", new InlineFormatTool({\n    format: formats.superscript,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"subscript\", [ { tags: [\"sub\"] } ]);\nregisterTool(\"subscript\", new InlineFormatTool({\n    format: formats.subscript,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterTool(\"foreColor\", new ColorTool({\n    cssAttr: \"color\",\n    fontAttr: \"color\",\n    domAttr: \"color\",\n    name: \"foreColor\",\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"ColorPicker\",\n        componentOptions: {\n            views: [\"palette\"],\n            toolIcon: \"foreground-color\",\n            palette: \"websafe\",\n            columns: 18,\n            preview: false,\n            input: false,\n            buttons: false,\n            commandOn: \"change\",\n            closeOnSelect: true\n        }\n    }\n}));\n\nregisterTool(\"backColor\", new ColorTool({\n    cssAttr: \"background-color\",\n    domAttr: \"backgroundColor\",\n    name: \"backColor\",\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"ColorPicker\",\n        componentOptions: {\n            views: [\"palette\"],\n            toolIcon: \"droplet\",\n            palette: \"websafe\",\n            columns: 18,\n            preview: false,\n            input: false,\n            buttons: false,\n            commandOn: \"change\",\n            closeOnSelect: true\n        }\n    }\n}));\n\nregisterTool(\"fontName\", new FontTool({\n    cssAttr: \"font-family\",\n    fontAttr: \"face\",\n    domAttr: \"fontFamily\",\n    name: \"fontName\",\n    defaultValue: [{ text: \"fontNameInherit\", value: \"inherit\" }],\n    ui: {\n        type: \"component\",\n        component: \"ComboBox\",\n        componentOptions: {\n            dataValueField: \"value\",\n            dataTextField: \"text\",\n            valuePrimitive: true\n        },\n        overflow: \"never\"\n    }\n}));\n\nregisterTool(\"fontSize\", new FontTool({\n    cssAttr: \"font-size\",\n    fontAttr: \"size\",\n    domAttr: \"fontSize\",\n    name: \"fontSize\",\n    defaultValue: [{ text: \"fontSizeInherit\", value: \"inherit\" }],\n    ui: {\n        type: \"component\",\n        component: \"ComboBox\",\n        componentOptions: {\n            dataValueField: \"value\",\n            dataTextField: \"text\",\n            valuePrimitive: true\n        },\n        overflow: \"never\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    encode = kendo.htmlEncode,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    InlineFormatter = Editor.InlineFormatter,\n    InlineFormatFinder = Editor.InlineFormatFinder,\n    textNodes = RangeUtils.textNodes,\n    editableTextNodes = RangeUtils.editableTextNodes,\n    registerTool = Editor.EditorUtils.registerTool,\n    keys = kendo.keys;\n\nvar HTTP_PROTOCOL = \"http://\";\nvar protocolRegExp = /^\\w*:\\/\\//;\nvar endLinkCharsRegExp = /[\\w\\/\\$\\-_\\*\\?]/i;\n\nvar LinkFormatFinder = Class.extend({\n    findSuitable: function(sourceNode) {\n        return dom.parentOfType(sourceNode, [\"a\"]);\n    }\n});\n\nvar LinkFormatter = Class.extend({\n    init: function() {\n        this.finder = new LinkFormatFinder();\n    },\n\n    apply: function(range, attributes) {\n        var nodes = this.immutables ? editableTextNodes(range) : textNodes(range);\n        var markers, doc, formatter, a, parent;\n\n        if (attributes.innerText) {\n            doc = RangeUtils.documentFromRange(range);\n            markers = RangeUtils.getMarkers(range);\n\n            range.deleteContents();\n            a = dom.create(doc, \"a\", attributes);\n            range.insertNode(a);\n\n            parent = a.parentNode;\n            if (dom.name(parent) == \"a\") {\n                dom.insertAfter(a, parent);\n            }\n\n            if (dom.emptyNode(parent)) {\n                dom.remove(parent);\n            }\n\n            // move range and markers after inserted link\n            var ref = a;\n            for (var i = 0; i < markers.length; i++) {\n                dom.insertAfter(markers[i], ref);\n                ref = markers[i];\n            }\n\n            if (markers.length) {\n                dom.insertBefore(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                dom.insertAfter(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                range.setStartBefore(markers[0]);\n                range.setEndAfter(markers[markers.length - 1]);\n            }\n        } else {\n            formatter = new InlineFormatter([{ tags: [\"a\"] }], attributes);\n            formatter.finder = this.finder;\n            formatter.apply(nodes);\n        }\n    }\n});\n\nvar UnlinkCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = /** @ignore */ {\n            toggle: function(range) {\n                var nodes = that.immutables() ? editableTextNodes(range) : textNodes(range);\n                new InlineFormatter([{ tags: [\"a\"] }]).remove(nodes);\n            }\n        };\n        this.options = options;\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar LinkCommand = Command.extend({\n    init: function(options) {\n        var that;\n        this.options = options;\n        Command.fn.init.call(this, options);\n        this.formatter = new LinkFormatter();\n\n        if (!options.url) {\n            this.attributes = null;\n            this.async = true;\n        } else {\n            this.exec = function() {\n                this.formatter.immutables = that && that.immutables();\n                this.formatter.apply(options.range, {\n                    href: options.url,\n                    innerText: options.text || options.url,\n                    target: options.target\n                });\n            };\n        }\n    },\n\n    exec: function() {\n        var messages = this.editor.options.messages;\n        this._initialText = \"\";\n        this._range = this.lockRange(true);\n        this.formatter.immutables = this.immutables();\n\n        var nodes = textNodes(this._range);\n        var a = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null;\n        var img = nodes.length && dom.name(nodes[0]) == \"img\";\n\n        var dialog = this.createDialog(\"<div/>\", {\n            title: messages.createLink,\n            minWidth: 340,\n            close: this._close.bind(this),\n            visible: false\n        }).data(\"kendoWindow\");\n\n        this._form = this._createForm(dialog);\n\n        if (a) {\n            this._range.selectNodeContents(a);\n            nodes = textNodes(this._range);\n        }\n\n        this._initialText = this.linkText(nodes);\n\n        dialog.wrapper\n            .find(\".k-dialog-insert\").on(\"click\", this._apply.bind(this)).end()\n            .find(\".k-dialog-close\").on(\"click\", this._close.bind(this)).end()\n            .find(\".k-form-field input\").on(\"keydown\", this._keydown.bind(this)).end()\n            .find(\"#k-editor-link-url\").val(this.linkUrl(a)).end()\n            .find(\"#k-editor-link-text\").val(this._initialText).end()\n            .find(\"#k-editor-link-title\").val(a ? a.title : \"\").end()\n            .find(\"#k-editor-link-target\").prop(\"checked\", a ? a.target == \"_blank\" : false).end()\n            .find(\".k-editor-link-text-row\").toggle(!img);\n\n        this._dialog = dialog.center().open();\n\n        $(\"#k-editor-link-url\", dialog.element).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-link-url\",\n                    label: encode(messages.linkWebAddress),\n                    title: encode(messages.linkWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-text\",\n                    label: encode(messages.linkText),\n                    title: encode(messages.linkText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-title\",\n                    label: encode(messages.linkToolTip),\n                    title: encode(messages.linkToolTip),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-target\",\n                    editorOptions: {\n                        label: encode(messages.linkOpenInNewWindow)\n                    },\n                    label: \"\",\n                    title: encode(messages.linkOpenInNewWindow),\n                    editor: \"CheckBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        formElement.find(\"#k-editor-link-text\").parents(\".k-form-field\").addClass(\"k-editor-link-text-row\");\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"link\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    },\n\n    _keydown: function(e) {\n        var keys = kendo.keys;\n\n        if (e.keyCode == keys.ENTER) {\n            this._apply(e);\n        } else if (e.keyCode == keys.ESC) {\n            this._close(e);\n        }\n    },\n\n    _apply: function(e) {\n        var element = this._dialog.element;\n        var href = $(\"#k-editor-link-url\", element).val();\n        var title, text, target;\n        var textInput = $(\"#k-editor-link-text\", element);\n\n        if (href && href != HTTP_PROTOCOL) {\n\n            if (href.indexOf(\"@\") > 0 && !/^(\\w+:)|(\\/\\/)/i.test(href)) {\n                href = \"mailto:\" + href;\n            }\n\n            this.attributes = { href: href };\n\n            title = $(\"#k-editor-link-title\", element).val();\n            if (title) {\n                this.attributes.title = title;\n            }\n\n            if (textInput.is(\":visible\")) {\n                text = kendo.trim(textInput.val());\n                if (!text && !this._initialText) {\n                    this.attributes.innerText = href;\n                } else if (text && (text !== this._initialText)) {\n                    this.attributes.innerText = dom.stripBom(text);\n                }\n            }\n\n            target = $(\"#k-editor-link-target\", element).is(\":checked\");\n            this.attributes.target = target ? \"_blank\" : null;\n\n            this.formatter.apply(this._range, this.attributes);\n        }\n\n        this._close(e);\n\n        if (this.change) {\n            this.change();\n        }\n    },\n\n    _close: function(e) {\n        e.preventDefault();\n        this._form.destroy();\n        this._dialog.destroy();\n\n        dom.windowFromDocument(RangeUtils.documentFromRange(this._range)).focus();\n\n        this.releaseRange(this._range);\n    },\n\n    linkUrl: function(anchor) {\n        if (anchor) {\n            // IE < 8 returns absolute url if getAttribute is not used\n            return anchor.getAttribute(\"href\", 2);\n        }\n\n        return HTTP_PROTOCOL;\n    },\n\n    linkText: function(nodes) {\n        var text = \"\";\n        var i;\n\n        for (i = 0; i < nodes.length; i++) {\n            text += nodes[i].nodeValue;\n        }\n\n        return dom.stripBom(text || \"\");\n    },\n\n    redo: function() {\n        var range = this.lockRange(true);\n\n        this.formatter.apply(range, this.attributes);\n        this.releaseRange(range);\n    }\n\n});\n\nvar AutoLinkCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.formatter = new LinkFormatter();\n    },\n\n    exec: function() {\n        var detectedLink = this.detectLink();\n        if (!detectedLink) {\n            return;\n        }\n\n        var range = this.getRange();\n        var linkMarker = new kendo.ui.editor.Marker();\n        var linkRange = range.cloneRange();\n\n        linkRange.setStart(detectedLink.start.node, detectedLink.start.offset);\n        linkRange.setEnd(detectedLink.end.node, detectedLink.end.offset);\n\n        range = this.lockRange();\n        linkMarker.add(linkRange);\n\n        this.formatter.apply(linkRange, {\n            href: this._ensureWebProtocol(detectedLink.text)\n        });\n\n        linkMarker.remove(linkRange);\n        this.releaseRange(range);\n    },\n\n    detectLink: function() {\n        var range = this.getRange();\n        var startNode = range.startContainer;\n        var startOffset = range.startOffset;\n        var prev = startNode.previousSibling;\n        if (!prev && ((dom.isBom(startNode) && !startNode.nextSibling) || (!startOffset && dom.isDataNode(startNode)))) {\n            startNode = startNode.parentNode;\n            startOffset = 0;\n        }\n        var traverser = new LeftDomTextTraverser({\n            node: startNode,\n            offset: startOffset,\n            cancelAtNode: function(node) { return node && dom.name(node) === \"a\"; }\n        });\n\n        var detection = new DomTextLinkDetection(traverser);\n        return detection.detectLink();\n    },\n\n    changesContent: function() {\n        return !!this.detectLink();\n    },\n\n    _ensureWebProtocol: function(linkText) {\n        var hasProtocol = this._hasProtocolPrefix(linkText);\n        return hasProtocol ? linkText : this._prefixWithWebProtocol(linkText);\n    },\n\n    _hasProtocolPrefix: function(linkText) {\n        return protocolRegExp.test(linkText);\n    },\n\n    _prefixWithWebProtocol: function(linkText) {\n        return HTTP_PROTOCOL + linkText;\n    }\n});\n\nvar UnlinkTool = Tool.extend({\n    init: function(options) {\n        this.options = options;\n        this.finder = new InlineFormatFinder([{ tags: [\"a\"] }]);\n\n        Tool.fn.init.call(this, $.extend(options, { command: UnlinkCommand }));\n    },\n\n    update: function(ui, nodes) {\n        var isLink = this.finder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n        if (isLink) {\n            toolbar.enable(ui, true);\n        } else {\n            toolbar.enable(ui, false);\n        }\n    }\n});\n\nvar DomTextLinkDetection = Class.extend({\n    init: function(traverser) {\n        this.traverser = traverser;\n        this.start = DomPos();\n        this.end = DomPos();\n        this.text = \"\";\n    },\n\n    detectLink: function() {\n        var node = this.traverser.node;\n        var offset = this.traverser.offset;\n        if (dom.isDataNode(node)) {\n            var text = node.data.substring(0, offset);\n            if (/\\s{2}$/.test(dom.stripBom(text))) {\n                return;\n            }\n        } else if (offset === 0) {//heuristic for new line\n            var p = dom.closestEditableOfType(node, dom.blockElements);\n            if (p && p.previousSibling) {\n                this.traverser.init({\n                    node: p.previousSibling\n                });\n            }\n        }\n\n        this.traverser.traverse(this._detectEnd.bind(this));\n        if (!this.end.blank()) {\n            this.traverser = this.traverser.clone(this.end);\n            this.traverser.traverse(this._detectStart.bind(this));\n\n            if (!this._isLinkDetected()) {\n                var puntuationOptions = this.traverser.extendOptions(this.start);\n                var puntuationTraverser = new RightDomTextTraverser(puntuationOptions);\n                puntuationTraverser.traverse(this._skipStartPuntuation.bind(this));\n                if (!this._isLinkDetected()) {\n                    this.start = DomPos();\n                }\n            }\n        }\n\n        if (this.start.blank()) {\n            return null;\n        } else {\n            return {\n                start: this.start,\n                end: this.end,\n                text: this.text\n            };\n        }\n    },\n\n    _isLinkDetected: function() {\n        return protocolRegExp.test(this.text) || /^w{3}\\./i.test(this.text);\n    },\n\n    _detectEnd: function(text, node) {\n        var i = lastIndexOfRegExp(text, endLinkCharsRegExp);\n        if (i > -1) {\n            this.end.node = node;\n            this.end.offset = i + 1;\n\n            return false;\n        }\n    },\n\n    _detectStart: function(text, node) {\n        var i = lastIndexOfRegExp(text, /\\s/);\n        var ii = i + 1;\n        this.text = text.substring(ii) + this.text;\n\n        this.start.node = node;\n        this.start.offset = ii;\n\n        if (i > -1) {\n            return false;\n        }\n    },\n\n    _skipStartPuntuation: function(text, node, offset) {\n        var i = indexOfRegExp(text, /\\w/);\n        var ii = i;\n        if (i === -1) {\n            ii = text.length;\n        }\n\n        this.text = this.text.substring(ii);\n        this.start.node = node;\n        this.start.offset = ii + (offset | 0);\n\n        if (i > -1) {\n            return false;\n        }\n    }\n});\n\nfunction lastIndexOfRegExp(str, search) {\n    var i = str.length;\n    while (i-- && !search.test(str[i])) {}\n\n    return i;\n}\nfunction indexOfRegExp(str, search) {\n    var r = search.exec(str);\n\n    return r ? r.index : -1;\n}\n\nvar DomPos = function() {\n    return {\n        node: null,\n        offset: null,\n        blank: function() {\n            return this.node === null && this.offset === null;\n        }\n    };\n};\n\nvar DomTextTraverser = Class.extend({\n    init: function(options) {\n        this.node = options.node;\n        this.offset = options.offset === undefined$1 ? (dom.isDataNode(this.node) && this.node.length) || 0 : options.offset;\n        this.cancelAtNode = options.cancelAtNode || this.cancelAtNode || $.noop;\n    },\n\n    traverse: function(callback) {\n        if (!callback) {\n            return;\n        }\n        this.cancel = false;\n        this._traverse(callback, this.node, this.offset);\n    },\n\n    _traverse: function(callback, node, offset) {\n        if (!node || this.cancel) {\n            return;\n        }\n        if (node.nodeType === 3) {\n            var text = node.data;\n            if (offset !== undefined$1) {\n                text = this.subText(text, offset);\n            }\n            this.cancel = (callback(text, node, offset) === false);\n        }\n        else {\n            var edgeNode = this.edgeNode(node);\n            this.cancel = this.cancel || this.cancelAtNode(edgeNode);\n            return this._traverse(callback, edgeNode);\n        }\n\n        var next = this.next(node);\n        if (!next) {\n            var parent = node.parentNode;\n            while (!next && dom.isInline(parent)) {\n                next = this.next(parent);\n                parent = parent.parentNode;\n            }\n        }\n        this.cancel = this.cancel || this.cancelAtNode(next);\n        this._traverse(callback, next);\n    },\n\n    extendOptions: function(o) {\n        return $.extend({\n            node: this.node,\n            offset: this.offset,\n            cancelAtNode: this.cancelAtNode\n        }, o || {});\n    },\n\n    edgeNode: function(node) {},\n    next: function(node) {},\n    subText: function(text, offset) {}\n\n});\n\nvar LeftDomTextTraverser = DomTextTraverser.extend({\n    subText: function(text, splitIndex) {\n        return text.substring(0, splitIndex);\n    },\n\n    next: function(node) {\n        return node.previousSibling;\n    },\n\n    edgeNode: function(node) {\n        return node.lastChild;\n    },\n\n    clone: function(options) {\n        var o = this.extendOptions(options);\n        return new LeftDomTextTraverser(o);\n    }\n});\n\nvar RightDomTextTraverser = DomTextTraverser.extend({\n    subText: function(text, splitIndex) {\n        return text.substring(splitIndex);\n    },\n\n    next: function(node) {\n        return node.nextSibling;\n    },\n\n    edgeNode: function(node) {\n        return node.firstChild;\n    },\n\n    clone: function(options) {\n        var o = this.extendOptions(options);\n        return new RightDomTextTraverser(o);\n    }\n});\n\nextend(kendo.ui.editor, {\n    LinkFormatFinder: LinkFormatFinder,\n    LinkFormatter: LinkFormatter,\n    UnlinkCommand: UnlinkCommand,\n    LinkCommand: LinkCommand,\n    AutoLinkCommand: AutoLinkCommand,\n    UnlinkTool: UnlinkTool,\n    DomTextLinkDetection: DomTextLinkDetection,\n    LeftDomTextTraverser: LeftDomTextTraverser,\n    RightDomTextTraverser: RightDomTextTraverser\n});\n\nregisterTool(\"createLink\", new Tool({ key: \"K\", ctrl: true, command: LinkCommand }));\nregisterTool(\"unlink\", new UnlinkTool({ key: \"K\", ctrl: true, shift: true, ui: { enable: false } }));\nregisterTool(\"autoLink\", new Tool({ key: [keys.ENTER, keys.SPACEBAR], keyPressCommand: true, command: AutoLinkCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    formats = kendo.ui.Editor.fn.options.formats,\n    dom = Editor.Dom,\n    FormatTool = Editor.FormatTool,\n    EditorUtils = Editor.EditorUtils,\n    registerTool = EditorUtils.registerTool,\n    registerFormat = EditorUtils.registerFormat,\n    RangeUtils = Editor.RangeUtils;\n\nvar BlockFormatFinder = Class.extend({\n    init: function(format) {\n        this.format = format;\n    },\n\n    contains: function(node, children) {\n        var i, len, child;\n\n        for (i = 0, len = children.length; i < len; i++) {\n            child = children[i];\n            if (!child || !dom.isAncestorOrSelf(node, child)) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    findSuitable: function(nodes) {\n        var format = this.format,\n            suitable = [],\n            i, len, candidate;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            for (var f = format.length - 1; f >= 0; f--) {\n                candidate = dom.ofType(nodes[i], format[f].tags) ? nodes[i] : dom.closestEditableOfType(nodes[i], format[f].tags);\n                if (candidate) {\n                    break;\n                }\n            }\n\n            if (!candidate || candidate.contentEditable === 'true') {\n                return [];\n            }\n\n            if ($.inArray(candidate, suitable) < 0) {\n                suitable.push(candidate);\n            }\n        }\n\n        this._resolveListsItems(suitable);\n\n        for (i = 0, len = suitable.length; i < len; i++) {\n            if (this.contains(suitable[i], suitable)) {\n                return [suitable[i]];\n            }\n        }\n\n        return suitable;\n    },\n    _resolveListsItems: function(nodes) {\n        var i, node, wrapper;\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            wrapper = dom.is(node, \"li\") ? node : dom.wrapper(node);\n            wrapper = wrapper && dom.list(wrapper) ? wrapper.children[0] : wrapper;\n            if (dom.is(wrapper, \"li\")) {\n                nodes[i] = wrapper;\n            }\n        }\n    },\n\n    findFormat: function(sourceNode, until) {\n        var format = this.format,\n            i, len, node, tags, attributes;\n        var editableParent = dom.editableParent(sourceNode);\n        var immutables = this.options && this.options.immutables;\n        var ImmutablesNS = Editor.Immutables;\n\n        for (i = 0, len = format.length; i < len; i++) {\n            node = sourceNode;\n            tags = format[i].tags;\n            attributes = format[i].attr;\n\n            if (immutables && tags && tags[0] == \"immutable\") {\n                var immutable = ImmutablesNS.immutableParent(node);\n                if (immutable && dom.attrEquals(immutable, attributes)) {\n                    return node;\n                }\n            }\n\n            while (node && dom.isAncestorOf(editableParent, node)) {\n                if (dom.ofType(node, tags) && dom.attrEquals(node, attributes)) {\n                    return node;\n                }\n\n                if (until && until(node)) {\n                    break;\n                }\n\n                node = node.parentNode;\n            }\n        }\n        return null;\n    },\n\n    getFormat: function(nodes) {\n        var that = this,\n            findFormat = function(node) {\n                    return that.findFormat(dom.isDataNode(node) ? node.parentNode : node);\n                },\n            result = findFormat(nodes[0]),\n            i, len;\n\n        if (!result) {\n            return \"\";\n        }\n\n        for (i = 1, len = nodes.length; i < len; i++) {\n            if (result != findFormat(nodes[i])) {\n                return \"\";\n            }\n        }\n\n        return result.nodeName.toLowerCase();\n    },\n\n    isFormatted: function(nodes, until) {\n        for (var i = 0, len = nodes.length; i < len; i++) {\n            if (!this.findFormat(nodes[i], until)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n});\n\nvar BlockFormatter = Class.extend({\n    init: function(format, values) {\n        this.format = format;\n        this.values = values;\n        this.finder = new BlockFormatFinder(format);\n    },\n\n    wrap: function(tag, attributes, nodes) {\n\n        var commonAncestor = nodes.length == 1 ? dom.blockParentOrBody(nodes[0]) : dom.commonAncestor.apply(null, nodes);\n\n        if (dom.isInline(commonAncestor)) {\n            commonAncestor = dom.blockParentOrBody(commonAncestor);\n        }\n\n        var ancestors = dom.significantChildNodes(commonAncestor),\n            position = dom.findNodeIndex(ancestors[0]),\n            wrapper = dom.create(commonAncestor.ownerDocument, tag, attributes),\n            i, ancestor;\n\n        for (i = 0; i < ancestors.length; i++) {\n            ancestor = ancestors[i];\n            if (dom.isBlock(ancestor)) {\n                dom.attr(ancestor, attributes);\n\n                if (wrapper.childNodes.length) {\n                    dom.insertBefore(wrapper, ancestor);\n                    wrapper = wrapper.cloneNode(false);\n                }\n\n                position = dom.findNodeIndex(ancestor) + 1;\n\n                continue;\n            }\n\n            wrapper.appendChild(ancestor);\n        }\n\n        if (wrapper.firstChild) {\n            dom.insertAt(commonAncestor, wrapper, position);\n        }\n    },\n\n    apply: function(nodes) {\n        var format, values = this.values;\n\n        function attributes(format) {\n            return extend({}, format && format.attr, values);\n        }\n\n        this._handleImmutables(nodes, true);\n\n        var images = dom.filter(\"img\", nodes);\n        var imageFormat = EditorUtils.formatByName(\"img\", this.format);\n        var imageAttributes = attributes(imageFormat);\n        $.each(images, function() {\n            dom.attr(this, imageAttributes);\n        });\n\n        // only images were selected, no need to wrap\n        if (images.length == nodes.length) {\n            return;\n        }\n\n        var nonImages = dom.filter(\"img\", nodes, true);\n        var formatNodes = this.finder.findSuitable(nonImages);\n\n        if (formatNodes.length) {\n            for (var i = 0, len = formatNodes.length; i < len; i++) {\n                format = EditorUtils.formatByName(dom.name(formatNodes[i]), this.format);\n                dom.attr(formatNodes[i], attributes(format));\n            }\n        } else {\n            format = this.format[0];\n            this.wrap(format.tags[0], attributes(format), nonImages);\n        }\n    },\n\n    _handleImmutables: function(nodes, applyFormatting) {\n        if (!this.immutables()) {\n            return;\n        }\n        var immutableFormat = EditorUtils.formatByName(\"immutable\", this.format);\n        if (!immutableFormat) {\n            return;\n        }\n        var ImmutablesNS = Editor.Immutables;\n        var l = nodes.length - 1;\n        for (var i = l; i >= 0; i--) {\n            var immutableParent = ImmutablesNS.immutableParent(nodes[i]);\n            if (!immutableParent) {\n                continue;\n            }\n            if (immutableParent !== nodes[i + 1]) {\n                if (applyFormatting) {\n                    dom.attr(immutableParent, immutableFormat.attr);\n                } else {\n                    dom.unstyle(immutableParent, immutableFormat.attr.style);\n                }\n            }\n            nodes.splice(i, 1);\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    remove: function(nodes) {\n        var i, l, formatNode, namedFormat, name;\n\n        this._handleImmutables(nodes, false);\n\n        for (i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n            if (formatNode) {\n                name = dom.name(formatNode);\n                namedFormat = EditorUtils.formatByName(name, this.format);\n                if (namedFormat.attr.style) {\n                    dom.unstyle(formatNode, namedFormat.attr.style);\n                }\n                if (namedFormat.attr.className) {\n                    dom.removeClass(formatNode, namedFormat.attr.className);\n                }\n            }\n        }\n    },\n\n    toggle: function(range) {\n        var that = this,\n            nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n        if (that.finder.isFormatted(nodes)) {\n            that.remove(nodes);\n        } else {\n            that.apply(nodes);\n        }\n    }\n});\n\nvar GreedyBlockFormatter = Class.extend({\n    init: function(format, values) {\n        var that = this;\n        that.format = format;\n        that.values = values;\n        that.finder = new BlockFormatFinder(format);\n    },\n\n    apply: function(nodes) {\n        var format = this.format;\n        var blocks = dom.blockParents(nodes);\n        var formatTag = format[0].tags[0];\n        var i, len, list, formatter, range;\n        var element;\n        var tagName;\n        var block;\n        var immutalbeParent;\n\n        if (blocks.length) {\n            for (i = 0, len = blocks.length; i < len; i++) {\n                block = blocks[i];\n                immutalbeParent = this.immutables() && Editor.Immutables.immutableParent(block);\n\n                if (!immutalbeParent) {\n                    tagName = dom.name(block);\n\n                    if (tagName == \"li\") {\n                        list = block.parentNode;\n                        formatter = new Editor.ListFormatter(list.nodeName.toLowerCase(), formatTag);\n                        range = this.editor.createRange();\n                        range.selectNode(blocks[i]);\n                        formatter.toggle(range);\n                    } else if (formatTag && (tagName == \"td\" || block.attributes.contentEditable)) {\n                        new BlockFormatter(format, this.values).apply(block.childNodes);\n                    } else {\n                        element = dom.changeTag(block, formatTag);\n                        dom.attr(element, format[0].attr);\n                    }\n                }\n            }\n        } else {\n            var blockFormatter = new BlockFormatter(format, this.values);\n            blockFormatter.editor = this.editor;\n            blockFormatter.apply(nodes);\n        }\n    },\n\n    toggle: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        if (!nodes.length) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                nodes = dom.significantChildNodes(range.commonAncestorContainer);\n            }\n        }\n\n        this.apply(nodes);\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    }\n});\n\nvar BlockFormatTool = FormatTool.extend({ init: function(options) {\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new BlockFormatFinder(options.format),\n            formatter: function() {\n                return new BlockFormatter(options.format);\n            }\n        }));\n    }\n});\n\nextend(Editor, {\n    BlockFormatFinder: BlockFormatFinder,\n    BlockFormatter: BlockFormatter,\n    GreedyBlockFormatter: GreedyBlockFormatter,\n    BlockFormatTool: BlockFormatTool\n});\n\nvar listElements = [\"ul\",\"ol\",\"li\"];\n\nregisterFormat(\"justifyLeft\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"left\" } } },\n    { tags: [\"img\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"left\", listStylePosition: \"\" } } }\n]);\nregisterTool(\"justifyLeft\", new BlockFormatTool({\n    format: formats.justifyLeft,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyCenter\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"center\" } } },\n    { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"center\", listStylePosition: \"inside\" } } }\n]);\nregisterTool(\"justifyCenter\", new BlockFormatTool({\n    format: formats.justifyCenter,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyRight\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"right\" } } },\n    { tags: [\"img\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"right\", listStylePosition: \"inside\" } } }\n]);\nregisterTool(\"justifyRight\", new BlockFormatTool({\n    format: formats.justifyRight,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyFull\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"justify\" } } },\n    { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"justify\", listStylePosition: \"\" } } }\n]);\nregisterTool(\"justifyFull\", new BlockFormatTool({\n    format: formats.justifyFull,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    FormatTool = Editor.FormatTool,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    textNodes = RangeUtils.textNodes,\n    registerTool = Editor.EditorUtils.registerTool;\n\nvar ListFormatFinder = BlockFormatFinder.extend({\n    init: function(options) {\n        this.tag = options.tag;\n        this.attr = options.attr;\n        this.altAttr = options.altAttr;\n\n        var tags = this.tags = [this.tag == 'ul' ? 'ol' : 'ul', this.tag];\n        var format = [{ tags: tags, attr: this.attr }];\n\n        if (this.altAttr) {\n            format.push({\n                tags: tags,\n                attr: this.altAttr\n            });\n        }\n\n        BlockFormatFinder.fn.init.call(this, format);\n    },\n\n    matchesType: function(node) {\n        return dom.attrEquals(node, this.attr) || (this.altAttr && dom.attrEquals(node, this.altAttr));\n    },\n\n    isList: function(node) {\n        return dom.list(node);\n    },\n\n    isFormatted: function(nodes) {\n        var formatNodes = [];\n        var formatNode, i;\n\n        for (i = 0; i < nodes.length; i++) {\n            formatNode = this.findFormat(nodes[i], this.isList);\n\n            if (formatNode && dom.name(formatNode) == this.tag && this.matchesType(formatNode)) {\n                formatNodes.push(formatNode);\n            }\n        }\n\n        if (formatNodes.length < 1) {\n            return false;\n        }\n\n        if (formatNodes.length != nodes.length) {\n            return false;\n        }\n\n        // check if sequential lists are selected\n        for (i = 0; i < formatNodes.length; i++) {\n            if (formatNodes[i].parentNode != formatNode.parentNode) {\n                break;\n            }\n\n            if (formatNodes[i] != formatNode) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    findSuitable: function(nodes) {\n        var candidate = this.findFormat(nodes[0], this.isList);\n\n        if (candidate && dom.name(candidate) == this.tag) {\n            return candidate;\n        }\n\n        return null;\n    }\n\n});\n\nvar ListFormatter = Class.extend({\n    init: function(options, unwrapTag) {\n        var that = this;\n        options = $.isPlainObject(options) ? options : { tag: options, attr: null };\n        that.tag = options.tag;\n        that.attr = options.attr;\n        that.finder = new ListFormatFinder(options);\n        that.unwrapTag = unwrapTag;\n    },\n\n    isList: function(node) {\n        return dom.list(node);\n    },\n\n    immutables: function() {\n        return this.editor && !!this.editor.options.immutables;\n    },\n\n    wrap: function(list, nodes) {\n        var li = dom.create(list.ownerDocument, \"li\"),\n            i, node,\n            isImmutable = this.immutables() ? Editor.Immutables.immutable : $.noop;\n\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n\n            if (dom.is(node, 'li')) {\n                list.appendChild(node);\n                continue;\n            }\n\n            if (this.isList(node)) {\n                while (node.firstChild) {\n                    list.appendChild(node.firstChild);\n                }\n                continue;\n            }\n\n            if (dom.is(node, \"td\")) {\n                while (node.firstChild) {\n                    li.appendChild(node.firstChild);\n                }\n                list.appendChild(li);\n                node.appendChild(list);\n                list = list.cloneNode(false);\n                li = li.cloneNode(false);\n                continue;\n            }\n\n            li.appendChild(node);\n\n            if (dom.isBlock(node)) {\n                list.appendChild(li);\n                if (!isImmutable(node)) {\n                    dom.unwrap(node);\n                }\n                li = li.cloneNode(false);\n            }\n        }\n\n        if (li.firstChild) {\n            list.appendChild(li);\n        }\n    },\n\n    containsAny: function(parent, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (dom.isAncestorOrSelf(parent, nodes[i])) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n\n    suitable: function(candidate, nodes) {\n        if (candidate.className == \"k-marker\") {\n            var sibling = candidate.nextSibling;\n\n            if (sibling && dom.isBlock(sibling)) {\n                return false;\n            }\n\n            sibling = candidate.previousSibling;\n\n            if (sibling && dom.isBlock(sibling)) {\n                return false;\n            }\n        }\n\n        return this.containsAny(candidate, nodes) || dom.isInline(candidate) || candidate.nodeType == 3;\n    },\n\n    _parentLists: function(node) {\n        var editable = dom.closestEditable(node);\n\n        return $(node).parentsUntil(editable, \"ul,ol\");\n    },\n\n    split: function(range) {\n        var nodes = textNodes(range);\n        var start, end, parents;\n\n        if (nodes.length) {\n            start = dom.parentOfType(nodes[0], ['li']);\n            end = dom.parentOfType(nodes[nodes.length - 1], ['li']);\n            range.setStartBefore(start);\n            range.setEndAfter(end);\n\n            for (var i = 0, l = nodes.length; i < l; i++) {\n                var formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    parents = this._parentLists(formatNode);\n                    if (parents.length) {\n                        RangeUtils.split(range, parents.last()[0], true);\n                    } else {\n                        RangeUtils.split(range, formatNode, true);\n                    }\n                }\n            }\n        }\n    },\n\n    merge: function(tag, formatNode) {\n        var prev = formatNode.previousSibling, next;\n\n        while (prev && (prev.className == \"k-marker\" || (prev.nodeType == 3 && dom.isWhitespace(prev)))) {\n            prev = prev.previousSibling;\n        }\n\n        // merge with previous list\n        if (prev && dom.name(prev) == tag && this.finder.matchesType(prev)) {\n            while (formatNode.firstChild) {\n                prev.appendChild(formatNode.firstChild);\n            }\n            dom.remove(formatNode);\n            formatNode = prev;\n        }\n\n        next = formatNode.nextSibling;\n        while (next && (next.className == \"k-marker\" || (next.nodeType == 3 && dom.isWhitespace(next)))) {\n            next = next.nextSibling;\n        }\n\n        // merge with next list\n        if (next && dom.name(next) == tag && this.finder.matchesType(next)) {\n            while (formatNode.lastChild) {\n                next.insertBefore(formatNode.lastChild, next.firstChild);\n            }\n            dom.remove(formatNode);\n        }\n    },\n\n    breakable: function(node) {\n        return (\n            node != node.ownerDocument.body &&\n            !/table|tbody|thead|tr|td/.test(dom.name(node)) &&\n            !node.attributes.contentEditable\n        );\n    },\n\n    findSuitableNode: function(nodes) {\n        var that = this,\n            finder = that.finder,\n            tag = that.tag,\n            formatNode;\n\n        formatNode = finder.findSuitable(nodes);\n\n        if (!formatNode) {\n            // Find the opposite tag\n            finder = new ListFormatFinder({ tag: tag == \"ul\" ? \"ol\" : \"ul\" });\n            formatNode = finder.findSuitable(nodes);\n        }\n\n        if (!formatNode) {\n            // Find the same tag\n            finder = new ListFormatFinder({ tag: tag });\n            formatNode = finder.findSuitable(nodes);\n            formatNode = formatNode && that.finder.matchesType(formatNode) ? null : formatNode;\n        }\n\n\n        return formatNode;\n    },\n\n    applyOnSection: function(section, nodes) {\n        var tag = this.tag;\n        var attr = this.attr;\n        var commonAncestor = dom.closestSplittableParent(nodes);\n\n        var ancestors = [];\n        var formatNode = this.findSuitableNode(nodes);\n\n        var childNodes;\n\n        if (/table|tbody|thead/.test(dom.name(commonAncestor))) {\n            childNodes = $.map(nodes, function(node) {\n                return dom.parentOfType(node, [\"td\"]);\n            });\n        } else {\n            childNodes = dom.significantChildNodes(commonAncestor);\n\n            if ($.grep(childNodes, dom.isBlock).length) {\n                childNodes = $.grep(childNodes, (function(node) {\n                    return this.containsAny(node, nodes);\n                }).bind(this));\n            }\n\n            if (!childNodes.length) {\n                childNodes = nodes;\n            }\n        }\n\n        function pushAncestor() {\n            ancestors.push(this);\n        }\n\n        for (var i = 0; i < childNodes.length; i++) {\n            var child = childNodes[i];\n            var suitable = (!formatNode || !dom.isAncestorOrSelf(formatNode, child)) && this.suitable(child, nodes);\n\n            if (!suitable) {\n                continue;\n            }\n\n            if (formatNode && this.isList(child)) {\n                // merging lists\n                $.each(child.children, pushAncestor);\n                dom.remove(child);\n            } else {\n                ancestors.push(child);\n            }\n        }\n\n        if (ancestors.length == childNodes.length && this.breakable(commonAncestor)) {\n            ancestors = [commonAncestor];\n        }\n\n        if (!formatNode) {\n            formatNode = dom.create(commonAncestor.ownerDocument, tag, attr);\n            if (dom.isBlock(ancestors[0])) {\n                dom.mergeAttributes(ancestors[0], formatNode);\n            }\n            dom.insertBefore(formatNode, ancestors[0]);\n        }\n\n        this.wrap(formatNode, ancestors);\n\n        while (dom.isBom(formatNode.nextSibling)) {\n            dom.remove(formatNode.nextSibling);\n        }\n\n        if (!this.finder.matchesType(formatNode)) {\n            formatNode.removeAttribute(\"type\");\n            formatNode.style.listStyleType = \"\";\n            dom.mergeAttributes(dom.create(commonAncestor.ownerDocument, tag, attr), formatNode, true);\n        }\n\n        if (formatNode && formatNode.getAttribute(\"type\") === \"\") {\n            formatNode.removeAttribute(\"type\");\n        }\n\n        if (!dom.is(formatNode, tag)) {\n            dom.changeTag(formatNode, tag);\n        }\n\n        this.merge(tag, formatNode);\n    },\n\n    apply: function(nodes) {\n        var i = 0,\n            sections = [],\n            lastSection,\n            lastNodes,\n            section,\n            node,\n            l = nodes.length,\n            immutableParent = this.immutables() ? Editor.Immutables.immutableParent : $.noop;\n\n        function addLastSection() {\n            if (lastSection) {\n                sections.push({\n                    section: lastSection,\n                    nodes: lastNodes\n                });\n            }\n        }\n\n        // split nodes into sections that need to be different lists\n        for (i = 0; i < l; i++) {\n            node = immutableParent(nodes[i]) || nodes[i];\n            section = dom.closestEditable(node, [\"td\",\"th\",\"body\"]);\n            if (!lastSection || section != lastSection) {\n                addLastSection();\n                lastNodes = [node];\n                lastSection = section;\n            } else {\n                lastNodes.push(node);\n            }\n        }\n\n        addLastSection();\n\n        for (i = 0; i < sections.length; i++) {\n            this.applyOnSection(sections[i].section, sections[i].nodes);\n        }\n    },\n\n    unwrap: function(ul) {\n        var fragment = ul.ownerDocument.createDocumentFragment(),\n            unwrapTag = this.unwrapTag,\n            parents,\n            li,\n            p,\n            child;\n\n        for (li = ul.firstChild; li; li = li.nextSibling) {\n            p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n\n            while (li.firstChild) {\n                child = li.firstChild;\n\n                if (dom.isBlock(child)) {\n\n                    if (p.firstChild) {\n                        fragment.appendChild(p);\n                        p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n                    }\n\n                    fragment.appendChild(child);\n                } else {\n                    p.appendChild(child);\n                }\n            }\n\n            if (p.firstChild) {\n                fragment.appendChild(p);\n            }\n        }\n\n        parents = this._parentLists(ul);\n\n        if (parents[0]) {\n            dom.insertAfter(fragment, parents.last()[0]);\n            parents.last().remove();\n        } else {\n            dom.insertAfter(fragment, ul);\n        }\n\n        dom.remove(ul);\n    },\n\n    remove: function(nodes) {\n        var formatNode;\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n\n            if (formatNode) {\n                this.unwrap(formatNode);\n            }\n        }\n    },\n\n    toggle: function(range) {\n        var that = this,\n            nodes = textNodes(range),\n            ancestor = range.commonAncestorContainer;\n\n        if (!nodes.length) {\n            range.selectNodeContents(ancestor);\n            nodes = textNodes(range);\n            if (!nodes.length) {\n                var text = ancestor.ownerDocument.createTextNode(\"\");\n                range.startContainer.appendChild(text);\n                nodes = [text];\n                range.selectNode(text.parentNode);\n            }\n        }\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        if (that.finder.isFormatted(nodes)) {\n            that.split(range);\n            that.remove(nodes);\n        } else {\n            that.apply(nodes);\n        }\n    }\n\n});\n\nvar ListCommand = Command.extend({\n    init: function(options) {\n        options.formatter = new ListFormatter({ tag: options.tag, attr: options.attr });\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar ListTool = FormatTool.extend({\n    init: function(options) {\n        this.options = options;\n\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new ListFormatFinder(options)\n        }));\n    },\n\n    command: function(commandArguments) {\n        return new ListCommand(extend(commandArguments, { tag: this.options.tag, attr: this.options.attr }));\n    }\n});\n\nextend(Editor, {\n    ListFormatFinder: ListFormatFinder,\n    ListFormatter: ListFormatter,\n    ListCommand: ListCommand,\n    ListTool: ListTool\n});\n\nregisterTool(\"insertUnorderedList\", new ListTool({ tag: 'ul', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertOrderedList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertUpperRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"upper-roman\" } }, altAttr: { type: \"I\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertLowerRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"lower-roman\" } }, altAttr: { type: \"i\" }, ui: { togglable: true, group: \"lists\" } }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    DelayedExecutionTool = Editor.DelayedExecutionTool,\n    Command = Editor.Command,\n    dom = Editor.Dom,\n    EditorUtils = Editor.EditorUtils,\n    RangeUtils = Editor.RangeUtils,\n    registerTool = EditorUtils.registerTool;\n\n\nvar FormattingTool = DelayedExecutionTool.extend({\n    init: function(options) {\n        var that = this;\n        Tool.fn.init.call(that, kendo.deepExtend({}, that.options, options));\n\n        that.type = \"kendoDropDownList\";\n\n        that.finder = {\n            getFormat: function() { return \"\"; }\n        };\n    },\n\n    options: {\n        items: [\n            { text: \"Paragraph\", value: \"p\" },\n            { text: \"Quotation\", value: \"blockquote\" },\n            { text: \"Heading 1\", value: \"h1\" },\n            { text: \"Heading 2\", value: \"h2\" },\n            { text: \"Heading 3\", value: \"h3\" },\n            { text: \"Heading 4\", value: \"h4\" },\n            { text: \"Heading 5\", value: \"h5\" },\n            { text: \"Heading 6\", value: \"h6\" }\n        ],\n        width: 110\n    },\n\n    toFormattingItem: function(item) {\n        var value = item.value;\n\n        if (!value) {\n            return item;\n        }\n\n        if (item.tag || item.className) {\n            return item;\n        }\n\n        var dot = value.indexOf(\".\");\n\n        if (dot === 0) {\n            item.className = value.substring(1);\n        } else if (dot == -1) {\n            item.tag = value;\n        } else {\n            item.tag = value.substring(0, dot);\n            item.className = value.substring(dot + 1);\n        }\n\n        return item;\n    },\n\n    command: function(args) {\n        var that = this;\n        var item = args.value;\n\n        item = this.toFormattingItem(item);\n\n        return new Editor.FormatCommand({\n            range: args.range,\n            formatter: function() {\n                var formatter,\n                    tags = (item.tag || item.context || \"span\").split(\",\"),\n                    format = [{\n                        tags: tags,\n                        attr: { className: item.className || \"\" }\n                    }];\n\n                if ($.inArray(tags[0], dom.inlineElements) >= 0) {\n                    formatter = new Editor.GreedyInlineFormatter(format);\n                } else {\n                    formatter = new Editor.GreedyBlockFormatter(format);\n                }\n\n                formatter.editor = that.editor;\n                return formatter;\n            }\n        });\n    },\n\n    decorate: function(body) {\n        var component = this.component,\n            dataSource = component.dataSource,\n            items = dataSource.data(),\n            i, tag, className, style;\n\n        if (body) {\n            component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n        }\n\n        if (this.component && this.component.options && this.component.options.unsafeInline !== false) {\n            for (i = 0; i < items.length; i++) {\n                tag = items[i].tag || \"span\";\n                className = items[i].className;\n\n                style = dom.inlineStyle(body, tag, { className: className });\n\n                style = style.replace(/\"/g, \"'\");\n\n                items[i].style = style + \";display:inline-block\";\n            }\n        }\n\n        dataSource.trigger(\"change\");\n    },\n\n    initialize: function(ui, editor) {\n        var options = this.options;\n        var toolName = options.name;\n        var that = this;\n        var component = ui.getKendoDropDownList();\n\n        if (!component) {\n            return;\n        }\n\n        that.editor = editor;\n        that.component = component;\n\n        // must be moved to themes\n        ui.closest(\".k-dropdownlist\").width(options.width);\n\n        component.setOptions({\n            optionLabel: editor.options.messages.formatting,\n            change: () => {\n                var dataItem = component.dataItem();\n\n                if (dataItem) {\n                    Tool.exec(editor, toolName, dataItem.toJSON());\n                }\n            },\n            dataBound: function() {\n                var i, items = component.dataSource.data(),\n                    optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n                for (i = 0; i < items.length; i++) {\n                    items[i] = that.toFormattingItem(items[i]);\n                }\n\n                if (optionLabel.length) {\n                    optionLabel.remove();\n                }\n            }\n        });\n    },\n\n    getFormattingValue: function(items, nodes) {\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            var tag = item.tag || item.context || \"\";\n            var className = item.className ? \".\" + item.className : \"\";\n            var selector = tag + className;\n\n            var element = $(nodes[0]).closest(selector)[0];\n\n            if (!element) {\n                continue;\n            }\n\n            if (nodes.length == 1) {\n                return item.value;\n            }\n\n            for (var n = 1; n < nodes.length; n++) {\n                if (!$(nodes[n]).closest(selector)[0]) {\n                    break;\n                } else if (n == nodes.length - 1) {\n                    return item.value;\n                }\n            }\n        }\n\n        return \"\";\n    },\n\n    update: function(ui, nodes) {\n        var selectBox = $(ui).data(this.type);\n        // necessary until formatBlock is deleted\n        if (!selectBox) {\n            return;\n        }\n\n        var dataSource = selectBox.dataSource,\n            items = dataSource.data(),\n            i, context,\n            ancestor = dom.commonAncestor.apply(null, nodes);\n\n        if (ancestor != dom.closestEditable(ancestor) && this._ancestor == ancestor) {\n            return;\n        } else {\n            this._ancestor = ancestor;\n        }\n\n        for (i = 0; i < items.length; i++) {\n            context = items[i].context;\n\n            items[i].visible = !context || !!$(ancestor).closest(context).length;\n        }\n\n        dataSource.filter([{ field: \"visible\", operator: \"eq\", value: true }]);\n\n        DelayedExecutionTool.fn.update.call(this, ui, nodes);\n\n        selectBox.value(this.getFormattingValue(dataSource.view(), nodes));\n\n        selectBox.wrapper.toggleClass(\"k-disabled\", !dataSource.view().length);\n    },\n\n    destroy: function() {\n        this._ancestor = null;\n    }\n});\n\nvar CleanFormatCommand = Command.extend({\n    exec: function() {\n        var range = this.lockRange(true);\n        this.tagsToClean = this.options.remove || \"strong,em,span,sup,sub,del,b,i,u,font\".split(\",\");\n\n        RangeUtils.wrapSelectedElements(range);\n\n        var nodes = RangeUtils.mapAll(range, function(node) {\n            return node;\n        });\n\n\n        for (var c = nodes.length - 1; c >= 0; c--) {\n            var node = nodes[c];\n            if (!this.immutableParent(node)) {\n                this.clean(node);\n            }\n        }\n\n        this.releaseRange(range);\n    },\n\n    clean: function(node) {\n        if (!node || dom.isMarker(node)) {\n            return;\n        }\n\n        var name = dom.name(node);\n\n        if (name == \"ul\" || name == \"ol\") {\n            var listFormatter = new Editor.ListFormatter(name);\n            var prev = node.previousSibling;\n            var next = node.nextSibling;\n\n            listFormatter.unwrap(node);\n\n            // clean contents\n            for (; prev && prev != next; prev = prev.nextSibling) {\n                this.clean(prev);\n            }\n        } else if (name == \"blockquote\") {\n            dom.changeTag(node, \"p\");\n        } else if (node.nodeType == 1 && !dom.insignificant(node)) {\n            for (var i = node.childNodes.length - 1; i >= 0; i--) {\n                this.clean(node.childNodes[i]);\n            }\n\n            node.removeAttribute(\"style\");\n            node.removeAttribute(\"class\");\n        } else {\n            unwrapListItem(node);\n        }\n\n        if ($.inArray(name, this.tagsToClean) > -1) {\n            dom.unwrap(node);\n        }\n    },\n\n    immutableParent: function(node) {\n        return this.immutables() && Editor.Immutables.immutableParent(node);\n    }\n});\n\n\nfunction unwrapListItem(node) {\n    var li = dom.closestEditableOfType(node, [\"li\"]);\n    if (li) {\n        var listFormatter = new Editor.ListFormatter(dom.name(li.parentNode));\n        var range = kendo.ui.editor.W3CRange.fromNode(node);\n        range.selectNode(li);\n        listFormatter.toggle(range);\n    }\n}\n\n$.extend(Editor, {\n    FormattingTool: FormattingTool,\n    CleanFormatCommand: CleanFormatCommand\n});\n\nregisterTool(\"formatting\", new FormattingTool({\n    ui: {\n        type: \"component\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            highlightFirst: false,\n            autoWidth: true,\n            template: kendo.template(\n                (data) => `<span unselectable=\"on\" ${data.style ? `class=\"k-d-block\" style=\"display:block;${data.style || \"\"}` : \"\"}\">${kendo.htmlEncode(data.text)}</span>`\n            )\n        },\n        overflow: \"never\"\n    }\n}));\n\nregisterTool(\"cleanFormatting\", new Tool({ command: CleanFormatCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    encode = kendo.htmlEncode,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    keys = kendo.keys,\n    KEDITORIMAGEURL = \"#k-editor-image-url\",\n    KEDITORIMAGETITLE = \"#k-editor-image-title\",\n    KEDITORIMAGEWIDTH = \"#k-editor-image-width\",\n    KEDITORIMAGEHEIGHT = \"#k-editor-image-height\";\n\nvar ImageCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        Command.fn.init.call(that, options);\n\n        that.async = true;\n        that.attributes = {};\n    },\n\n    insertImage: function(img, range) {\n        var attributes = this.attributes;\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (attributes.src && attributes.src != \"http://\") {\n\n            var removeIEAttributes = function() {\n                setTimeout(function() {\n                    if (!attributes.width) {\n                        img.removeAttribute(\"width\");\n                    }\n\n                    if (!attributes.height) {\n                        img.removeAttribute(\"height\");\n                    }\n\n                    img.removeAttribute(\"complete\");\n                });\n            };\n\n            if (!img) {\n                img = dom.create(doc, \"img\", attributes);\n                img.onload = img.onerror = removeIEAttributes;\n\n                range.deleteContents();\n                range.insertNode(img);\n\n                if (!img.nextSibling) {\n                    dom.insertAfter(doc.createTextNode(\"\\ufeff\"), img);\n                }\n\n                removeIEAttributes();\n\n                range.setStartAfter(img);\n                range.setEndAfter(img);\n                RangeUtils.selectRange(range);\n                return true;\n            } else {\n                img.onload = img.onerror = removeIEAttributes;\n                dom.attr(img, attributes);\n                removeIEAttributes();\n            }\n        }\n\n        return false;\n    },\n\n    redo: function() {\n        var that = this,\n            range = that.lockRange();\n\n        if (!that.insertImage(RangeUtils.image(range), range)) {\n            that.releaseRange(range);\n        }\n    },\n\n    exec: function() {\n        var that = this,\n            range = that.lockRange(),\n            applied = false,\n            img = RangeUtils.image(range),\n            imageWidth = img && img.getAttribute(\"width\") || \"\",\n            imageHeight = img && img.getAttribute(\"height\") || \"\",\n            dialog,\n            form,\n            isIE = kendo.support.browser.msie,\n            options = that.editor.options,\n            messages = options.messages,\n            imageBrowser = options.imageBrowser,\n            showBrowser = !!(kendo.ui.ImageBrowser && imageBrowser && imageBrowser.transport && imageBrowser.transport.read !== undefined$1),\n            dialogOptions = {\n                title: messages.insertImage,\n                visible: false,\n                resizable: showBrowser\n            };\n\n        this.expandImmutablesIn(range);\n\n        function apply(e) {\n            var element = dialog.element,\n                w = parseInt(element.find(KEDITORIMAGEWIDTH).val(), 10),\n                h = parseInt(element.find(KEDITORIMAGEHEIGHT).val(), 10);\n\n            that.attributes = {\n                src: element.find(KEDITORIMAGEURL).val().replace(/ /g, \"%20\"),\n                alt: element.find(KEDITORIMAGETITLE).val()\n            };\n\n            that.attributes.width = null;\n            that.attributes.height = null;\n\n            if (!isNaN(w) && w > 0) {\n                that.attributes.width = w;\n            }\n\n            if (!isNaN(h) && h > 0) {\n                that.attributes.height = h;\n            }\n\n            applied = that.insertImage(img, range);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            that.editor._handleSpaceAndNewLines();\n        }\n\n        function close(e) {\n            e.preventDefault();\n            form.destroy();\n            dialog.destroy();\n\n            dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n            if (!applied) {\n                that.releaseRange(range);\n            }\n        }\n\n        function keyDown(e) {\n            if (e.keyCode == keys.ENTER) {\n                apply(e);\n            } else if (e.keyCode == keys.ESC) {\n                close(e);\n            }\n        }\n\n        dialogOptions.close = close;\n\n        if (showBrowser) {\n            dialogOptions.width = 750;\n        }\n        dialogOptions.minWidth = 350;\n\n        dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n\n        form = that._createForm(dialog, showBrowser);\n\n        dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n        dialog.wrapper\n        .find(\".k-dialog-insert\").on(\"click\", apply).end()\n        .find(\".k-dialog-close\").on(\"click\", close).end()\n        .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n        // IE < 8 returns absolute url if getAttribute is not used\n        .find(KEDITORIMAGEURL).val(img ? img.getAttribute(\"src\", 2) : \"http://\").end()\n        .find(KEDITORIMAGETITLE).val(img ? img.alt : \"\").end()\n        .find(KEDITORIMAGEWIDTH).val(imageWidth).end()\n        .find(KEDITORIMAGEHEIGHT).val(imageHeight).end();\n\n        var element = dialog.element;\n        if (showBrowser) {\n            this._imageBrowser = new kendo.ui.ImageBrowser(\n                element.find(\".k-imagebrowser\"),\n                extend({}, imageBrowser)\n            );\n\n            this._imageBrowser.bind(\"change\", function(ev) {\n                if (ev.selected.get(\"type\") === \"f\") {\n                    element.find(KEDITORIMAGEURL).val(this.value());\n                }\n            });\n\n            this._imageBrowser.bind(\"apply\", apply);\n        }\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n        dialog.center().open();\n        element.find(KEDITORIMAGEURL).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog, showBrowser) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-image-url\",\n                    label: encode(messages.imageWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-title\",\n                    label: encode(messages.imageAltText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-width\",\n                    label: encode(messages.imageWidth),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-height\",\n                    label: encode(messages.imageHeight),\n                    editor: \"TextBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        if (showBrowser) {\n            formElement.prepend($('<div class=\"k-filebrowser k-imagebrowser\"></div>'));\n        }\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"image-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    }\n\n});\n\nkendo.ui.editor.ImageCommand = ImageCommand;\n\nregisterTool(\"insertImage\", new Editor.Tool({ command: ImageCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    registerTool = EditorUtils.registerTool,\n    loadingOverlay = '<div contenteditable=\"false\" class=\"k-loading-mask\" style=\"width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;\"><div class=\"k-loading-image\"></div><div class=\"k-loading-color\"></div></div>';\n\nvar ImportCommand = Command.extend({\n    exec: function() {\n        (this.editor._uploadWidget || this._initializeUploadWidget()).element.click();\n    },\n\n    _initializeUploadWidget: function() {\n        var cmd = this;\n        var editor = cmd.editor;\n        var importOptions = editor.options[\"import\"];\n        var upload = $('<input id=\"editorImport\" name=\"files\" type=\"file\" />').kendoUpload({\n            success: cmd._onUploadSuccess.bind(cmd),\n            progress: cmd._onUploadProgress.bind(cmd),\n            select: cmd._onUploadSelect.bind(cmd),\n            error: cmd._onUploadError.bind(cmd),\n            complete: cmd._onUploadComplete.bind(cmd),\n            showFileList: false,\n            multiple: false,\n            async: {\n                saveUrl: importOptions.proxyURL,\n                autoUpload: true,\n                saveField: \"file\"\n            },\n            validation: {\n                allowedExtensions: importOptions.allowedExtensions,\n                maxFileSize: importOptions.maxFileSize\n            }\n        }).getKendoUpload();\n\n        editor._uploadWidget = upload;\n\n        return upload;\n    },\n    _onUploadComplete: function(ev) {\n        this._trigger(\"complete\", ev);\n        ev.sender.clearAllFiles();\n\n        this._removeLoadingOverlay();\n    },\n    _onUploadSuccess: function(ev) {\n        this.editor.value(ev.response.html.replace(/<\\/?body>/ig, \"\"));\n        this._trigger(\"success\", ev);\n    },\n    _onUploadProgress: function(ev) {\n        this._trigger(\"progress\", ev);\n    },\n    _onUploadSelect: function(ev) {\n        this._trigger(\"select\", ev);\n        if (!ev.files[0].validationErrors) {\n            this._initLoadingOverlay();\n        }\n    },\n    _onUploadError: function(ev) {\n        this._trigger(\"error\", ev);\n    },\n\n    _trigger: function(eventType, uploadEvent) {\n        var editor = this.editor;\n        var importOptions = editor.options[\"import\"];\n        if (typeof importOptions[eventType] === \"function\") {\n            importOptions[eventType].call(editor, uploadEvent);\n        }\n    },\n\n    _initLoadingOverlay: function() {\n        var editable = this.editor.body;\n        if (Editor.Dom.is(editable, \"body\")) {\n            this._iframeWrapper = this._container =\n                this.editor.wrapper.find(\"iframe\").parent()\n                .css({ position: \"relative\" }).append(loadingOverlay);\n        } else {\n            this._container = $(editable).append(loadingOverlay);\n        }\n\n        kendo.ui.progress(this._container, true);\n    },\n\n    _removeLoadingOverlay: function() {\n        kendo.ui.progress(this._container, false);\n        $(this._iframeWrapper).css({\n            position: \"\"\n        });\n\n        delete this._container;\n        delete this._iframeWrapper;\n    }\n});\n\nextend(Editor, {\n    ImportCommand: ImportCommand\n});\n\nregisterTool(\"import\", new Tool({\n    command: ImportCommand,\n    ui: {\n        showText: \"both\"\n    }\n}));\n\n}(window.kendo.jQuery));\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        GenericCommand = editorNS.GenericCommand,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        RestorePoint = editorNS.RestorePoint,\n        extend = $.extend;\n\nvar InsertHtmlCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.managesUndoRedo = true;\n    },\n\n    exec: function() {\n        var editor = this.editor;\n        var options = this.options;\n        var range = options.range;\n        var body = editor.body;\n        var startRestorePoint = new RestorePoint(range, body);\n        var html = options.html || options.value || '';\n\n        editor.selectRange(range);\n\n        editor.clipboard.paste(html, options);\n\n        if (options.postProcess) {\n            options.postProcess(editor, editor.getRange());\n        }\n\n        var genericCommand = new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange(), body));\n        genericCommand.editor = editor;\n        editor.undoRedoStack.push(genericCommand);\n\n        editor.focus();\n    }\n});\n\nvar InsertHtmlTool = Tool.extend({\n    initialize: function(ui, editor) {\n        var options = this.options,\n            dataSource = options.items ? options.items : editor.options.insertHtml,\n            component = ui.getKendoDropDownList();\n\n        if (!component) {\n            return;\n        }\n\n        component.one(\"open\", () => {\n            var optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n            if (optionLabel.length) {\n                optionLabel.remove();\n            }\n        });\n\n        component.setOptions({\n            dataSource: dataSource,\n            optionLabel: editor.options.messages.insertHtml\n        });\n        component.bind(\"change\", () => {\n            Tool.exec(editor, 'insertHtml', component.value());\n        });\n    },\n\n    command: function(commandArguments) {\n        return new InsertHtmlCommand(commandArguments);\n    },\n\n    update: function(ui) {\n        var component = ui.data(\"kendoDropDownList\");\n        component.close();\n        component.value(null);\n    }\n});\n\nextend(editorNS, {\n    InsertHtmlCommand: InsertHtmlCommand,\n    InsertHtmlTool: InsertHtmlTool\n});\n\nregisterTool(\"insertHtml\", new InsertHtmlTool({\n    ui: {\n        initialValue: \"Insert HTML\",\n        type: \"component\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            autoSize: true,\n            highlightFirst: false\n        },\n        overflow: \"never\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    registerTool = EditorUtils.registerTool,\n    defaultExportAsItems = [\n        { text: 'Docx', value: 'docx' },\n        { text: 'Rtf', value: 'rtf' },\n        { text: 'Pdf', value: 'pdf' },\n        { text: 'Html', value: 'html' },\n        { text: 'Plain Text', value: 'txt' }\n    ];\n\nvar ExportAsCommand = Command.extend({\n    init: function(options) {\n        var cmd = this;\n        cmd.options = options;\n        Command.fn.init.call(cmd, options);\n        cmd.attributes = null;\n        cmd.exportType = options.exportType;\n    },\n\n    exec: function() {\n        var cmd = this;\n        var range = this.lockRange(true);\n        cmd.postToProxy();\n        cmd.releaseRange(range);\n    },\n\n    postToProxy: function() {\n        this.generateForm().appendTo('body').submit().remove();\n    },\n\n    generateForm: function() {\n        var cmd = this;\n        var exportAsOptions = cmd.editor.options.exportAs;\n        var form = $('<form>').attr({\n            action: exportAsOptions && exportAsOptions.proxyURL || \"\",\n            method: 'POST'\n        });\n\n        form.append([\n            cmd.valueInput(),\n            cmd.exportTypeInput(),\n            cmd.fileNameInput(),\n            cmd.antiForgeryInput()\n        ]);\n\n        return form;\n    },\n\n    valueInput: function() {\n        var editor = this.editor;\n        return $('<input>').attr({\n            value: editor.encodedValue(),\n            name: 'value',\n            type: 'hidden'\n        });\n    },\n\n    exportTypeInput: function() {\n        var cmd = this;\n        return $('<input>').attr({\n            value: cmd.exportType,\n            name: 'exportType',\n            type: 'hidden'\n        });\n\n    },\n\n    fileNameInput: function() {\n        var editor = this.editor;\n        var exportAsOptions = editor.options.exportAs;\n        var fileName = exportAsOptions && exportAsOptions.fileName || editor.element.attr(\"id\") || \"editor\";\n        return $('<input>').attr({\n            value: fileName,\n            name: 'fileName',\n            type: 'hidden'\n        });\n    },\n\n    antiForgeryInput: function() {\n        var csrf_param = $(\"meta[name=csrf-param],meta[name=_csrf_header]\").attr(\"content\");\n\n        return $(\"input[name^='__RequestVerificationToken']\").clone()\n                    .add($(\"input[name^='\" + csrf_param + \"']\").clone());\n    }\n});\n\nvar ExportAsTool = Tool.extend({\n    init: function(options) {\n        var tool = this;\n        Tool.fn.init.call(tool, kendo.deepExtend({}, tool.options, options));\n        tool.type = 'kendoDropDownList';\n    },\n\n    options: {\n        items: defaultExportAsItems\n    },\n\n    command: function(args) {\n        var value = args.value;\n        return new Editor.ExportAsCommand({\n            range: args.range,\n            exportType: value.exportType\n        });\n    },\n\n    initialize: function(ui, editor) {\n        var tool = this,\n            component = ui.getKendoDropDownList();\n\n        tool.editor = editor;\n\n        component.bind(\"change\", this.changeHandler.bind(this));\n    },\n\n    changeHandler: function(e) {\n        this._exec(e.sender.value());\n        e.sender.value(null);\n        e.sender.wrapper.find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n    },\n\n    update: function(ui, editor) {\n        var component = ui.data(\"kendoDropDownList\");\n\n        component.close();\n        component.value(null);\n        ui.closest(\".k-dropdownlist\").find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n    },\n\n    _exec: function(value) {\n        if (value) {\n            Tool.exec(this.editor, this.options.name, { exportType: value } );\n        }\n    },\n\n    destroy: function() {\n        this._ancestor = null;\n    }\n});\n\nextend(Editor, {\n    ExportAsTool: ExportAsTool,\n    ExportAsCommand: ExportAsCommand\n});\n\nregisterTool('exportAs', new ExportAsTool({\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            valuePrimitive: true,\n            value: null,\n            width: \"140px\",\n            highlightFirst: false,\n            autoWidth: true,\n            itemTemplate: (data) => `<span class=\"k-link k-menu-link\" data-value=\"${data.value}\">${data.text}</strong></span>`,\n            icon: \"export\",\n            valueTemplate: () => `<span class=\"k-editor-export\">${kendo.ui.icon({ icon: \"export\", iconClass: \"k-button-icon\" })}<span class=\"k-export-tool-text\"></span></span>`\n        }\n    }\n}));\n\n}(window.kendo.jQuery));\n\n(function($, undefined$1) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    EditorUtils = Editor.EditorUtils,\n    registerTool = EditorUtils.registerTool,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    RangeUtils = Editor.RangeUtils,\n    blockElements = dom.blockElements,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    BlockFormatter = Editor.BlockFormatter;\n\nfunction indent(node, value) {\n    var isRtl = $(node).css(\"direction\") == \"rtl\",\n        indentDirection = isRtl ? \"Right\" : \"Left\",\n        property = dom.name(node) != \"td\" ? \"margin\" + indentDirection : \"padding\" + indentDirection;\n    if (value === undefined$1) {\n        return node.style[property] || 0;\n    } else if (value > 0) {\n        node.style[property] = value + \"px\";\n    } else {\n        node.style[property] = \"\";\n\n        if (!node.style.cssText) {\n            node.removeAttribute(\"style\");\n        }\n    }\n}\n\nvar IndentFormatter = Class.extend({\n    init: function() {\n        this.finder = new BlockFormatFinder([{ tags: dom.blockElements }]);\n    },\n\n    apply: function(nodes) {\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        var formatNodes = this.finder.findSuitable(nodes),\n            targets = [],\n            i, len, formatNode, parentList, sibling;\n\n        formatNodes = this.mapImmutables(formatNodes);\n\n        if (formatNodes.length) {\n            for (i = 0, len = formatNodes.length; i < len; i++) {\n                if (dom.is(formatNodes[i], \"li\")) {\n                    if (!$(formatNodes[i]).index()) {\n                        targets.push(formatNodes[i].parentNode);\n                    } else if ($.inArray(formatNodes[i].parentNode, targets) < 0) {\n                        targets.push(formatNodes[i]);\n                    }\n                } else {\n                    targets.push(formatNodes[i]);\n                }\n            }\n\n            while (targets.length) {\n                formatNode = targets.shift();\n                if (dom.is(formatNode, \"li\")) {\n                    parentList = formatNode.parentNode;\n                    sibling = $(formatNode).prev(\"li\");\n                    var siblingList = sibling.find(\"ul,ol\").last();\n\n                    var nestedList = $(formatNode).children(\"ul,ol\")[0];\n\n                    if (nestedList && sibling[0]) {\n                        if (siblingList[0]) {\n                           siblingList.append(formatNode);\n                           siblingList.append($(nestedList).children());\n                           dom.remove(nestedList);\n                        } else {\n                            sibling.append(nestedList);\n                            nestedList.insertBefore(formatNode, nestedList.firstChild);\n                        }\n                    } else {\n                        nestedList = sibling.children(\"ul,ol\")[0];\n                        if (!nestedList) {\n                            nestedList = dom.create(formatNode.ownerDocument, dom.name(parentList), this.getListTypeAttr(parentList));\n                            sibling.append(nestedList);\n                        }\n\n                        while (formatNode && formatNode.parentNode == parentList) {\n                            nestedList.appendChild(formatNode);\n                            formatNode = targets.shift();\n                        }\n                    }\n                } else {\n                    var marginLeft = parseInt(indent(formatNode), 10) + 30;\n                    indent(formatNode, marginLeft);\n\n                    for (var targetIndex = 0; targetIndex < targets.length; targetIndex++) {\n                        if ($.contains(formatNode, targets[targetIndex])) {\n                            targets.splice(targetIndex, 1);\n                        }\n                    }\n                }\n            }\n        } else {\n            var formatter = new BlockFormatter([{ tags: [\"p\"] }], { style: { marginLeft: 30 } });\n\n            formatter.apply(nodes);\n        }\n    },\n\n    getListTypeAttr: function(list) {\n        var type = list.getAttribute(\"type\");\n        var styleType = list.style.listStyleType;\n\n        return type ? { type: type } : { style: { listStyleType: styleType } };\n    },\n\n    mapImmutables: function(nodes) {\n        if (!this.immutables) {\n            return nodes;\n        } else {\n            var immutables = [];\n            return $.map(nodes, function(node) {\n                var immutable = Editor.Immutables.immutableParent(node);\n                if (immutable) {\n                    if ($.inArray(immutable, immutables) === -1) {\n                        immutables.push(immutable);\n                    } else {\n                        return null;\n                    }\n                }\n                return immutable || node;\n            });\n        }\n    },\n\n    remove: function(nodes) {\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        var formatNodes = this.finder.findSuitable(nodes),\n            targetNode, i, len, list, listParent, siblings,\n            formatNode, marginLeft;\n\n        formatNodes = this.mapImmutables(formatNodes);\n\n        for (i = 0, len = formatNodes.length; i < len; i++) {\n            formatNode = $(formatNodes[i]);\n\n            if (formatNode.is(\"li\")) {\n                list = formatNode.parent();\n                listParent = list.parent();\n                // listParent will be ul or ol in case of invalid dom - <ul><li></li><ul><li></li></ul></ul>\n                if (listParent.is(\"li,ul,ol\") && !indent(list[0])) {\n                    // skip already processed nodes\n                    if (targetNode && $.contains(targetNode, listParent[0])) {\n                        continue;\n                    }\n\n                    siblings = formatNode.nextAll(\"li\");\n                    if (siblings.length) {\n                        $(list[0].cloneNode(false)).appendTo(formatNode).append(siblings);\n                    }\n\n                    if (listParent.is(\"li\")) {\n                        formatNode.insertAfter(listParent);\n                    } else {\n                        formatNode.appendTo(listParent);\n                    }\n\n                    if (!list.children(\"li\").length) {\n                        list.remove();\n                    }\n\n                    continue;\n                } else {\n                    if (targetNode == list[0]) {\n                        // removing format on sibling LI elements\n                        continue;\n                    }\n                    targetNode = list[0];\n                }\n            } else {\n                targetNode = formatNodes[i];\n            }\n\n            marginLeft = parseInt(indent(targetNode), 10) - 30;\n            indent(targetNode, marginLeft);\n        }\n    }\n\n});\n\nvar IndentCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = /** @ignore */ {\n            toggle: (function(range) {\n                var indentFormatter = new IndentFormatter();\n                indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                indentFormatter.apply(RangeUtils.nodes(range));\n            }).bind(that)\n        };\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar OutdentCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = {\n            toggle: (function(range) {\n                var indentFormatter = new IndentFormatter();\n                indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                indentFormatter.remove(RangeUtils.nodes(range));\n            }).bind(that)\n        };\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar OutdentTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        this.finder = new BlockFormatFinder([{ tags: blockElements }]);\n    },\n\n    initialize: function(ui, editor) {\n        $.extend(this.options, {\n            immutables: editor && editor.options.immutables\n        });\n    },\n\n    update: function(ui, nodes) {\n        var suitableNodes = this.finder.findSuitable(nodes),\n            toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\"),\n            isOutdentable, listParentsCount, i, len, suitable, immutableParent;\n\n        for (i = 0, len = suitableNodes.length; i < len; i++) {\n            suitable = suitableNodes[i];\n\n            if (this.options.immutables) {\n                immutableParent = Editor.Immutables.immutableParent(suitable);\n\n                if (immutableParent) {\n                    suitable = immutableParent;\n                }\n            }\n\n            isOutdentable = indent(suitable);\n\n            if (!isOutdentable) {\n                listParentsCount = $(suitable).parents(\"ul,ol\").length;\n                isOutdentable = (dom.is(suitable, \"li\") && (listParentsCount > 1 || indent(suitable.parentNode))) ||\n                                (dom.ofType(suitable, [\"ul\",\"ol\"]) && listParentsCount > 0);\n            }\n\n            if (isOutdentable) {\n                toolbar.enable(ui, true);\n                return;\n            }\n        }\n\n        toolbar.enable(ui, false);\n    }\n});\n\nextend(Editor, {\n    IndentFormatter: IndentFormatter,\n    IndentCommand: IndentCommand,\n    OutdentCommand: OutdentCommand,\n    OutdentTool: OutdentTool\n});\n\nregisterTool(\"indent\", new Tool({ command: IndentCommand }));\nregisterTool(\"outdent\", new OutdentTool({ command: OutdentCommand, ui: { enable: false } }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    extend = $.extend,\n    editorNS = kendo.ui.editor,\n    dom = editorNS.Dom,\n    Command = editorNS.Command,\n    Tool = editorNS.Tool,\n    BlockFormatter = editorNS.BlockFormatter,\n    normalize = dom.normalize,\n    RangeUtils = editorNS.RangeUtils,\n    registerTool = editorNS.EditorUtils.registerTool;\n\nvar ParagraphCommand = Command.extend({\n    init: function(options) {\n        this.options = options;\n        Command.fn.init.call(this, options);\n    },\n\n    _insertMarker: function(doc, range) {\n        var marker = dom.create(doc, 'a'), container;\n        marker.className = \"k-marker\";\n\n        range.insertNode(marker);\n\n        if (!marker.parentNode) {\n            // inserting paragraph in Firefox full body range\n            container = range.commonAncestorContainer;\n            container.innerHTML = \"\";\n            container.appendChild(marker);\n        }\n\n        normalize(marker.parentNode);\n\n        return marker;\n    },\n\n    _moveFocus: function(range, candidate) {\n        if (dom.isEmpty(candidate)) {\n            range.setStartBefore(candidate);\n        } else {\n            range.selectNodeContents(candidate);\n\n            var focusNode = RangeUtils.textNodes(range)[0];\n\n            if (!focusNode) {\n                while (candidate.childNodes.length && !dom.is(candidate.firstChild, \"br\")) {\n                    candidate = candidate.firstChild;\n                }\n\n                focusNode = candidate;\n            }\n\n            if (dom.isEmpty(focusNode)) {\n                range.setStartBefore(focusNode);\n            } else {\n                if (dom.emptyNode(focusNode)) {\n                    focusNode.innerHTML = \"\\ufeff\";\n                }\n                var startNode = focusNode.firstChild || focusNode;\n                if (dom.isDataNode(startNode)) {\n                    range.setStart(startNode, 0);\n                } else {\n                    range.setStartBefore(startNode);\n                }\n            }\n        }\n    },\n\n    shouldTrim: function(range) {\n        var blocks = 'p,h1,h2,h3,h4,h5,h6'.split(','),\n            startInBlock = dom.parentOfType(range.startContainer, blocks),\n            endInBlock = dom.parentOfType(range.endContainer, blocks);\n        return (startInBlock && !endInBlock) || (!startInBlock && endInBlock);\n    },\n\n    _blankAfter: function(node) {\n        while (node && (dom.isMarker(node) || dom.stripBom(node.nodeValue) === \"\")) {\n            node = node.nextSibling;\n        }\n\n        return !node;\n    },\n\n    exec: function() {\n        const range = this.getRange();\n        const doc = RangeUtils.documentFromRange(range);\n        let parent, previous, next, paragraph, marker, li, heading, tableNode, rng,\n        shouldTrim;\n        const emptyParagraphContent = editorNS.emptyElementContent;\n\n        this.expandImmutablesIn(range);\n\n        shouldTrim = this.shouldTrim(range);\n\n        range.deleteContents();\n        marker = this._insertMarker(doc, range);\n\n        dom.stripBomNode(marker.previousSibling);\n        dom.stripBomNode(marker.nextSibling);\n\n        li = dom.closestEditableOfType(marker, ['li']);\n        heading = dom.closestEditableOfType(marker, 'h1,h2,h3,h4,h5,h6'.split(','));\n        tableNode = dom.is(marker.parentNode, 'table') && marker.parentNode;\n\n        if (li) {\n            // hitting 'enter' in empty li\n            if (dom.emptyNode(li)) {\n                paragraph = dom.create(doc, 'p');\n\n                if (dom.next(li)) {\n                    rng = range.cloneRange();\n                    rng.selectNode(li);\n\n                    RangeUtils.split(rng, li.parentNode);\n                }\n\n                const br = $(\"br\", li);\n                if (br.length == 1) {\n                    br.remove();\n                }\n\n                const parentNode = li.parentNode;\n                const parentChildrenLength = li.parentNode.children.length;\n                const firstChild = parentChildrenLength >= 1 && li.childNodes.length == 1 && li.children[0];\n\n                dom.insertAfter(paragraph, parentNode);\n                dom.remove(parentChildrenLength == 1 ? li.parentNode : li);\n\n                if (firstChild && firstChild !== marker) {\n                    paragraph.appendChild(firstChild);\n                    paragraph.appendChild(marker);\n                } else {\n                    paragraph.innerHTML = emptyParagraphContent;\n                }\n                next = paragraph;\n            }\n        } else if (heading && this._blankAfter(marker)) {\n            paragraph = this._insertParagraphAfter(heading);\n            dom.remove(marker);\n            next = paragraph;\n        } else if (tableNode) {\n            paragraph = this._insertParagraphAfter(tableNode);\n            dom.remove(marker);\n            next = paragraph;\n        }\n\n        if (!next) {\n            if (!(li || heading)) {\n                new BlockFormatter([{ tags: ['p'] }]).apply([marker]);\n            }\n\n            range.selectNode(marker);\n\n            const headingDomName = heading ? dom.name(heading) : 'p';\n            parent = dom.parentOfType(marker, [li ? 'li' : headingDomName]);\n\n            RangeUtils.split(range, parent, shouldTrim);\n\n            previous = parent.previousSibling;\n\n            if (dom.is(previous, 'li') && previous.firstChild && !dom.is(previous.firstChild, 'br')) {\n                previous = previous.firstChild;\n            }\n\n            next = parent.nextSibling;\n\n            this.clean(previous, { links: true });\n            this.clean(next, { links: true });\n\n            if (dom.is(next, 'li') && next.firstChild && !dom.is(next.firstChild, 'br')) {\n                next = next.firstChild;\n            }\n\n            dom.remove(parent);\n\n            // normalize updates the caret display in Gecko\n            normalize(previous);\n        }\n\n        normalize(next);\n\n        this._moveFocus(range, next);\n\n        range.collapse(true);\n\n        dom.scrollTo(next, true);\n\n        RangeUtils.selectRange(range);\n    },\n\n    _insertParagraphAfter: function(node) {\n        var range = this.getRange();\n        var doc = RangeUtils.documentFromRange(range);\n        var emptyElementContent = editorNS.emptyElementContent;\n        var paragraph = dom.create(doc, 'p');\n\n        dom.insertAfter(paragraph, node);\n        paragraph.innerHTML = emptyElementContent;\n\n        return paragraph;\n    },\n\n    clean: function(node, options) {\n        var root = node;\n\n        if (node.firstChild && dom.is(node.firstChild, 'br')) {\n            dom.remove(node.firstChild);\n        }\n\n        if (dom.isDataNode(node) && !node.nodeValue) {\n            node = node.parentNode;\n        }\n\n        if (node) {\n            var siblings = false;\n            while (node.firstChild && node.firstChild.nodeType == 1) {\n                siblings = siblings || (dom.significantNodes(node.childNodes).length > 1);\n                node = node.firstChild;\n            }\n\n            if (!dom.isEmpty(node) && node.className != \"k-br\" && /^\\s*$/.test(node.innerHTML) && !siblings) {\n                $(root).find(\".k-br\").remove();\n                node.innerHTML = editorNS.emptyElementContent;\n            }\n\n            if (options && options.links) {\n                while (node != root) {\n                    if (dom.is(node, \"a\") && dom.emptyNode(node)) {\n                        dom.unwrap(node);\n                        break;\n                    }\n                    node = node.parentNode;\n                }\n            }\n        }\n    }\n});\n\nvar NewLineCommand = Command.extend({\n    init: function(options) {\n        this.options = options;\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.getRange();\n        this.expandImmutablesIn(range);\n\n        var br = dom.create(RangeUtils.documentFromRange(range), 'br');\n        var node = range.startContainer;\n        var filler;\n        var browser = kendo.support.browser;\n        var oldIE = browser.msie && browser.version < 11;\n        var tableNode = dom.is(node, 'table') && node;\n        var kbrParent;\n\n        range.deleteContents();\n        if (tableNode) {\n            dom.insertAfter(br, tableNode);\n        } else {\n            kbrParent = $(node).closest('.k-br');\n            range.insertNode(br);\n\n            if (kbrParent.length) {\n                // pressing enter in an k-br node\n                dom.unwrap(kbrParent[0]);\n            }\n        }\n\n        normalize(br.parentNode);\n\n        if (!oldIE && (!br.nextSibling || dom.isWhitespace(br.nextSibling))) {\n            // Gecko and WebKit cannot put the caret after only one br.\n            if (!!br.nextSibling && dom.isWhitespace(br.nextSibling)) {\n                $(br.nextSibling).remove();\n            }\n            filler = br.cloneNode(true);\n            filler.className = 'k-br';\n            dom.insertAfter(filler, br);\n        }\n\n        range.setStartAfter(br);\n        range.collapse(true);\n\n        dom.scrollTo(br.nextSibling || br, true);\n\n        RangeUtils.selectRange(range);\n    }\n});\n\nextend(editorNS, {\n    ParagraphCommand: ParagraphCommand,\n    NewLineCommand: NewLineCommand\n});\n\nregisterTool(\"insertLineBreak\", new Tool({ key: 13, shift: true, command: NewLineCommand }));\nregisterTool(\"insertParagraph\", new Tool({ key: 13, command: ParagraphCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    encode = kendo.htmlEncode,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    LinkFormatter = Editor.LinkFormatter,\n    textNodes = RangeUtils.textNodes,\n    keys = kendo.keys,\n    KEDITORFILEURL = \"#k-editor-file-url\",\n    KEDITORFILETEXT = \"#k-editor-file-text\",\n    KEDITORFILETITLE = \"#k-editor-file-title\";\n\nvar FileCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        Command.fn.init.call(that, options);\n\n        that.formatter = new LinkFormatter();\n\n        that.async = true;\n        that.attributes = {};\n    },\n\n    insertFile: function(file, range) {\n        var attributes = this.attributes;\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (attributes.href && attributes.href != \"http://\") {\n\n            if (!file) {\n                file = dom.create(doc, \"a\", { href: attributes.href });\n                file.innerHTML = attributes.innerHTML;\n                file.title = attributes.title;\n\n                range.deleteContents();\n                range.insertNode(file);\n\n                if (!file.nextSibling) {\n                    dom.insertAfter(doc.createTextNode(\"\\ufeff\"), file);\n                }\n\n                range.setStartAfter(file);\n                range.setEndAfter(file);\n                RangeUtils.selectRange(range);\n                return true;\n            } else {\n                dom.attr(file, attributes);\n            }\n        }\n\n        return false;\n    },\n\n    redo: function() {\n        var that = this,\n            range = that.lockRange();\n\n        this.formatter.apply(range, this.attributes);\n        that.releaseRange(range);\n    },\n\n    exec: function() {\n        var that = this,\n            range = that.lockRange(),\n            nodes = textNodes(range),\n            applied = false,\n            file = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null,\n            dialog,\n            form,\n            isIE = kendo.support.browser.msie,\n            options = that.editor.options,\n            messages = options.messages,\n            fileBrowser = options.fileBrowser,\n            showBrowser = !!(kendo.ui.FileBrowser && fileBrowser && fileBrowser.transport && fileBrowser.transport.read !== undefined$1),\n            dialogOptions = {\n                title: messages.insertFile,\n                visible: false,\n                resizable: showBrowser\n            };\n\n        this.expandImmutablesIn(range);\n\n        function apply(e) {\n            var element = dialog.element,\n                href = element.find(KEDITORFILEURL).val().replace(/ /g, \"%20\"),\n                innerHTML = element.find(KEDITORFILETEXT).val(),\n                title = element.find(KEDITORFILETITLE).val();\n\n            that.attributes = {\n                href: href,\n                innerHTML: innerHTML !== \"\" ? innerHTML : href,\n                title: title\n            };\n\n            applied = that.insertFile(file, range);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n        }\n\n        function close(e) {\n            e.preventDefault();\n            form.destroy();\n            dialog.destroy();\n\n            dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n            if (!applied) {\n                that.releaseRange(range);\n            }\n        }\n\n        function keyDown(e) {\n            if (e.keyCode == keys.ENTER) {\n                apply(e);\n            } else if (e.keyCode == keys.ESC) {\n                close(e);\n            }\n        }\n\n        dialogOptions.close = close;\n\n        if (showBrowser) {\n            dialogOptions.width = 750;\n        }\n        dialogOptions.minWidth = 350;\n\n        dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n        form = that._createForm(dialog, showBrowser);\n\n        dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n        dialog.wrapper\n        .find(\".k-dialog-insert\").on(\"click\", apply).end()\n        .find(\".k-dialog-close\").on(\"click\", close).end()\n        .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n        // IE < 8 returns absolute url if getAttribute is not used\n        .find(KEDITORFILEURL).val(file ? file.getAttribute(\"href\", 2) : \"http://\").end()\n        .find(KEDITORFILETEXT).val(file ? file.innerText : \"\").end()\n        .find(KEDITORFILETITLE).val(file ? file.title : \"\").end();\n\n        var element = dialog.element;\n        if (showBrowser) {\n            that._fileBrowser = new kendo.ui.FileBrowser(\n                element.find(\".k-filebrowser\"),\n                extend({}, fileBrowser)\n            );\n\n            that._fileBrowser.bind(\"change\", function(ev) {\n                if (ev.selected.get(\"type\") === \"f\") {\n                    element.find(KEDITORFILEURL).val(this.value());\n                }\n            } );\n\n            that._fileBrowser.bind(\"apply\", apply);\n        }\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n        dialog.center().open();\n        element.find(KEDITORFILEURL).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog, showBrowser) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-file-url\",\n                    label: encode(messages.fileWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-file-text\",\n                    label: encode(messages.fileText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-file-title\",\n                    label: encode(messages.fileTitle),\n                    editor: \"TextBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        if (showBrowser) {\n            formElement.prepend($('<div class=\"k-filebrowser\"></div>'));\n        }\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"file-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    }\n\n});\n\nkendo.ui.editor.FileCommand = FileCommand;\n\nregisterTool(\"insertFile\", new Editor.Tool({ command: FileCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n\n    NS = \"kendoEditor\",\n    ACTIVESTATE = \"k-active\",\n    SELECTEDSTATE = \"k-selected\",\n    SCOPE = \"scope\",\n    ROW = \"row\",\n    COL = \"col\",\n    ROWGROUP = \"rowgroup\",\n    COLGROUP = \"colgroup\",\n    COLSPAN = \"colspan\",\n    ROWSPAN = \"rowspan\",\n    TABLE = \"table\",\n    THEAD = \"thead\",\n    TBODY = \"tbody\",\n    TR = \"tr\",\n    TD = \"td\",\n    TH = \"th\",\n\n    Tool = Editor.Tool,\n    InsertHtmlCommand = Editor.InsertHtmlCommand,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    BlockFormatTool = Editor.BlockFormatTool,\n    FormatCommand = Editor.FormatCommand,\n    registerTool = Editor.EditorUtils.registerTool,\n    registerFormat = Editor.EditorUtils.registerFormat,\n    formats = kendo.ui.Editor.fn.options.formats,\n    getTouches = kendo.getTouches;\nvar template = kendo.template;\n\nvar columnTemplate = ({ width, content }) => `<td style=\"width:${width}%;\">${content}</td>`;\n\nvar tableFormatFinder = new BlockFormatFinder([{ tags: [TABLE] }]);\n\nvar TableCommand = InsertHtmlCommand.extend({\n    init: function(options) {\n        var o = $.extend({\n            postProcess: this.postProcess,\n            skipCleaners: true\n        }, options || {});\n\n        InsertHtmlCommand.fn.init.call(this, o);\n    },\n    _tableHtml: function(rows, columns) {\n        rows = rows || 1;\n        columns = columns || 1;\n        var columnHtml = template(columnTemplate)({ width: 100 / columns, content: Editor.emptyTableCellContent });\n        var rowHeight = 100 / rows;\n\n        return \"<table class='k-table' data-last>\" +\n                    new Array(rows + 1).join(\n                    \"<tr style='height:\" + rowHeight + \"%;'>\" +\n                        new Array(columns + 1).join(columnHtml) +\n                    \"</tr>\") +\n               \"</table>\";\n    },\n\n    postProcess: function(editor, range) {\n        var insertedTable = $(\"table[data-last]\", editor.document).removeAttr(\"data-last\");\n\n        range.setStart(insertedTable.find(TD)[0], 0);\n        range.collapse(true);\n\n        editor.selectRange(range);\n    },\n\n    exec: function() {\n        var options = this.options;\n        options.html = this._tableHtml(options.rows, options.columns);\n\n        InsertHtmlCommand.fn.exec.call(this);\n    }\n});\n\nvar PopupTool = Tool.extend({\n    initialize: function(ui, editor) {\n        var that = this;\n        var btn = $(\"<button>\" + editor.options.messages.tableWizard + \"</button>\");\n        var popup = $(this.options.popupTemplate).appendTo(\"body\").kendoPopup({\n            anchor: ui,\n            copyAnchorStyles: false,\n            open: this._open.bind(this),\n            activate: this._activate.bind(this),\n            close: this._close.bind(this)\n        }).data(\"kendoPopup\");\n\n        ui.on(\"click\", this._toggle.bind(this))\n          .on(\"keydown\", this._keydown.bind(this));\n\n        this._editor = editor;\n        this._popup = popup;\n\n        editor.tablePopup = this._popup;\n\n        var tableWizard = new Editor.TableWizardTool({\n            command: Editor.TableWizardCommand,\n            insertNewTable: true\n        });\n\n        registerTool(\"tableWizardInsert\", tableWizard);\n\n        btn.appendTo(popup.element);\n        btn.kendoButton({\n            icon: \"table-wizard\"\n        });\n\n        btn.on(\"click\", () => {\n            that._editor.exec(\"tableWizardInsert\");\n        });\n    },\n\n    popup: function() {\n        return this._popup;\n    },\n\n    _activate: $.noop,\n\n    _open: function() {\n        this._popup.options.anchor.addClass(ACTIVESTATE);\n    },\n\n    _close: function() {\n        this._popup.options.anchor.removeClass(ACTIVESTATE);\n    },\n\n    _keydown: function(e) {\n        var that = this,\n            keys = kendo.keys,\n            key = e.keyCode;\n\n        if (key == keys.ESC) {\n            that._popup.close();\n        } else if (key == keys.DOWN && e.altKey) {\n            that._popup.open();\n            that._setTableSize({ row: 1, col: 1 });\n        } else if (key === keys.ENTER) {\n            setTimeout(() => {\n                that._setTableSize({ row: 1, col: 1 });\n            });\n        }\n    },\n\n    _toggle: function(e) {\n        var button = $(e.target).closest(\".k-tool\");\n\n        if (!button.hasClass(\"k-disabled\")) {\n            this.popup().toggle();\n        }\n    },\n\n    update: function(ui) {\n        var popup = this.popup();\n\n        if (popup.wrapper && popup.wrapper.css(\"display\") == \"block\") {\n            popup.close();\n        }\n\n        ui.removeClass(\"k-hover\");\n    },\n\n    destroy: function() {\n        if (this._popup) {\n            this._popup.destroy();\n        }\n    }\n});\n\nvar InsertTableTool = PopupTool.extend({\n    init: function(options) {\n        this.cols = 8;\n        this.rows = 6;\n\n        PopupTool.fn.init.call(this, $.extend(options, {\n            command: TableCommand,\n            popupTemplate:\n                \"<div class='k-ct-popup'>\" +\n                    \"<div>\" +\n                        new Array(this.cols * this.rows + 1).join(\"<span class='k-ct-cell k-disabled'></span>\") +\n                    \"</div>\" +\n                    \"<div class='k-status'></div>\" +\n                \"</div>\"\n        }));\n    },\n\n    _activate: function() {\n        var that = this,\n            element = that._popup.element,\n            cells = element.find(\".k-ct-cell\"),\n            firstCell = cells.eq(0),\n            lastCell = cells.eq(cells.length - 1),\n            start = kendo.getOffset(firstCell),\n            end = kendo.getOffset(lastCell),\n            cols = that.cols,\n            rows = that.rows,\n            cellWidth, cellHeight;\n\n        element.find(\"*\").addBack().attr(\"unselectable\", \"on\");\n\n        end.left += lastCell[0].offsetWidth;\n        end.top += lastCell[0].offsetHeight;\n\n        cellWidth = (end.left - start.left) / cols;\n        cellHeight = (end.top - start.top) / rows;\n\n        function tableFromLocation(e) {\n            var w = $(window);\n            return {\n                row: Math.floor((e.clientY + w.scrollTop() - start.top) / cellHeight) + 1,\n                col: Math.floor((e.clientX + w.scrollLeft() - start.left) / cellWidth) + 1\n            };\n        }\n\n        element.autoApplyNS(NS)\n            .on(\"mousemove\", \".k-ct-cell\", function(e) {\n                that._setTableSize(tableFromLocation(e));\n            })\n            .on(\"mouseleave\", \".k-ct-cell\", function() {\n                that._setTableSize();\n            })\n            .on(\"down\", \".k-ct-cell\", function(e) {\n                e.preventDefault();\n                var touch = getTouches(e)[0];\n                that._exec(tableFromLocation(touch.location));\n            });\n    },\n\n    _valid: function(size) {\n        return size && size.row > 0 && size.col > 0 && size.row <= this.rows && size.col <= this.cols;\n    },\n\n    _exec: function(size) {\n        if (this._valid(size)) {\n            this._editor.exec(\"createTable\", {\n                rows: size.row,\n                columns: size.col\n            });\n            this._popup.close();\n        }\n    },\n\n    _setTableSize: function(size) {\n        var element = this._popup.element;\n        var status = element.find(\".k-status\");\n        var cells = element.find(\".k-ct-cell\");\n        var cols = this.cols;\n        var messages = this._editor.options.messages;\n\n        if (this._valid(size)) {\n            status.text(kendo.format(messages.createTableHint, size.row, size.col));\n\n            cells.each(function(i) {\n                $(this).toggleClass(\n                    SELECTEDSTATE,\n                    i % cols < size.col && i / cols < size.row\n                );\n            });\n        } else {\n            status.text(messages.createTable);\n            cells.removeClass(SELECTEDSTATE);\n        }\n    },\n\n    _keydown: function(e) {\n        var initiallyVisible = this._popup.visible();\n\n        PopupTool.fn._keydown.call(this, e);\n\n        if (!this._popup.visible()) {\n            return;\n        }\n\n        var keys = kendo.keys;\n        var key = e.keyCode;\n        var cells = this._popup.element.find(\".k-ct-cell\");\n        var focus = Math.max(cells.filter(\".k-selected\").last().index(), 0);\n        var selectedRows = Math.floor(focus / this.cols);\n        var selectedColumns = focus % this.cols;\n\n        var changed = false,\n            button;\n\n        if (key == keys.DOWN && !e.altKey) {\n            changed = true;\n            selectedRows++;\n        } else if (key == keys.UP) {\n            changed = true;\n            selectedRows--;\n        } else if (key == keys.RIGHT) {\n            changed = true;\n            selectedColumns++;\n        } else if (key == keys.LEFT) {\n            changed = true;\n            selectedColumns--;\n        } else if (key == keys.TAB) {\n            button = this._popup.element.find(\".k-button\");\n\n            if (button.length > 0) {\n                changed = true;\n                button.trigger(\"focus\");\n            }\n        }\n\n        var tableSize = {\n            row: Math.max(1, Math.min(this.rows, selectedRows + 1)),\n            col: Math.max(1, Math.min(this.cols, selectedColumns + 1))\n        };\n\n        if (key == keys.ENTER && initiallyVisible) {\n            this._exec(tableSize);\n        } else {\n            this._setTableSize(tableSize);\n        }\n\n        if (changed) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n    },\n\n    _open: function() {\n        var messages = this._editor.options.messages;\n\n        PopupTool.fn._open.call(this);\n\n        this.popup().element\n            .find(\".k-status\").text(messages.createTable).end()\n            .find(\".k-ct-cell\").removeClass(SELECTEDSTATE);\n    },\n\n    _close: function() {\n        PopupTool.fn._close.call(this);\n        this.popup().element.off(\".\" + NS);\n    }\n});\n\nvar TableModificationCommand = Command.extend({\n    undo: function() {\n        var point = this.restorePoint;\n        point.restoreHtml();\n\n        $(this.editor.body).find(\".k-element-resize-handle-wrapper\")\n            .each(function(index,el) {\n                el.remove();\n            });\n\n        this.editor.selectRange(point.toRange());\n    },\n    _clearColIndexAttr: function(table) {\n        dom.clearTableMappings(table, \"col-index\");\n    },\n    _mapColIndices: function(table) {\n        dom.reMapTableColumns(table, \"col-index\");\n    },\n    _findRowSpanCell: function(parent, rowIndex, colIndex) {\n        var row, cell;\n\n        for (var i = rowIndex; i >= 0; i--) {\n            row = parent.rows[i];\n            cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n            if (cell.length) {\n                return cell;\n            }\n        }\n    },\n    _resetElementResizing: function(editor) {\n        editor._destroyResizings();\n        editor._initializeColumnResizing();\n        editor._initializeRowResizing();\n        editor._initializeElementResizing();\n    },\n    _findNextTdInRow: function(row, colIndex) {\n        var lastTd = row.find(\"td:last-child\"),\n            lastIndex = parseInt(lastTd.attr(\"col-index\"), 10) + lastTd.prop(\"colSpan\") - 1,\n            td;\n\n        for (var i = colIndex; i <= lastIndex; i++) {\n            td = row.find(\"[col-index=\" + i + \"]\");\n            if (td.length) {\n                return td;\n            }\n        }\n    },\n    _adjustColgroups: function(row, table) {\n        var colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            cells = row.cells,\n            numberOfCells = cells.length,\n            i, colgroup, cell;\n\n        while (colElements.length > 0) {\n            colElements[0].remove();\n        }\n        while (colgroupElements.length > 0) {\n            colgroupElements[0].remove();\n        }\n\n        for (i = numberOfCells - 1; i >= 0; i--) {\n            cell = cells[i];\n            if (cell.getAttribute(SCOPE) === COLGROUP) {\n                colgroup = dom.createEmptyNode(this.editor.document, COLGROUP);\n                colgroup.setAttribute(\"span\", cell.getAttribute(COLSPAN));\n                table.prepend(colgroup);\n            } else {\n                table.prepend(dom.createEmptyNode(this.editor.document, COL));\n            }\n        }\n    },\n    _associateHeaderIds: function(table) {\n        dom.clearTableMappings(table, \"col-index\");\n        dom.reMapTableColumns(table, \"col-index\");\n        $(table).find(\"th, td\").removeAttr(\"id headers\");\n        dom.associateWithIds(table);\n    },\n    _getNumberOfColumns: function(table) {\n        return dom._getNumberOfColumns(table, \"td, th\");\n    }\n});\n\nvar InsertRowCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(true),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            position = this.options.position || \"after\",\n            cellCount, row, cell,\n            newRow, rowIndex, rowSpanIndex, createdCell;\n\n        if (!table || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        row = td.parentNode;\n        rowIndex = dom.findNodeIndex(row, true);\n\n        if (td.rowSpan > 1 && position === \"after\") {\n            row = table.rows[rowIndex + td.rowSpan - 1];\n        }\n\n        cellCount = this._getNumberOfColumns(table);\n        newRow = row.cloneNode(true);\n        $(newRow).empty();\n\n        for (var i = 0; i < cellCount; i = i + cell.prop(\"colSpan\")) {\n            cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n            if (cell.length) {\n                if (cell.prop(\"rowSpan\") > 1 && position === \"after\" && cell) {\n                    cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                } else {\n                    this._appendCell(newRow, cell);\n                }\n            } else {\n                rowIndex = dom.findNodeIndex(row, true);\n                cell = this._findRowSpanCell(row.parentElement, rowIndex, i);\n                rowSpanIndex = cell.closest(TR).index();\n\n                if (rowSpanIndex + cell.prop(\"rowSpan\") - 1 === rowIndex && position === \"after\") {\n                    this._appendCell(newRow, cell);\n                } else {\n                    cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                }\n            }\n\n            createdCell = $(newRow).find(\"[col-index=\" + i + \"]\");\n            if (createdCell.attr(SCOPE) === ROWGROUP && !createdCell.attr(ROWSPAN)) {\n                createdCell.attr(SCOPE, ROW);\n            }\n        }\n\n        if (position == \"before\") {\n            dom.insertBefore(newRow, row);\n        } else {\n            dom.insertAfter(newRow, row);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n\n        this._resetElementResizing(this.editor);\n    },\n    _appendCell: function(row, cell) {\n        var newCell;\n\n        newCell = cell.clone();\n        newCell.html(Editor.emptyTableCellContent);\n        newCell.removeAttr(ROWSPAN);\n        newCell.appendTo(row);\n    }\n});\n\nvar InsertColumnCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(true),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            columnIndex,\n            i,\n            rows = table && table.rows,\n            cell,\n            newCell,\n            position = this.options.position || \"after\";\n\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        columnIndex = parseInt(td.getAttribute(\"col-index\"),10);\n\n        if (td.colSpan > 1 && position === \"after\") {\n            td.setAttribute(\"col-index\", columnIndex + td.colSpan - 1);\n            columnIndex = columnIndex + td.colSpan - 1;\n        }\n\n        for (i = 0; i < rows.length; i++) {\n            cell = this._processForColSpan(rows[i], columnIndex, position, td);\n\n            if (!cell) {\n                continue;\n            }\n\n            newCell = cell.cloneNode();\n            newCell.innerHTML = Editor.emptyTableCellContent;\n            newCell.removeAttribute(COLSPAN);\n\n            if (newCell.getAttribute(SCOPE) && newCell.getAttribute(SCOPE) === COLGROUP) {\n                newCell.setAttribute(SCOPE, COL);\n            }\n\n            if (position == \"before\") {\n                dom.insertBefore(newCell, cell);\n            } else {\n                dom.insertAfter(newCell, cell);\n            }\n\n            this._resizeCells(newCell, cell);\n        }\n\n        if (colElements.length > 0 || colgroupElements.length > 0) {\n            this._adjustColgroups(rows[0], table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n\n        this._resetElementResizing(this.editor);\n    },\n    _processForColSpan: function(row, columnIndex, position, selectedCell) {\n        var cell,\n            colSpanEffect,\n            index = columnIndex - 1;\n\n        cell = $(row).find(\"[col-index=\" + columnIndex + \"]\")[0];\n\n        if (cell && cell.colSpan > 1 && position === \"after\" && cell !== selectedCell) {\n            cell.colSpan += 1;\n            return;\n        }\n\n        if (cell) {\n            return cell;\n        }\n\n        for (index; index >= 0; index--) {\n            cell = $(row).find(\"[col-index=\" + index + \"]\")[0];\n\n            if (cell && cell.colSpan > 1) {\n                break;\n            }\n        }\n\n        if (!cell) {\n            return;\n        }\n\n        colSpanEffect = parseInt(cell.getAttribute(\"col-index\"),10) + cell.colSpan - 1;\n\n        if (colSpanEffect === columnIndex && position === \"after\") {\n            return cell;\n        } else if (columnIndex <= colSpanEffect) {\n            cell.setAttribute(COLSPAN, cell.colSpan + 1);\n        }\n    },\n    _resizeCells: function(newCell, cell) {\n        var width = newCell.style.width,\n        parsedWidth, unit, calculatedWidth;\n\n        if (!width) {\n            return;\n        }\n\n        parsedWidth = parseFloat(width);\n        unit = width.slice(parsedWidth.toString().length);\n        calculatedWidth = (parsedWidth / 2) + unit;\n\n        newCell.style.width = calculatedWidth;\n        cell.style.width = calculatedWidth;\n    }\n});\n\nvar DeleteRowCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange();\n        var rows = RangeUtils.mapAll(range, function(node) {\n            return $(node).closest(TR)[0];\n        });\n        var td = dom.closest(range.endContainer, [TD, TH]);\n        var row = rows[0];\n        var rowSpan = td ? td.rowSpan : 1;\n        var rowIndex = $(rows[0]).index();\n        var table = dom.closest(row, TABLE);\n        var rowParent = row.parentElement;\n        var focusElement;\n\n        if (!table || (this.immutables() && Editor.Immutables.immutableParent(row))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        for (var x = 0; x < rowSpan; x++) {\n            if (rows.indexOf(rowParent.rows[rowIndex + x]) < 0) {\n                rows.push(rowParent.rows[rowIndex + x]);\n            }\n        }\n\n        if (table.rows.length <= rows.length) {\n            focusElement = dom.next(table);\n            if (!focusElement || dom.insignificant(focusElement)) {\n                focusElement = dom.prev(table);\n            }\n\n            if (focusElement && focusElement.rows) {\n                focusElement = focusElement.rows[0].cells[0];\n            }\n\n            dom.remove(table);\n            this._resetElementResizing(this.editor);\n        } else if (rowParent.rows.length <= rows.length) {\n            focusElement = rowParent.nextSibling;\n\n            if (!focusElement) {\n                focusElement = rowParent.previousSibling;\n            }\n\n            dom.remove(rowParent);\n        } else {\n            this._mapColIndices(table);\n\n            for (var i = 0; i < rows.length; i++) {\n                row = rows[i];\n                dom.removeTextSiblings(row);\n                focusElement = dom.next(row) || dom.prev(row);\n                focusElement = focusElement.cells[0];\n\n                // IE needs to focus the new row before removing the old one\n                this._focusElement(range, focusElement);\n                focusElement = null;\n\n                this._handleRowSpanCells(table, row);\n\n                dom.remove(row);\n            }\n\n            this._clearColIndexAttr(table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        } else if (dom.is(rowParent, THEAD) && $(table).find(\"[scope]\").length > 0) {\n            this._adjustColgroups(rowParent.rows[0], table);\n        }\n\n        if (focusElement) {\n            this._focusElement(range, focusElement);\n        }\n\n        this._resetElementResizing(this.editor);\n    },\n    _focusElement: function(range, node) {\n        range.setStart(node, 0);\n        range.collapse(true);\n        this.editor.selectRange(range);\n    },\n    _handleRowSpanCells: function(table, row) {\n        var index, cell, adjacentCell, nextRow, rowIndex = dom.findNodeIndex(row, true),\n            firstRow = table.rows[0],\n            lastCell = firstRow.cells[firstRow.cells.length - 1],\n            lastIndex = parseInt(lastCell.getAttribute(\"col-index\"),10) + lastCell.colSpan - 1;\n\n        for (index = 0; index <= lastIndex; index = index + cell.prop(\"colSpan\")) {\n            cell = $(row).find(\"[col-index=\" + index + \"]\");\n\n            if (cell.length && cell.prop(\"rowSpan\") > 1) {\n                nextRow = table.rows[rowIndex + 1];\n                adjacentCell = $(nextRow).find(\"[col-index=\" + (index + 1) + \"]\");\n\n                if (adjacentCell.length) {\n                    adjacentCell.before(cell);\n                } else {\n                    $(nextRow).append(cell);\n                }\n                this._reduceRowSpan(cell);\n            }\n\n            if (!cell.length) {\n                cell = this._findRowSpanCell(row.parentElement, rowIndex, index);\n                this._reduceRowSpan(cell);\n            }\n        }\n    },\n    _reduceRowSpan: function(td) {\n        var rowSpanValue = td.prop(\"rowSpan\") - 1;\n\n        if (rowSpanValue <= 1) {\n            td.removeAttr(ROWSPAN);\n            if (td.attr(SCOPE) === ROWGROUP) {\n                td.attr(SCOPE, ROW);\n            }\n        } else {\n            td.attr(ROWSPAN, rowSpanValue);\n        }\n    }\n});\n\nvar DeleteColumnCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            rows = table && table.rows,\n            columnCount = rows && rows[0].cells.length,\n            colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            focusElement, columnIndex, i, cell, x;\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        if (columnCount == 1 || td.colSpan == columnCount) {\n            focusElement = dom.next(table);\n            if (!focusElement || dom.insignificant(focusElement)) {\n                focusElement = dom.prev(table);\n            }\n\n            if (focusElement && focusElement.rows) {\n                focusElement = focusElement.rows[0].cells[0];\n            }\n\n            dom.remove(table);\n            this._resetElementResizing(this.editor);\n        } else {\n            dom.removeTextSiblings(td);\n\n            focusElement = dom.next(td) || dom.prev(td);\n\n            this._mapColIndices(table);\n\n            columnIndex = parseInt(td.getAttribute(\"col-index\"), 10);\n\n            for (x = 0; x < td.colSpan; x++) {\n                for (i = 0; i < rows.length; i = i + (cell.prop(\"rowSpan\") || 1)) {\n                    cell = $(rows[i]).find(\"[col-index=\" + (columnIndex + x) + \"]\");\n\n                    if (cell.length && cell.prop(\"colSpan\") <= 1) {\n                        cell.remove();\n                    } else {\n                        this._handleColSpanCells(rows[i], columnIndex + x);\n                    }\n                }\n            }\n\n            this._clearColIndexAttr(table);\n        }\n\n        if (colElements.length > 0 || colgroupElements.length > 0) {\n            this._adjustColgroups(rows[0], table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        if (focusElement) {\n            range.setStart(focusElement, 0);\n            range.collapse(true);\n            this.editor.selectRange(range);\n        }\n\n        this._resetElementResizing(this.editor);\n    },\n    _handleColSpanCells: function(row, colIndex) {\n        var cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n        if (cell.length && cell.prop(\"colSpan\") > 1) {\n            var clone = cell.clone(true);\n            cell.after(clone);\n            this._reduceColSpan(clone);\n            clone.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n            cell.remove();\n            return;\n        }\n\n        for (var i = colIndex; i >= 0; i--) {\n            cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n            if (cell.length) {\n                this._reduceColSpan(cell);\n                cell.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n                return;\n            }\n        }\n    },\n    _reduceColSpan: function(td) {\n        var colSpanValue = td.prop(\"colSpan\") - 1;\n\n        if (colSpanValue <= 1) {\n            td.removeAttr(COLSPAN);\n            if (td.attr(SCOPE) === COLGROUP) {\n                td.attr(SCOPE, COL);\n            }\n        } else {\n            td.attr(COLSPAN, colSpanValue);\n        }\n    }\n});\n\nvar MergeCellsHorizontallyCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table, row, columnIndex, nextTd, colspan;\n\n            if (!td) {\n                this.releaseRange(range);\n                return;\n            }\n\n            table = dom.closest(td, TABLE);\n            row = td.parentNode;\n            columnIndex = dom.findNodeIndex(td, true);\n            nextTd = row.children[columnIndex + 1];\n\n            if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            columnIndex = parseInt($(td).attr(\"col-index\"), 10);\n            nextTd = $(row).find(\"[col-index=\" + (columnIndex + 1 + this._getColspan(td) - 1) + \"]\").get(0);\n\n            if (!nextTd || nextTd.rowSpan !== td.rowSpan || td.tagName !== nextTd.tagName) {\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n                return;\n            }\n\n            colspan = this._getColspan(td) + this._getColspan(nextTd);\n\n            $(td).prop(COLSPAN, colspan)\n                 .append(dom.emptyNode(nextTd) ? \"\" : \"<br/>\" + nextTd.innerHTML);\n\n            $(td).width(td.offsetWidth);\n            $(nextTd).remove();\n\n            if (td.getAttribute(SCOPE) === COL) {\n                td.setAttribute(SCOPE, COLGROUP);\n            }\n            if (td.getAttribute(SCOPE) === COLGROUP) {\n                this._adjustColgroups(row, table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n            this._resetElementResizing(this.editor);\n    },\n    _getColspan: function(td) {\n        return parseInt(td.getAttribute(COLSPAN), 10) || 1;\n    }\n});\n\nvar MergeCellsVerticallyCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            tr, parent, table, columnIndex, rowIndex, targetRow, bottomTd;\n\n            if (!td) {\n                this.releaseRange(range);\n                return;\n            }\n\n            tr = dom.closest(td, TR);\n            parent = dom.closest(td, [THEAD, TBODY]);\n            table = dom.closest(td, TABLE);\n            columnIndex = dom.findNodeIndex(td, true);\n            rowIndex = dom.findNodeIndex(tr, true);\n\n            if (rowIndex + 1 === parent.rows.length) {\n                this.releaseRange(range);\n                return;\n            }\n\n            targetRow = parent.rows[rowIndex + this._getRowspan(td)];\n            bottomTd = targetRow && targetRow.children[columnIndex];\n\n            if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            columnIndex = $(td).attr(\"col-index\");\n            bottomTd = $(targetRow).find(\"[col-index=\" + columnIndex + \"]\").get(0);\n\n            if (!bottomTd || bottomTd.colSpan !== td.colSpan || td.tagName !== bottomTd.tagName) {\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n                return;\n            }\n\n            $(td).prop(ROWSPAN, this._getRowspan(td) + this._getRowspan(bottomTd))\n                 .append(dom.emptyNode(bottomTd) ? \"\" : \"<br/>\" + bottomTd.innerHTML);\n\n            if (td.getAttribute(SCOPE) === ROW) {\n                td.setAttribute(SCOPE, ROWGROUP);\n            }\n\n            $(bottomTd).remove();\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n    },\n    _getRowspan: function(td) {\n        return parseInt(td.getAttribute(ROWSPAN), 10) || 1;\n    }\n});\n\nvar SplitCellCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            type = this.options.type,\n            attr = type === \"row\" ? COLSPAN : ROWSPAN,\n            td = dom.closest(range.endContainer, [TD, TH]),\n            parent = dom.closest(td, [THEAD, TBODY]),\n            table = dom.closest(td, TABLE),\n            emptyTd = dom.createEmptyNode(this.editor.document, td.nodeName.toLowerCase());\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        if (type === \"row\" && $(td).is(\"[\" + attr + \"]\")) {\n            this._splitCellHorizontally(td, parent, attr, emptyTd);\n        } else if (type === \"column\" && $(td).is(\"[\" + attr + \"]\")) {\n            this._splitCellVertically(td, parent, attr, emptyTd);\n        }\n\n        if ($(td).prop(attr.toLowerCase()) <= 1) {\n            $(td).removeAttr(attr);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n    },\n    _getRowspanValue: function(td) {\n        return parseInt(td.getAttribute(ROWSPAN), 10);\n    },\n    _getColspanValue: function(td) {\n        return parseInt(td.getAttribute(COLSPAN), 10);\n    },\n    _splitCellHorizontally: function(td, parent, attr, emptyTd) {\n        var rowSpan = td.rowSpan,\n            colSpan = td.colSpan,\n            tdToAdd = $(emptyTd),\n            colSpanResult = Math.floor(colSpan / 2);\n\n            if (colSpanResult > 1) {\n                tdToAdd.attr(COLSPAN, colSpanResult);\n            }\n\n            if (rowSpan > 1) {\n                tdToAdd.attr(ROWSPAN, rowSpan);\n            }\n\n            $(td).prop(attr, colSpan - colSpanResult)\n                .after(tdToAdd);\n\n            $(td).width(td.offsetWidth);\n            tdToAdd.width(tdToAdd[0].offsetWidth);\n\n            if (td.hasAttribute(SCOPE)) {\n                if (td.getAttribute(SCOPE) === COLGROUP) {\n                    tdToAdd.attr(SCOPE, COL);\n                    if (!td.getAttribute(COLSPAN) || td.getAttribute(COLSPAN) === \"1\") {\n                        td.setAttribute(SCOPE, COL);\n                    }\n\n                    this._adjustColgroups(td.parentNode, parent.parentNode);\n                } else {\n                    tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                }\n            }\n    },\n    _splitCellVertically: function(td, parent, attr, emptyTd) {\n        var tr = dom.closest(td,TR),\n            columnIndex = parseInt($(td).attr(\"col-index\"), 10),\n            rowIndex = dom.findNodeIndex(tr, true),\n            rowSpan = td.rowSpan,\n            colSpan = td.colSpan,\n            rowSpanResult = Math.floor(rowSpan / 2),\n            targetRow = $(parent).find(TR).eq(rowIndex + rowSpan - rowSpanResult),\n            nextTd = this._findNextTdInRow(targetRow, columnIndex + colSpan),\n            tdToAdd = $(emptyTd);\n\n            if (rowSpanResult > 1) {\n                tdToAdd.attr(ROWSPAN, rowSpanResult);\n            }\n            if (colSpan > 1) {\n                tdToAdd.attr(COLSPAN, colSpan);\n            }\n\n            if (nextTd && nextTd.length) {\n                nextTd.before(tdToAdd);\n            } else {\n                targetRow.append(tdToAdd);\n            }\n\n            $(td).prop(attr, rowSpan - rowSpanResult);\n\n            if (td.hasAttribute(SCOPE)) {\n                if (td.getAttribute(SCOPE) === ROWGROUP) {\n                    tdToAdd.attr(SCOPE, ROW);\n                    if (!td.getAttribute(ROWSPAN) || td.getAttribute(ROWSPAN) === \"1\") {\n                        td.setAttribute(SCOPE, ROW);\n                    }\n                } else {\n                    tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                }\n            }\n    }\n});\n\nvar TableModificationTool = Tool.extend({\n    command: function(options) {\n        var commandsMap = {\n            row: {\n                insert: InsertRowCommand,\n                \"delete\": DeleteRowCommand,\n                merge: MergeCellsHorizontallyCommand,\n                split: SplitCellCommand\n            },\n            column: {\n                insert: InsertColumnCommand,\n                \"delete\": DeleteColumnCommand,\n                merge: MergeCellsVerticallyCommand,\n                split: SplitCellCommand\n            }\n        };\n\n        options = extend(options, this.options);\n        options.action = options.action || \"insert\";\n\n        return new commandsMap[options.type][options.action](options);\n    },\n\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nvar TableFormatCommand = FormatCommand.extend({\n    exec: function() {\n        var that = this;\n        var editor = that.editor;\n\n        FormatCommand.fn.exec.call(this);\n\n        if (editor.elementResizing) {\n            editor.elementResizing._showResizeHandles();\n        }\n    }\n});\n\n// var tableAlignFormatFinder = BlockFormatFinder.extend({\n\n// });\n\nvar TableFormatTool = BlockFormatTool.extend({\n    update: function(ui, nodes) {\n        var isTable = !tableFormatFinder.isFormatted(nodes),\n            isFormatted = this.options.finder.isFormatted(nodes, this.isTable),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (toolbar) {\n            toolbar.toggle(ui, isFormatted);\n        }\n\n        if (isTable === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    },\n    command: function(commandArguments) {\n        var that = this;\n\n        return new TableFormatCommand(extend(commandArguments, {\n            formatter: that.options.formatter\n        }));\n    },\n    isTable: function(node) {\n        return dom.is(node, \"table\");\n    }\n});\n\nextend(kendo.ui.editor, {\n    PopupTool: PopupTool,\n    TableCommand: TableCommand,\n    InsertTableTool: InsertTableTool,\n    TableFormatTool: TableFormatTool,\n    TableFormatCommand: TableFormatCommand,\n    TableModificationTool: TableModificationTool,\n    InsertRowCommand: InsertRowCommand,\n    InsertColumnCommand: InsertColumnCommand,\n    DeleteRowCommand: DeleteRowCommand,\n    DeleteColumnCommand: DeleteColumnCommand,\n    MergeCellsHorizontallyCommand: MergeCellsHorizontallyCommand,\n    MergeCellsVerticallyCommand: MergeCellsVerticallyCommand,\n    SplitCellCommand: SplitCellCommand\n});\n\n\nregisterTool(\"createTable\", new InsertTableTool({ ui: { popup: true, overflow: \"never\" } }));\n\nregisterTool(\"addColumnLeft\", new TableModificationTool({ type: \"column\", position: \"before\" }));\nregisterTool(\"addColumnRight\", new TableModificationTool({ type: \"column\" }));\nregisterTool(\"addRowAbove\", new TableModificationTool({ type: \"row\", position: \"before\" }));\nregisterTool(\"addRowBelow\", new TableModificationTool({ type: \"row\" }));\nregisterTool(\"deleteRow\", new TableModificationTool({ type: \"row\", action: \"delete\" }));\nregisterTool(\"deleteColumn\", new TableModificationTool({ type: \"column\", action: \"delete\" }));\nregisterTool(\"mergeCellsHorizontally\", new TableModificationTool({ type: \"row\", action: \"merge\" }));\nregisterTool(\"mergeCellsVertically\", new TableModificationTool({ type: \"column\", action: \"merge\" }));\nregisterTool(\"splitCellHorizontally\", new TableModificationTool({ type: \"row\", action: \"split\" }));\nregisterTool(\"splitCellVertically\", new TableModificationTool({ type: \"column\", action: \"split\" }));\n\nregisterFormat(\"tableAlignLeft\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"\", marginRight: \"auto\" } } },\n    { tags: [\"table\"], attr: { align: \"left\" } }\n]);\nregisterTool(\"tableAlignLeft\", new TableFormatTool({\n    format: formats.tableAlignLeft,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\nregisterFormat(\"tableAlignCenter\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"auto\" } } },\n    { tags: [\"table\"], attr: { align: \"center\" } }\n]);\nregisterTool(\"tableAlignCenter\", new TableFormatTool({\n    format: formats.tableAlignCenter,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\nregisterFormat(\"tableAlignRight\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"\" } } },\n    { tags: [\"table\"], attr: { align: \"right\" } }\n]);\nregisterTool(\"tableAlignRight\", new TableFormatTool({\n    format: formats.tableAlignRight,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        editorNS = kendo.ui.editor,\n        RangeUtils = editorNS.RangeUtils,\n        dom = editorNS.Dom,\n        RestorePoint = editorNS.RestorePoint,\n        Marker = editorNS.Marker,\n        browser = kendo.support.browser,\n        extend = $.extend;\n\nvar Clipboard = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n        var pasteCleanup = editor.options.pasteCleanup;\n        this.nonSplittableTagsOnPaste = editor.options.nonSplittableTagsOnPaste || [];\n        this.cleaners = [\n            new ScriptCleaner(pasteCleanup),\n            new TabCleaner(pasteCleanup),\n            new MSWordFormatCleaner(pasteCleanup),\n            new WebkitFormatCleaner(pasteCleanup),\n            new HtmlTagsCleaner(pasteCleanup),\n            new HtmlAttrCleaner(pasteCleanup),\n            new HtmlContentCleaner(pasteCleanup),\n            new CustomCleaner(pasteCleanup) //always keep at end\n        ];\n    },\n\n    htmlToFragment: function(html) {\n        var editor = this.editor,\n            doc = editor.document,\n            container = dom.create(doc, 'div'),\n            fragment = doc.createDocumentFragment();\n\n        container.innerHTML = html;\n\n        while (container.firstChild) {\n            fragment.appendChild(container.firstChild);\n        }\n\n        return fragment;\n    },\n\n    isBlock: function(html) {\n        return (/<(div|p|ul|ol|table|h[1-6])/i).test(html);\n    },\n\n    _startModification: function() {\n        var range;\n        var restorePoint;\n        var editor = this.editor;\n\n        if (this._inProgress) {\n            return;\n        }\n\n        this._inProgress = true;\n\n        range = editor.getRange();\n        restorePoint = new RestorePoint(range, editor.body);\n\n        dom.persistScrollTop(editor.document);\n\n        return { range: range, restorePoint: restorePoint };\n    },\n\n    _endModification: function(modificationInfo) {\n        editorNS._finishUpdate(this.editor, modificationInfo.restorePoint);\n\n        this.editor._selectionChange();\n\n        this._inProgress = false;\n    },\n\n    _contentModification: function(before, after) {\n        var that = this;\n        var editor = that.editor;\n        var modificationInfo = that._startModification();\n\n        if (!modificationInfo) {\n            return;\n        }\n\n        before.call(that, editor, modificationInfo.range);\n\n        setTimeout(function() {\n            after.call(that, editor, modificationInfo.range);\n\n            that._endModification(modificationInfo);\n        });\n    },\n\n    _removeBomNodes: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n\n        for (var i = 0; i < nodes.length; i++) {\n            nodes[i].nodeValue = dom.stripBom(nodes[i].nodeValue) || nodes[i].nodeValue;\n        }\n    },\n\n    _onBeforeCopy: function(range) {\n        var marker = new Marker();\n        marker.add(range);\n\n        this._removeBomNodes(range);\n\n        marker.remove(range);\n\n        this.editor.selectRange(range);\n    },\n\n    oncopy: function() {\n        this._onBeforeCopy(this.editor.getRange());\n    },\n\n    oncut: function() {\n        this._onBeforeCopy(this.editor.getRange());\n        this._contentModification($.noop, $.noop);\n    },\n\n    _fileToDataURL: function(blob) {\n        var deferred = $.Deferred();\n\n        var reader = new FileReader();\n\n        if (!(blob instanceof window.File) && blob.getAsFile) {\n            blob = blob.getAsFile();\n        }\n\n        reader.onload = deferred.resolve.bind(deferred);\n\n        reader.readAsDataURL(blob);\n\n        return deferred.promise();\n    },\n\n    _triggerPaste: function(html, options) {\n        var args = { html: html || \"\" };\n\n        args.html = args.html.replace(/\\ufeff/g, \"\");\n\n        this.editor.trigger(\"paste\", args);\n\n        this.paste(args.html, options || {});\n    },\n\n    _handleImagePaste: function(e) {\n        if (!('FileReader' in window) || (browser.msie && browser.version > 10)) {\n            return;\n        }\n\n        var clipboardData = e.clipboardData || e.originalEvent.clipboardData ||\n                    window.clipboardData || {};\n\n        var items = clipboardData.items || clipboardData.files;\n\n        return this._insertImages(items);\n    },\n\n    _insertImages: function(items) {\n        if (!items) {\n            return;\n        }\n\n        var images = $.grep(items, function(item) { return (/^image\\//i).test(item.type); });\n        var html = $.grep(items, function(item) { return (/^text\\/html/i).test(item.type); });\n\n        if (html.length || !images.length) {\n            return;\n        }\n\n        var modificationInfo = this._startModification();\n\n        if (!modificationInfo) {\n            return;\n        }\n\n        $.when.apply($, $.map(images, this._fileToDataURL))\n            .done((function() {\n                var results = Array.prototype.slice.call(arguments);\n                var html = $.map(results, function(e) {\n                    return '<img src=\"' + e.target.result + '\" />';\n                }).join(\"\");\n\n                this._triggerPaste(html);\n\n                this._endModification(modificationInfo);\n            }).bind(this));\n\n        return true;\n    },\n\n    onpaste: function(e) {\n        if (this.editor.body.contentEditable === \"false\") {\n            return;\n        }\n\n        if (this._handleImagePaste(e)) {\n            e.preventDefault();\n            return;\n        }\n\n        this.expandImmutablesIn();\n\n        this._contentModification(\n            function beforePaste(editor, range) {\n                var clipboardNode = dom.create(editor.document, 'div', {\n                        className: 'k-paste-container',\n                        innerHTML: \"\\ufeff\"\n                    });\n                var browser = kendo.support.browser;\n                var body = editor.body;\n\n                this._decoreateClipboardNode(clipboardNode, body);\n\n                body.appendChild(clipboardNode);\n\n                //Browser scrolls to clipboardNode\n                if (browser.webkit) {\n                    this._moveToCaretPosition(clipboardNode, range);\n                }\n\n                // text ranges are slow in IE10-, DOM ranges are buggy in IE9-10\n                if (browser.msie && browser.version < 11) {\n                    e.preventDefault();\n                    var r = editor.createRange();\n                    r.selectNodeContents(clipboardNode);\n                    editor.selectRange(r);\n                    var textRange = editor.document.body.createTextRange();\n                    textRange.moveToElementText(clipboardNode);\n                    $(body).off('paste');\n                    textRange.execCommand('Paste');\n                    $(body).on('paste', this.onpaste.bind(this));\n                } else {\n                    var clipboardRange = editor.createRange();\n                    clipboardRange.selectNodeContents(clipboardNode);\n                    editor.selectRange(clipboardRange);\n                }\n\n                range.deleteContents();\n            },\n            function afterPaste(editor, range) {\n                var html = \"\", containers;\n\n                editor.selectRange(range);\n\n                containers = $(editor.body).children(\".k-paste-container\");\n\n                containers.each(function() {\n                    var lastChild = this.lastChild;\n\n                    if (lastChild && dom.is(lastChild, 'br')) {\n                        dom.remove(lastChild);\n                    }\n\n                    html += this.innerHTML;\n                });\n\n                containers.remove();\n\n                this._triggerPaste(html, { clean: true });\n            }\n        );\n    },\n    ondragover: function(e) {\n        if (browser.msie || browser.edge) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    },\n    ondrop: function(e) {\n        if (!('FileReader' in window)) {\n            return;\n        }\n\n        var dataTransfer = (e.originalEvent || e).dataTransfer || {};\n        var items = dataTransfer.items || dataTransfer.files;\n\n        if (this._insertImages(items)) {\n            e.preventDefault();\n        }\n    },\n    _decoreateClipboardNode: function(node, body) {\n        if (!browser.msie && !browser.webkit) {\n            return;\n        }\n\n        node = $(node);\n        node.css({\n            borderWidth: \"0px\",\n            width: \"0px\",\n            height: \"0px\",\n            overflow: \"hidden\",\n            margin: \"0\",\n            padding: \"0\"\n        });\n\n        if (browser.msie) {\n            //node inherits BODY styles and this causes the browser to add additional\n            var documentElement = $(body.ownerDocument.documentElement);\n\n            node.css({\n                fontVariant: \"normal\",\n                fontWeight: \"normal\",\n                lineSpacing: \"normal\",\n                lineHeight: \"normal\",\n                textDecoration: \"none\"\n            });\n            var color = documentElement.css(\"color\");\n            if (color) {\n                node.css(\"color\", color);\n            }\n            var fontFamily = documentElement.css(\"fontFamily\");\n            if (fontFamily) {\n                node.css(\"fontFamily\", fontFamily);\n            }\n            var fontSize = documentElement.css(\"fontSize\");\n            if (fontSize) {\n                node.css(\"fontSize\", fontSize);\n            }\n        }\n    },\n    _moveToCaretPosition: function(node, range) {\n        var that = this;\n        var body = that.editor.body;\n        var nodeOffset = dom.offset(node, body);\n        var caretOffset = that._caretOffset(range, body);\n        var translateX = caretOffset.left - nodeOffset.left;\n        var translateY = caretOffset.top - nodeOffset.top;\n        var translate = \"translate(\" + translateX + \"px,\" + translateY + \"px)\";\n\n        $(node).css({\n            \"-webkit-transform\": translate,\n            \"transform\": translate\n        });\n    },\n    _caretOffset: function(range, body) {\n        var editor = this.editor;\n        var caret = dom.create(editor.document, 'span', { innerHTML: \"\\ufeff\" });\n        var startContainer = range.startContainer;\n        var rangeChanged;\n\n        if (range.collapsed) {\n            var isStartTextNode = dom.isDataNode(startContainer);\n            if (isStartTextNode && (dom.isBom(startContainer) || range.startOffset === 0)) {\n                dom.insertBefore(caret, startContainer);\n            } else if (isStartTextNode && range.startOffset === startContainer.length) {\n                dom.insertAfter(caret, startContainer);\n            } else {\n                range.insertNode(caret);\n                rangeChanged = true;\n            }\n        } else {\n            startContainer = startContainer === body ?\n                startContainer.childNodes[range.startOffset] : startContainer;\n            dom.insertBefore(caret, startContainer);\n        }\n\n        var offset = dom.offset(caret, body);\n        var prev = caret.previousSibling;\n        var next = caret.nextSibling;\n\n        dom.remove(caret);\n\n        if (rangeChanged && dom.isDataNode(prev) && dom.isDataNode(next) && !dom.isBom(prev) && !dom.isBom(next)) {\n            var prevLength = prev.length;\n            next.data = prev.data + next.data;\n            range.setStart(next, prevLength);\n            dom.remove(prev);\n\n            range.collapse(true);\n            editor.selectRange(range);\n        }\n\n        return offset;\n    },\n\n    expandImmutablesIn: function(range) {\n        var editor = this.editor;\n        if (editor && editor.options.immutables) {\n            var body = editor.body;\n            range = range || editor.getRange();\n            kendo.ui.editor.Immutables.expandImmutablesIn(range);\n            if (range.startContainer === body && range.startOffset === 0) {\n                var doc = body.ownerDocument;\n                var bomNode = doc.createTextNode(\"\\ufeff\");\n                body.insertBefore(bomNode, body.childNodes[0]);\n                range.setStartBefore(bomNode);\n            }\n            editor.selectRange(range);\n        }\n    },\n\n    splittableParent: function(block, node) {\n        var parentNode, body;\n\n        if (block) {\n            return dom.closestEditableOfType(node, ['p', 'ul', 'ol']) || node.parentNode;\n        }\n\n        parentNode = node.parentNode;\n        body = node.ownerDocument.body;\n\n        if (dom.isInline(parentNode)) {\n            while (parentNode.parentNode != body && !dom.isBlock(parentNode.parentNode)) {\n                parentNode = parentNode.parentNode;\n            }\n        }\n\n        return parentNode;\n    },\n\n    paste: function(html, options) {\n        var editor = this.editor,\n            nonSplittableTagsOnPaste = this.nonSplittableTagsOnPaste,\n            preventSplit = false,\n            unwrapPasted = false,\n            i, l, childNodes, isList;\n\n        this.expandImmutablesIn();\n\n        options = extend({ clean: false, split: true }, options);\n\n        if (!options.skipCleaners) {\n            for (i = 0, l = this.cleaners.length; i < l; i++) {\n                if (this.cleaners[i].applicable(html)) {\n                    html = this.cleaners[i].clean(html);\n                }\n            }\n        }\n\n        if (options.clean) {\n            // remove br elements which immediately precede block elements\n            html = html.replace(/(<br>(\\s|&nbsp;)*)+(<\\/?(div|p|li|col|t))/ig, \"$3\");\n            // remove empty inline elements\n            html = html.replace(/<(a|span)[^>]*><\\/\\1>/ig, \"\");\n        }\n\n        html = html.replace(/<(a|span|font)([^>]*)> <\\/\\1>/ig, \"<$1$2>&nbsp;</$1>\");\n\n        // It is possible in IE to copy just <li> tags\n        html = html.replace(/^<li/i, '<ul><li').replace(/li>$/g, 'li></ul>');\n\n        var block = this.isBlock(html);\n\n        editor.focus();\n        var range = editor.getRange();\n        range.deleteContents();\n\n        if (range.startContainer == editor.document) {\n            range.selectNodeContents(editor.body);\n        }\n\n        var marker = new Marker();\n        var caret = marker.addCaret(range);\n\n        var parent = this.splittableParent(block, caret);\n        var unwrap = false;\n\n        for (i = 0; i < nonSplittableTagsOnPaste.length; i++) {\n            const splitter = nonSplittableTagsOnPaste[i],\n                tag = splitter.tag || splitter;\n\n            if (dom.is(parent, tag)) {\n                preventSplit = true;\n                unwrapPasted = splitter.unwrap !== false;\n                break;\n            }\n        }\n\n        var splittable = parent != editor.body && !dom.is(parent, \"td\") && !preventSplit;\n\n        if (options.split && splittable && (block || dom.isInline(parent))) {\n            range.selectNode(caret);\n            RangeUtils.split(range, parent, true);\n            unwrap = true;\n        }\n\n        var fragment = this.htmlToFragment(html);\n\n        if (fragment.firstChild && fragment.firstChild.className === \"k-paste-container\") {\n            var fragmentsHtml = [];\n            for (i = 0, l = fragment.childNodes.length; i < l; i++) {\n                fragmentsHtml.push(fragment.childNodes[i].innerHTML);\n            }\n\n            fragment = this.htmlToFragment(fragmentsHtml.join('<br />'));\n        }\n\n        childNodes = fragment.childNodes;\n\n        if (unwrapPasted) {\n            isList = dom.list(childNodes[0]);\n            dom.unwrap(childNodes[0]);\n\n            if (isList) {\n                range.selectNode(caret.parentNode);\n            }\n        }\n\n        $(childNodes)\n            .filter(\"table\").addClass(\"k-table\").end()\n            .find(\"table\").addClass(\"k-table\");\n\n        $(childNodes).each(function(index, elm) {\n           if (dom.isBlock(elm) && !dom.isSelfClosing(elm) && elm.innerHTML === \"\") {\n                elm.appendChild(editor.document.createTextNode(\"\\ufeff\"));\n           }\n        });\n\n        range.insertNode(fragment);\n\n        parent = this.splittableParent(block, caret);\n        if (unwrap) {\n            while (caret.parentNode != parent) {\n                dom.unwrap(caret.parentNode);\n            }\n\n            dom.unwrap(caret.parentNode);\n        }\n\n        dom.normalize(range.commonAncestorContainer);\n        caret.style.display = 'inline';\n        dom.restoreScrollTop(editor.document);\n        dom.scrollTo(caret);\n        marker.removeCaret(range);\n\n        var rangeEnd = range.commonAncestorContainer.parentNode;\n        if (range.collapsed && dom.name(rangeEnd) == \"tbody\" || range.collapsed && dom.name(rangeEnd) == \"thead\") {\n            range.setStartAfter($(rangeEnd).closest(\"table\")[0]);\n            range.collapse(true);\n        }\n\n        var focusedTable = $(range.commonAncestorContainer.parentNode).closest(\"table\");\n\n        if (focusedTable.get(0)) {\n            var siblingNodes = focusedTable.parent().contents();\n            var lastSiblingIndex = siblingNodes.length - 1;\n            var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n            while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n                lastSiblingIndex -= 1;\n                lastSibling = siblingNodes.get(lastSiblingIndex);\n            }\n\n            if (lastSibling === focusedTable.get(0) && !focusedTable.parents(\"table\").length) {\n                dom.insertAfter(dom.createEmptyNode(editor.document, \"p\"), focusedTable[0]);\n            }\n        }\n\n        editor._handleSpaceAndNewLines();\n        editor.selectRange(range);\n    }\n});\n\nvar Cleaner = Class.extend({\n    init: function(options) {\n        this.options = options || {};\n        this.replacements = [];\n    },\n\n    clean: function(html, customReplacements) {\n        var that = this,\n            replacements = customReplacements || that.replacements,\n            i, l;\n\n        for (i = 0, l = replacements.length; i < l; i += 2) {\n            html = html.replace(replacements[i], replacements[i + 1]);\n        }\n\n        return html;\n    }\n});\n\nvar ScriptCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.replacements = [\n            /<(\\/?)script([^>]*)>/i, \"<$1telerik:script$2>\"\n        ];\n    },\n\n    applicable: function(html) {\n        return !this.options.none && (/<script[^>]*>/i).test(html);\n    }\n});\n\nvar TabCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        var replacement = ' ';\n        this.replacements = [\n            /<span\\s+class=\"Apple-tab-span\"[^>]*>\\s*<\\/span>/gi, replacement,\n            /\\t/gi, replacement,\n            /&nbsp;&nbsp; &nbsp;/gi, replacement\n        ];\n    },\n\n    applicable: function(html) {\n        return (/&nbsp;&nbsp; &nbsp;|class=\"?Apple-tab-span/i).test(html);\n    }\n});\n\nvar MSWordFormatCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.junkReplacements = [\n            /<\\?xml[^>]*>/gi, '',\n            /<!--(.|\\n)*?-->/g, '', /* comments */\n            /&quot;/g, \"'\", /* encoded quotes (in attributes) */\n            /<o:p>&nbsp;<\\/o:p>/ig, '&nbsp;',\n            /<\\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\\n)*?<\\/(meta|link|style|o:|v:|x:)[^>]*>)?/ig, '', /* external references and namespaced tags */\n            /<\\/o>/g, ''\n        ];\n        this.replacements = this.junkReplacements.concat([\n            /(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*(<\\/?(h[1-6]|hr|p|div|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|caption|address|pre|form|blockquote|dl|dt|dd|dir|fieldset)[^>]*>)(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*/g, '$1',\n            /<br><br>/g, '<BR><BR>',\n            /<br>\\n/g, '<br/>',\n            /<br>(?!\\n)/g, ' ',\n            /<table([^>]*)>(\\s|&nbsp;)+<t/gi, '<table$1><t',\n            /<tr[^>]*>(\\s|&nbsp;)*<\\/tr>/gi, '',\n            /<tbody[^>]*>(\\s|&nbsp;)*<\\/tbody>/gi, '',\n            /<table[^>]*>(\\s|&nbsp;)*<\\/table>/gi, '',\n            /<BR><BR>/g, '<br>',\n            /^\\s*(&nbsp;)+/gi, '',\n            /(&nbsp;|<br[^>]*>)+\\s*$/gi, '',\n            /mso-[^;\"]*;?/ig, '', /* office-related CSS attributes */\n            /<(\\/?)b(\\s[^>]*)?>/ig, '<$1strong$2>',\n            /<(\\/?)font(\\s[^>]*)?>/ig, this.convertFontMatch,\n            /<(\\/?)i(\\s[^>]*)?>/ig, '<$1em$2>',\n            /style=([\"|'])\\s*\\1/g, '', /* empty style attributes */\n            /(<br[^>]*>)?\\n/g, function($0, $1) { return $1 ? $0 : ' '; } /* phantom extra line feeds */\n        ]);\n    },\n\n    convertFontMatch: function(match, closing, args) {\n        var faceRe = /face=['\"]([^'\"]+)['\"]/i;\n        var face = faceRe.exec(args);\n        var family = args && face && face[1];\n\n        if (closing) {\n            return '</span>';\n        } else if (family) {\n            return '<span style=\"font-family:' + family + '\">';\n        } else {\n            return '<span>';\n        }\n    },\n\n    applicable: function(html) {\n        return (/class=\"?Mso/i).test(html) ||\n               (/style=\"[^\"]*mso-/i).test(html) ||\n               (/urn:schemas-microsoft-com:office/).test(html);\n    },\n\n    stripEmptyAnchors: function(html) {\n        return html.replace(/<a([^>]*)>\\s*<\\/a>/ig, function(a, attributes) {\n            if (!attributes || attributes.indexOf(\"href\") < 0) {\n                return \"\";\n            }\n\n            return a;\n        });\n    },\n\n    listType: function(p, listData) {\n        var html = p.innerHTML;\n        var text = dom.innerText(p);\n\n        var startingSymbol;\n        var matchSymbol = html.match(/^(?:<span [^>]*texhtml[^>]*>)?<span [^>]*(?:Symbol|Wingdings)[^>]*>([^<]+)/i);\n        var symbol = matchSymbol && matchSymbol[1];\n        var isNumber = /^[a-z\\d]/i.test(symbol);//including alpha-numeric and roman numerals\n\n        var trimStartText = function(text) {\n            return text.replace(/^(?:&nbsp;|[\\u00a0\\n\\r\\s])+/, '');\n        };\n\n        if (matchSymbol) {\n            startingSymbol = true;\n        }\n\n        html = html.replace(/<\\/?\\w+[^>]*>/g, '').replace(/&nbsp;/g, '\\u00a0');\n\n        if ((!startingSymbol && /^[\\u2022\\u00b7\\u00a7\\u00d8o]\\u00a0+/.test(html)) ||\n            (startingSymbol && /^.\\u00a0+/.test(html)) ||\n            (symbol && !isNumber && listData)) {\n            return {\n                tag: 'ul',\n                style: this._guessUnorderedListStyle(trimStartText(text))\n            };\n        }\n\n        if (/^\\s*\\w+[\\.\\)][\\u00a0 ]{2,}/.test(html)) {\n            return {\n                tag: 'ol',\n                style: this._guessOrderedListStyle(trimStartText(text))\n            };\n        }\n    },\n\n    _convertToLi: function(p) {\n        var content;\n\n        if (p.childNodes.length == 1) {\n            content = p.firstChild.nodeType === dom.nodeTypes.TEXT_NODE ? dom.innerText(p) : p.firstChild.innerHTML.replace(/^\\w+[\\.\\)](&nbsp;)+ /, \"\");\n            content = this._checkForBullet(content);\n        } else {\n            content = this._getHtmlNoBullet(p);\n        }\n\n        dom.remove(p);\n\n        return dom.create(document, 'li', { innerHTML: content });\n    },\n\n    _checkForBullet: function(html) {\n        var p = dom.create(document, 'p', { innerHTML: html });\n        var bulletRgx = /^\\s*\\w+[\\.\\)]\\s+/;\n\n        if (bulletRgx.test(p.innerText)) {\n            return this._getHtmlNoBullet(p);\n        }\n\n        return html;\n    },\n\n    _getHtmlNoBullet: function(element) {\n        var content,\n            name = dom.name(element);\n\n        dom.remove(element.firstChild);\n\n        // check for roman numerals\n        if (element.firstChild.nodeType == 3) {\n            if (/^[ivxlcdm]+\\.$/i.test(element.firstChild.nodeValue)) {\n                dom.remove(element.firstChild);\n            }\n        }\n\n        if (/^(&nbsp;|\\s)+$/i.test(element.firstChild.innerHTML)) {\n            dom.remove(element.firstChild);\n        }\n\n        if (name != \"p\") {\n            content = \"<\" + name + \">\" + element.innerHTML + \"</\" + name + \">\";\n        } else {\n            content = element.innerHTML;\n        }\n\n        return content;\n    },\n\n    _guessUnorderedListStyle: function(symbol) {\n        if (/^[\\u2022\\u00b7\\u00FC\\u00D8\\u002dv-]/.test(symbol)) {\n            return null;//return \"disc\"; //default CSS value\n        } else if (/^o/.test(symbol)) {\n            return \"circle\";\n        } else {\n            return \"square\";\n        }\n    },\n    _guessOrderedListStyle: function(symbol) {\n        var listType = null;\n        if (!/^\\d/.test(symbol)) {\n            listType = (/^[a-z]/.test(symbol) ? 'lower-' : 'upper-') +\n                       (/^[ivxlcdm]/i.test(symbol) ? 'roman' : 'alpha');\n        }\n\n        return listType;\n    },\n\n    extractListLevels: function(html) {\n        var msoListRegExp = /style=['\"]?[^'\"]*?mso-list:\\s?[a-zA-Z]+(\\d+)\\s[a-zA-Z]+(\\d+)\\s(\\w+)/gi;\n\n        html = html.replace(msoListRegExp, function(match, list, level) {\n            return kendo.format('data-list=\"{0}\" data-level=\"{1}\" {2}', list, level, match);\n        });\n\n        return html;\n    },\n\n    _createList: function(type, styleType) {\n        return dom.create(document, type, {\n            style: { listStyleType: styleType }\n        });\n    },\n\n    lists: function(placeholder) {\n        var blockChildren = $(placeholder).find(dom.blockElements.join(',')),\n            lastMargin = -1,\n            name,\n            levels = {},\n            li,\n            rootMargin,\n            rootIndex,\n            lastRootLi,\n            isLastRootLi,\n            rootList,\n            i, p, type, margin, list, listData,\n            acceptedNameTags = [\"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n            isParentTable = false;\n\n        for (i = 0; i < blockChildren.length; i++) {\n            p = blockChildren[i];\n            listData = $(p).data();\n            var listIndex = listData.list;\n            name = dom.name(p);\n            isParentTable = !!$(p).parents(\"table\").length;\n\n            if (isParentTable) {\n                continue;\n            }\n\n            var listType = this.listType(p, listData);\n            type = listType && listType.tag;\n\n            if (!type || acceptedNameTags.indexOf(name) < 0) {\n                if (!p.innerHTML) {\n                    dom.remove(p);\n                } else if (li && !isLastRootLi) {\n                    li.appendChild(p);\n                }\n                continue;\n            }\n\n            // not supported list levels in ie\n            if (browser.msie) {\n                continue;\n            }\n\n            margin = listData.level || parseFloat(p.style.marginLeft || 0);\n\n            var levelType = type + listIndex;\n            if (!levels[margin]) {\n                levels[margin] = {};\n            }\n\n            if (!rootMargin || rootMargin < 0) {\n                rootMargin = margin;\n                rootIndex = listIndex;\n                lastRootLi = $(placeholder).find(\"[data-list='\" + rootIndex + \"']\").last()[0];\n                rootList = this._createList(type, listType.style);\n                dom.insertBefore(rootList, p);\n                lastMargin = margin;\n                levels[margin][levelType] = rootList;\n            }\n\n            isLastRootLi = lastRootLi === p;\n\n            list = levels[margin][levelType];\n\n            if (margin > lastMargin || !list) {\n                list = this._createList(type, listType.style);\n                levels[margin][levelType] = list;\n                li.appendChild(list);\n            }\n\n            li = this._convertToLi(p);\n            list.appendChild(li);\n\n            if (isLastRootLi) {\n                rootMargin = lastMargin = -1;\n            } else {\n                lastMargin = margin;\n            }\n        }\n    },\n\n    removeAttributes: function(element) {\n        var attributes = element.attributes,\n            i = attributes.length,\n            significantStyles = [],\n            isSignificantCss = function(val) {\n                var significantCss = [\"border\", \"background\", \"padding\"];\n\n                return significantCss.filter(function(cssAttr) {\n                    return val.trim().indexOf(cssAttr) === 0;\n                }).length > 0;\n            },\n            addSignificantStyles = function(val) {\n                if (isSignificantCss(val)) {\n                    significantStyles.push(val.trim());\n                }\n            },\n            attr, attributeName, attributeValues;\n\n        while (i--) {\n            if (dom.name(attributes[i]) != \"colspan\") {\n                attr = attributes[i];\n                attributeName = attr.name;\n\n                if (attributeName === \"style\" && (element.nodeName === \"TD\" || element.nodeName === \"TH\")) {\n                    attributeValues = attr.value.split(\";\");\n                    attributeValues.forEach(addSignificantStyles);\n                }\n\n                element.removeAttributeNode(attributes[i]);\n            }\n        }\n\n        if (significantStyles.length > 0) {\n            element.setAttribute(\"style\", significantStyles.join(\";\"));\n        }\n    },\n\n    createColGroup: function(row) {\n        var cells = row.cells;\n        var table = $(row).closest(\"table\");\n        var colgroup = table.children(\"colgroup\");\n\n        if (cells.length < 2) {\n            return;\n        } else if (colgroup.length) {\n            cells = colgroup.children();\n            colgroup[0].parentNode.removeChild(colgroup[0]);\n        }\n\n        colgroup = $($.map(cells, function(cell) {\n                var width = cell.width;\n                if (width && parseInt(width, 10) !== 0) {\n                    return kendo.format('<col style=\"width:{0}px;\"/>', width);\n                }\n\n                return \"<col />\";\n            }).join(\"\"));\n\n        // jquery 1.9/2.0 discrepancy\n        if (!colgroup.is(\"colgroup\")) {\n            colgroup = $(\"<colgroup/>\").append(colgroup);\n        }\n\n        colgroup.prependTo(table);\n    },\n\n    convertHeaders: function(row) {\n        var cells = row.cells,\n            i,\n            boldedCells = $.map(cells, function(cell) {\n                var child = $(cell).children(\"p\").children(\"strong\")[0];\n\n                if (child && dom.name(child) == \"strong\") {\n                    return child;\n                }\n            });\n\n        if (boldedCells.length == cells.length) {\n            for (i = 0; i < boldedCells.length; i++) {\n                dom.unwrap(boldedCells[i]);\n            }\n\n            $(row).closest(\"table\")\n                .find(\"colgroup\").after(\"<thead></thead>\").end()\n                .find(\"thead\").append(row);\n\n            for (i = 0; i < cells.length; i++) {\n                dom.changeTag(cells[i], \"th\");\n            }\n        }\n    },\n\n    removeParagraphs: function(cells) {\n        var i, j, len, cell, paragraphs;\n\n        for (i = 0; i < cells.length; i++) {\n            this.removeAttributes(cells[i]);\n\n            // remove paragraphs and insert line breaks between them\n            cell = $(cells[i]);\n            paragraphs = cell.children(\"p\");\n\n            for (j = 0, len = paragraphs.length; j < len; j++) {\n                if (j < len - 1) {\n                    dom.insertAfter(dom.create(document, \"br\"), paragraphs[j]);\n                }\n\n                dom.unwrap(paragraphs[j]);\n            }\n        }\n    },\n\n    removeTextNodes: function(trs) {\n        var i, j, childNodes, currentNode, row;\n\n        for (i = 0; i < trs.length; i++) {\n            row = trs[i];\n            childNodes = row.childNodes;\n\n            for (j = 0; j < childNodes.length; j++) {\n                currentNode = childNodes[j];\n\n                if (currentNode.nodeType === dom.nodeTypes.TEXT_NODE) {\n                    row.removeChild(currentNode);\n                }\n            }\n        }\n    },\n\n    tables: function(placeholder) {\n        var tables = $(placeholder).find(\"table\"),\n            that = this,\n            rows,\n            firstRow, longestRow, i, j;\n\n        for (i = 0; i < tables.length; i++) {\n            rows = tables[i].rows;\n            longestRow = firstRow = rows[0];\n\n            for (j = 1; j < rows.length; j++) {\n                if (rows[j].cells.length > longestRow.cells.length) {\n                    longestRow = rows[j];\n                }\n            }\n\n            that.createColGroup(longestRow);\n            that.convertHeaders(firstRow);\n\n            that.removeAttributes(tables[i]);\n\n            that.removeParagraphs(tables.eq(i).find(\"td,th\"));\n\n            that.removeTextNodes(tables.eq(i).find(\"tr\"));\n        }\n    },\n\n    headers: function(placeholder) {\n        var titles = $(placeholder).find(\"p.MsoTitle\");\n\n        for (var i = 0; i < titles.length; i++) {\n            dom.changeTag(titles[i], \"h1\");\n        }\n    },\n\n    removeFormatting: function(placeholder) {\n        $(placeholder).find(\"*\").each(function() {\n            $(this).css({\n                fontSize: \"\",\n                fontFamily: \"\"\n            });\n\n            if (!this.getAttribute(\"style\") && !this.style.cssText) {\n                this.removeAttribute(\"style\");\n            }\n        });\n    },\n\n    clean: function(html) {\n        var that = this, placeholder;\n        var filters = this.options;\n\n        if (filters.none) {\n            html = Cleaner.fn.clean.call(that, html, this.junkReplacements);\n            html = that.stripEmptyAnchors(html);\n        } else {\n\n            html = filters.msConvertLists ? this.extractListLevels(html) : html;\n            html = Cleaner.fn.clean.call(that, html);\n            html = that.stripEmptyAnchors(html);\n\n            placeholder = dom.create(document, 'div', { innerHTML: html });\n            that.headers(placeholder);\n\n            if (filters.msConvertLists) {\n                that.lists(placeholder);\n            }\n            that.tables(placeholder);\n\n            if (filters.msAllFormatting) {\n                that.removeFormatting(placeholder);\n            }\n\n            html = placeholder.innerHTML.replace(/(<[^>]*)\\s+class=\"?[^\"\\s>]*\"?/ig, '$1');\n        }\n\n        return html;\n    }\n});\n\nvar WebkitFormatCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.replacements = [\n            /\\s+class=\"Apple-style-span[^\"]*\"/gi, '',\n            /<(div|p|h[1-6])\\s+style=\"[^\"]*\"/gi, '<$1',\n            /^<div>(.*)<\\/div>$/, '$1'\n        ];\n    },\n\n    applicable: function(html) {\n        return (/class=\"?Apple-style-span|style=\"[^\"]*-webkit-nbsp-mode/i).test(html);\n    }\n});\n\nvar DomCleaner = Cleaner.extend({\n    clean: function(html) {\n        var container = dom.create(document, 'div', { innerHTML: html });\n        container = this.cleanDom(container);\n        return container.innerHTML;\n    },\n\n    cleanDom: function(container) {\n        return container;\n    }\n});\n\nvar HtmlTagsCleaner = DomCleaner.extend({\n    cleanDom: function(container) {\n        var tags = this.collectTags();\n\n        $(container).find(tags).each(function() {\n            dom.unwrap(this);\n        });\n\n        return container;\n    },\n\n    collectTags: function() {\n        if (this.options.span) {\n            return \"span\";\n        }\n    },\n\n    applicable: function() {\n        return this.options.span;\n    }\n});\n\nvar HtmlAttrCleaner = DomCleaner.extend({\n    cleanDom: function(container) {\n        var attributes = this.collectAttr();\n        var nodes = $(container).find(\"[\" + attributes.join(\"],[\") + \"]\");\n        nodes.removeAttr(attributes.join(\" \"));\n\n        return container;\n    },\n\n    collectAttr: function() {\n        if (this.options.css) {\n            return [\"class\", \"style\"];\n        }\n\n        return [];\n    },\n\n    applicable: function() {\n        return this.options.css;\n    }\n});\n\nvar TextContainer = function() {\n    this.text = \"\";\n    this.add = function(text) {\n        this.text += text;\n    };\n};\n\nvar HtmlTextLines = Class.extend({\n    init: function(separators) {\n        this.separators = separators || {\n                text: \" \",\n                line: \"<br/>\"\n            };\n        this.lines = [];\n        this.inlineBlockText = [];\n        this.resetLine();\n    },\n\n    appendText: function(text) {\n        if (text.nodeType === 3) {\n            text = text.nodeValue;\n        }\n\n        this.textContainer.add(text);\n    },\n\n    appendInlineBlockText: function(text) {\n        this.inlineBlockText.push(text);\n    },\n\n    flashInlineBlockText: function() {\n        if (this.inlineBlockText.length) {\n            this.appendText(this.inlineBlockText.join(\" \"));\n            this.inlineBlockText = [];\n        }\n    },\n\n    endLine: function() {\n        this.flashInlineBlockText();\n        this.resetLine();\n    },\n\n    html: function() {\n        var separators = this.separators;\n        var result = \"\";\n        var lines = this.lines;\n\n        this.flashInlineBlockText();\n\n        for (var i = 0, il = lines.length, il1 = il - 1; i < il; i++) {\n            var line = lines[i];\n            for (var j = 0, jl = line.length, jl1 = jl - 1; j < jl; j++) {\n                var text = line[j].text;\n                result += text;\n                if (j !== jl1) {\n                    result += separators.text;\n                }\n            }\n            if (i !== il1) {\n                result += separators.line;\n            }\n        }\n\n        return result;\n    },\n\n    resetLine: function() {\n        this.textContainer = new TextContainer();\n        this.line = [];\n        this.line.push(this.textContainer);\n        this.lines.push(this.line);\n    }\n});\n\nvar DomEnumerator = Class.extend({\n    init: function(callback) {\n        this.callback = callback;\n    },\n    enumerate: function(node) {\n        if (!node) {\n            return;\n        }\n\n        var preventDown = this.callback(node);\n\n        var child = node.firstChild;\n        if (!preventDown && child) {\n            this.enumerate(child);\n        }\n\n        this.enumerate(node.nextSibling);\n    }\n});\n\nvar HtmlContentCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n        this.hasText = false; //unpleasant flag to prevent an empty line at the beginning of the generated content.\n        this.enumerator = new DomEnumerator(this.buildText.bind(this));\n    },\n\n    clean: function(html) {\n        var container = dom.create(document, 'div', { innerHTML: html });\n\n        return this.cleanDom(container);\n    },\n\n    cleanDom: function(container) {\n        this.separators = this.getDefaultSeparators();\n        this.htmlLines = new HtmlTextLines(this.separators);\n        this.enumerator.enumerate(container.firstChild);\n        this.hasText = false;\n\n        return this.htmlLines.html();\n    },\n\n    buildText: function(node) {\n        if (dom.isDataNode(node)) {\n            if (dom.isEmptyspace(node)) {\n                return;\n            }\n            this.htmlLines.appendText(node.nodeValue.replace('\\n', this.separators.line));\n            this.hasText = true;\n        } else if (dom.isBlock(node) && this.hasText) {\n            var action = this.actions[dom.name(node)] || this.actions.block;\n            return action(this, node);\n        } else if (dom.isBr(node)) {\n            this.htmlLines.appendText(this.separators.line);\n        }\n    },\n\n    applicable: function() {\n        var o = this.options;\n        return o.all || o.keepNewLines;\n    },\n\n    getDefaultSeparators: function() {\n        if (this.options.all) {\n            return { text: \" \", line: \" \" };\n        } else {\n            return { text: \" \", line: \"<br/>\" };\n        }\n    },\n\n    actions: {\n        ul: $.noop,\n        ol: $.noop,\n        table: $.noop,\n        thead: $.noop,\n        tbody: $.noop,\n        td: function(cleaner, node) {\n            var tdCleaner = new HtmlContentCleaner({ all: true });\n\n            var cellText = tdCleaner.cleanDom(node);\n            cleaner.htmlLines.appendInlineBlockText(cellText);\n\n            return true;\n        },\n\n        block: function(cleaner) {\n            cleaner.htmlLines.endLine();\n        }\n    }\n});\n\nvar CustomCleaner = Cleaner.extend({\n    clean: function(html) {\n        return this.options.custom(html);\n    },\n\n    applicable: function() {\n        return typeof(this.options.custom) === \"function\";\n    }\n});\n\nextend(editorNS, {\n    Clipboard: Clipboard,\n    Cleaner: Cleaner,\n    ScriptCleaner: ScriptCleaner,\n    TabCleaner: TabCleaner,\n    MSWordFormatCleaner: MSWordFormatCleaner,\n    WebkitFormatCleaner: WebkitFormatCleaner,\n    HtmlTagsCleaner: HtmlTagsCleaner,\n    HtmlAttrCleaner: HtmlAttrCleaner,\n    HtmlContentCleaner: HtmlContentCleaner,\n    HtmlTextLines: HtmlTextLines,\n    CustomCleaner: CustomCleaner\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    editorNS = kendo.ui.editor,\n    RangeUtils = editorNS.RangeUtils,\n    dom = editorNS.Dom,\n    RestorePoint = editorNS.RestorePoint,\n    Marker = editorNS.Marker,\n    browser = kendo.support.browser,\n    bomSpan = \"<span  class='k-br'>\\ufeff</span>\",\n    extend = $.extend;\nvar nodeTypes = dom.nodeTypes;\nvar PREVIOUS_SIBLING = \"previousSibling\";\n\nfunction selected(node, range) {\n    return range.startContainer === node && range.endContainer === node &&\n        range.startOffset === 0 && range.endOffset == node.childNodes.length;\n}\n\nfunction getSibling(node, direction, condition) {\n    var sibling = node ? node[direction] : null;\n\n    while (sibling && !condition(sibling)) {\n        sibling = sibling[direction];\n    }\n\n    return sibling;\n}\n\nvar tableCells = \"td,th,caption\";\nvar tableCellsWrappers = \"table,tbody,thead,tfoot,tr\";\nvar tableElements = tableCellsWrappers + \",\" + tableCells;\nvar inTable = function(range) { return !range.collapsed && $(range.commonAncestorContainer).is(tableCellsWrappers); };\n\nvar RemoveTableContent = Class.extend({\n    remove: function(range) {\n        var that = this;\n        var marker = new Marker();\n        marker.add(range, false);\n\n        var nodes = RangeUtils.getAll(range, function(node) { return $(node).is(tableElements); });\n        var doc = RangeUtils.documentFromRange(range);\n        var start = marker.start;\n        var end = marker.end;\n        var cellsTypes = tableCells.split(\",\");\n        var startCell = dom.parentOfType(start, cellsTypes);\n        var endCell = dom.parentOfType(end, cellsTypes);\n        that._removeContent(start, startCell, true);\n        that._removeContent(end, endCell, false);\n        $(nodes).each(function(i, node) {\n            node = $(node);\n            (node.is(tableCells) ? node : node.find(tableCells)).each(function(j, cell) {\n                cell.innerHTML = \"&#65279;\";\n            });\n        });\n        if (startCell && !start.previousSibling) {\n            dom.insertBefore(doc.createTextNode(\"\\ufeff\"), start);\n        }\n        if (endCell && !end.nextSibling) {\n            dom.insertAfter(doc.createTextNode(\"\\ufeff\"), end);\n        }\n        if (startCell) {\n            range.setStartBefore(start);\n        } else if (nodes[0]) {\n            startCell = $(nodes[0]);\n            startCell = startCell.is(tableCells) ? startCell : startCell.find(tableCells).first();\n            if (startCell.length) {\n                range.setStart(startCell.get(0), 0);\n            }\n        }\n\n        range.collapse(true);\n\n        dom.remove(start);\n        dom.remove(end);\n    },\n    _removeContent: function(start, top, forwards) {\n        if (top) {\n            var sibling = forwards ? \"nextSibling\" : \"previousSibling\",\n                next,\n                getNext = function(node) {\n                    while (node && !node[sibling]) {\n                        node = node.parentNode;\n                    }\n                    return node && $.contains(top, node) ? node[sibling] : null;\n                };\n            start = getNext(start);\n            while (start) {\n                next = getNext(start);\n                dom.remove(start);\n                start = next;\n            }\n        }\n    }\n});\n\nvar TypingHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n\n    keydown: function(e) {\n        var that = this,\n            editor = that.editor,\n            keyboard = editor.keyboard,\n            isTypingKey = keyboard.isTypingKey(e),\n            evt = extend($.Event(), e);\n\n        that.editor.trigger(\"keydown\", evt);\n\n        if (evt.isDefaultPrevented() || (e && e.isDefaultPrevented())) {\n            e.preventDefault();\n            return true;\n        }\n\n        if (!evt.isDefaultPrevented() && isTypingKey && !keyboard.isTypingInProgress()) {\n            var range = editor.getRange();\n            var body = editor.body;\n            that.startRestorePoint = new RestorePoint(range, body);\n\n            if (inTable(range)) {\n                var removeTableContent = new RemoveTableContent(editor);\n                removeTableContent.remove(range);\n                editor.selectRange(range);\n            }\n\n            if (browser.webkit && !range.collapsed && selected(body, range)) {\n                body.innerHTML = \"\";\n            }\n\n            if (editor.immutables && editorNS.Immutables.immutablesContext(range)) {\n                var backspaceHandler = new editorNS.BackspaceHandler(editor);\n                backspaceHandler.deleteSelection(range);\n            }\n\n            keyboard.startTyping(function() {\n                that._removeBomSpan();\n                that.endRestorePoint = editorNS._finishUpdate(editor, that.startRestorePoint);\n            });\n\n            return true;\n        }\n\n        return false;\n    },\n\n    keyup: function(e) {\n        var keyboard = this.editor.keyboard;\n\n        this.editor.trigger(\"keyup\", e);\n\n        if (keyboard.isTypingInProgress()) {\n            keyboard.endTyping();\n            return true;\n        }\n\n        return false;\n    },\n\n    _removeBomSpan: function() {\n        var node = this.editor.getRange().commonAncestorContainer;\n\n        if (!dom.emptyNode(node)) {\n            if (node.nodeType === 3) {\n                node = node.parentNode;\n            }\n\n            if (dom.insignificant(node)) {\n                // typing in an insignificant node\n                // make it significant\n                node.textContent = dom.stripBom(node.textContent);\n                dom.unwrap(node);\n            }\n        }\n    }\n});\n\nvar BackspaceHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n    _addCaret: function(container) {\n        var caret = dom.create(this.editor.document, \"a\");\n\n        // Only if not Chrome: Make sure to include cared in the formatted inline node\n        if (!kendo.support.browser.chrome && container.firstChild &&\n            container.firstChild.nodeType === nodeTypes.ELEMENT_NODE) {\n\n            container = container.firstChild;\n        }\n\n        dom.insertAt(container, caret, 0);\n        dom.stripBomNode(caret.previousSibling);\n        dom.stripBomNode(caret.nextSibling);\n        return caret;\n    },\n    _restoreCaret: function(caret) {\n        var range = this.editor.createRange();\n\n        if (!caret.nextSibling && dom.isDataNode(caret.previousSibling)) {\n            range.setStart(caret.previousSibling, caret.previousSibling.length);\n        } else {\n            range.setStartAfter(caret);\n        }\n\n        range.collapse(true);\n        this.editor.selectRange(range);\n        dom.remove(caret);\n    },\n    _handleDelete: function(range) {\n        var node = range.endContainer;\n        var block = dom.closestEditableOfType(node, dom.blockElements);\n\n        if (block && editorNS.RangeUtils.isEndOf(range, block)) {\n            // join with next sibling\n            var next = dom.next(block);\n            if (!next || dom.name(next) != \"p\") {\n                return false;\n            }\n\n            var caretPlaceholder = dom.significantChildNodes(next)[0];\n            caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder)) ? caretPlaceholder : next;\n            var caret = this._addCaret(caretPlaceholder);\n\n            this._merge(block, next);\n\n            this._restoreCaret(caret);\n\n            return true;\n        }\n\n        return false;\n    },\n    _cleanBomBefore: function(range) {\n        var offset = range.startOffset;\n        var node = range.startContainer;\n        var text = node.nodeValue;\n        var count = 0;\n        while (offset - count >= 0 && text[offset - count - 1] == \"\\ufeff\") {\n            count++;\n        }\n\n        if (count > 0) {\n            node.deleteData(offset - count, count);\n\n            range.setStart(node, Math.max(0, offset - count));\n            range.collapse(true);\n\n            this.editor.selectRange(range);\n        }\n    },\n    _handleBackspace: function(range) {\n        var node = range.startContainer;\n        var li = dom.closestEditableOfType(node, ['li']);\n        var block = dom.closestEditableOfType(node, 'p,h1,h2,h3,h4,h5,h6'.split(','));\n        var editor = this.editor;\n        var previousSibling;\n\n        if (dom.isDataNode(node)) {\n            if (range.collapsed && /^\\s[\\ufeff]+$/.test(node.nodeValue)) {\n                range.setStart(node, 0);\n                range.setEnd(node, node.length);\n                editor.selectRange(range);\n                return false;\n            }\n            this._cleanBomBefore(range);\n        }\n\n        previousSibling = getSibling(block, PREVIOUS_SIBLING, function(sibling) {\n            return !dom.htmlIndentSpace(sibling);\n        });\n\n        //deleting the first list item with empty content in IE results in invalid range\n        if (range.collapsed && range.startOffset !== range.endOffset && range.startOffset < 0) {\n            range.startOffset = 0;\n            range.endOffset = 0;\n            editor.selectRange(range);\n        }\n\n        var startAtLi = li && editorNS.RangeUtils.isStartOf(range, li);\n        var liIndex = li && $(li).index();\n        var startAtNonFirstLi = startAtLi && liIndex > 0;\n        if (startAtNonFirstLi) {\n            block = li;\n            previousSibling = dom.prev(li);\n        }\n\n        if (block && previousSibling && dom.is(previousSibling, 'table') && editorNS.RangeUtils.isStartOf(range, block)) {\n            if (block.innerText === '') {\n                block.innerHTML = '\\ufeff';\n            }\n            return true;\n        }\n\n        // outdent\n        if (editorNS.RangeUtils.isStartOf(range, block) && parseInt(block.style.marginLeft,10) > 0) {\n            editor.exec(\"outdent\");\n            return true;\n        }\n\n        // unwrap block\n        if ((block && previousSibling && editorNS.RangeUtils.isStartOf(range, block)) || startAtNonFirstLi) {\n            var caretPlaceholder = dom.significantChildNodes(block)[0];\n            caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder) && !dom.isImg(caretPlaceholder)) ? caretPlaceholder : block;\n\n            var caret = this._addCaret(caretPlaceholder);\n            this._merge(previousSibling, block);\n            this._restoreCaret(caret);\n\n            return true;\n        }\n\n        // unwrap li element\n        if (startAtLi && liIndex === 0) {\n            var child = li.firstChild;\n            if (!child) {\n                li.innerHTML = editorNS.emptyElementContent;\n                child = li.firstChild;\n            }\n\n            var formatter = new editorNS.ListFormatter(dom.name(li.parentNode), \"p\");\n            range.selectNodeContents(li);\n            formatter.toggle(range);\n\n            if (dom.insignificant(child)) {\n                range.setStartBefore(child);\n            } else {\n                range.setStart(child, 0);\n            }\n\n            editor.selectRange(range);\n\n            return true;\n        }\n\n        var rangeStartNode = node.childNodes[range.startOffset - 1];\n        var linkRange = range;\n        var anchor = rangeStartNode && dom.closestEditableOfType(rangeStartNode, ['a']);\n        var previousNode = getSibling(rangeStartNode || node, PREVIOUS_SIBLING, function(sibling) {\n            return !dom.isDataNode(sibling) || (!dom.isBom(sibling) && sibling.length > 0);\n        });\n        if (anchor || ((range.startOffset === 0 || rangeStartNode) && dom.is(previousNode, \"a\"))) {\n            anchor = anchor || previousNode;\n            linkRange = editor.createRange();\n            linkRange.setStart(anchor, anchor.childNodes.length);\n            linkRange.collapse(true);\n        }\n\n        anchor = anchor || dom.closestEditableOfType(rangeStartNode || linkRange.startContainer, ['a']);\n        var isEndOfLink = anchor && editorNS.RangeUtils.isEndOf(linkRange, anchor);\n        if (isEndOfLink) {\n            var command = new editorNS.UnlinkCommand({ range: linkRange, body: editor.body, immutables: !!editor.immutables });\n            editor.execCommand(command);\n            editor._selectionChange();\n        }\n        return false;\n    },\n    _handleSelection: function(range) {\n        var ancestor = range.commonAncestorContainer;\n        var table = dom.closest(ancestor, \"table\");\n        var emptyParagraphContent = editorNS.emptyElementContent;\n        var editor = this.editor;\n        var parentElementOrNode;\n\n        if (inTable(range)) {\n            var removeTableContent = new RemoveTableContent(editor);\n            removeTableContent.remove(range);\n            editor.selectRange(range);\n            return true;\n        }\n\n        var marker = new Marker();\n        marker.add(range, false);\n\n        if (range.commonAncestorContainer === editor.body) {\n            this._surroundFullyContent(marker, range);\n        }\n\n        if (editor.immutables) {\n            this._handleImmutables(marker);\n        }\n\n        this._surroundFullySelectedAnchor(marker, range);\n\n        range.setStartAfter(marker.start);\n        range.setEndBefore(marker.end);\n\n        var start = range.startContainer;\n        var end = range.endContainer;\n\n        range.deleteContents();\n\n        if (end.tagName.toLocaleLowerCase() === \"li\" && dom.emptyNode(end)) {\n            range.selectNode(end);\n            range.deleteContents();\n        }\n\n        if (table && $(table).text() === \"\") {\n            range.selectNode(table);\n            range.deleteContents();\n        }\n\n        ancestor = range.commonAncestorContainer;\n\n        if (dom.name(ancestor) === \"p\" && ancestor.innerHTML === \"\") {\n            ancestor.innerHTML = emptyParagraphContent;\n            range.setStart(ancestor, 0);\n        }\n\n        this._join(start, end);\n\n        dom.insertAfter(editor.document.createTextNode(\"\\ufeff\"), marker.start);\n        marker.remove(range);\n\n        start = range.startContainer;\n        if (dom.name(start) == \"tr\") {\n            start = start.childNodes[Math.max(0, range.startOffset - 1)];\n            range.setStart(start, dom.getNodeLength(start));\n        }\n\n        range.collapse(true);\n\n        editor.selectRange(range);\n\n        parentElementOrNode = start.parentElement || start.parentNode;\n\n        if (dom.isDataNode(start) && !dom.emptyNode(parentElementOrNode)) {\n            this._cleanBomBefore(range);\n        }\n\n        return true;\n    },\n    _handleImmutables: function(marker) {\n        var immutableParent = editorNS.Immutables.immutableParent;\n        var startImmutable = immutableParent(marker.start);\n        var endImmutable = immutableParent(marker.start);\n        if (startImmutable) {\n            dom.insertBefore(marker.start, startImmutable);\n        }\n        if (endImmutable) {\n            dom.insertAfter(marker.end, endImmutable);\n        }\n        if (startImmutable) {\n            dom.remove(startImmutable);\n        }\n        if (endImmutable && endImmutable.parentNode) {\n            dom.remove(endImmutable);\n        }\n    },\n    _surroundFullyContent: function(marker, range) {\n        var children = range.commonAncestorContainer.children,\n            startParent = children[0],\n            endParent = children[children.length - 1];\n\n        this._moveMarker(marker, range, startParent, endParent);\n    },\n    _surroundFullySelectedAnchor: function(marker, range) {\n        var start = marker.start,\n            startParent = $(start).closest(\"a\").get(0),\n            end = marker.end,\n            endParent = $(end).closest(\"a\").get(0);\n\n        this._moveMarker(marker, range, startParent, endParent);\n    },\n    _moveMarker: function(marker, range, startParent, endParent) {\n        var start = marker.start,\n            end = marker.end;\n\n        if (startParent && RangeUtils.isStartOf(range, startParent)) {\n            dom.insertBefore(start, startParent);\n        }\n\n        if (endParent && RangeUtils.isEndOf(range, endParent)) {\n            dom.insertAfter(end, endParent);\n        }\n    },\n    _root: function(node) {\n        while (node && dom.name(node) != \"body\" && node.parentNode && dom.name(node.parentNode) != \"body\") {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n    _join: function(start, end) {\n        start = this._root(start);\n        end = this._root(end);\n\n        if (start != end && dom.is(end, \"p\")) {\n            this._merge(start, end);\n        }\n    },\n    _merge: function(dest, src) {\n        dom.removeTrailingBreak(dest);\n\n        while (dest && src.firstChild) {\n            if (dest.nodeType == 1) {\n                dest = dom.list(dest) ? dest.children[dest.children.length - 1] : dest;\n\n                if (dest) {\n                    dest.appendChild(src.firstChild);\n                }\n            } else if (dest.nodeType === nodeTypes.TEXT_NODE) {\n                this._mergeWithTextNode(dest, src.firstChild);\n            } else {\n                dest.parentNode.appendChild(src.firstChild);\n            }\n        }\n\n        dom.remove(src);\n    },\n\n    _mergeWithTextNode: function(textNode, appendedNode) {\n        if (textNode && textNode.nodeType === nodeTypes.TEXT_NODE) {\n            if (textNode.nextSibling && this._isCaret(textNode.nextSibling)) {\n                dom.insertAfter(appendedNode, textNode.nextSibling);\n            }\n            else {\n                dom.insertAfter(appendedNode, textNode);\n            }\n        }\n    },\n\n    _isCaret: function(element) {\n        return $(element).is(\"a\");\n    },\n\n    keydown: function(e) {\n        var method, startRestorePoint;\n        var editor = this.editor;\n        var range = editor.getRange();\n        var keyCode = e.keyCode;\n        var keys = kendo.keys;\n        var backspace = keyCode === keys.BACKSPACE;\n        var del = keyCode == keys.DELETE;\n\n        if (editor.immutables && editor.immutables.keydown(e, range)) {\n            return;\n        }\n\n        if ((backspace || del) && !range.collapsed) {\n            method = \"_handleSelection\";\n        } else if (backspace) {\n            method = \"_handleBackspace\";\n        } else if (del) {\n            method = \"_handleDelete\";\n        }\n\n        if (!method) {\n            return;\n        }\n\n        startRestorePoint = new RestorePoint(range, editor.body);\n\n        if (this[method](range)) {\n            e.preventDefault();\n\n            editorNS._finishUpdate(editor, startRestorePoint);\n        }\n    },\n    deleteSelection: function(range) {\n        this._handleSelection(range);\n    },\n    keyup: $.noop\n});\n\nvar SystemHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n        this.systemCommandIsInProgress = false;\n    },\n\n    createUndoCommand: function() {\n        this.startRestorePoint = this.endRestorePoint = editorNS._finishUpdate(this.editor, this.startRestorePoint);\n    },\n\n    changed: function() {\n        if (this.startRestorePoint) {\n            return this.startRestorePoint.html != this.editor.body.innerHTML;\n        }\n\n        return false;\n    },\n\n    keydown: function(e) {\n        var that = this,\n            editor = that.editor,\n            keyboard = editor.keyboard;\n\n        if (keyboard.isModifierKey(e)) {\n\n            if (keyboard.isTypingInProgress()) {\n                keyboard.endTyping(true);\n            }\n\n            that.startRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n            return true;\n        }\n\n        if (keyboard.isSystem(e)) {\n            that.systemCommandIsInProgress = true;\n\n            if (that.changed()) {\n                that.systemCommandIsInProgress = false;\n                that.createUndoCommand();\n            }\n\n            return true;\n        }\n\n        return false;\n    },\n\n    keyup: function() {\n        var that = this;\n\n        if (that.systemCommandIsInProgress && that.changed()) {\n            that.systemCommandIsInProgress = false;\n            that.createUndoCommand();\n            return true;\n        }\n\n        return false;\n    }\n});\n\nvar SelectAllHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n\n    keydown: function(e) {\n        if (!browser.webkit || e.isDefaultPrevented() ||\n            !(e.ctrlKey && e.keyCode == 65 && !e.altKey && !e.shiftKey)) {\n            return;\n        }\n        if (this.editor.options.immutables) {\n            this._toSelectableImmutables();\n        }\n        this._selectEditorBody();\n    },\n\n    _selectEditorBody: function() {\n        var editor = this.editor;\n        var range = editor.getRange();\n        range.selectNodeContents(editor.body);\n\n        setTimeout(function() {\n            editor.selectRange(range);\n        });\n    },\n\n    _toSelectableImmutables: function() {\n        var editor = this.editor,\n            body = editor.body,\n            immutable = editorNS.Immutables.immutable,\n            emptyTextNode = dom.emptyTextNode,\n            first = body.firstChild,\n            last = body.lastChild;\n\n        while (emptyTextNode(first)) {\n            first = first.nextSibling;\n        }\n\n        while (emptyTextNode(last)) {\n            last = last.previousSibling;\n        }\n\n        if (first && immutable(first)) {\n            $(bomSpan).prependTo(body);\n        }\n\n        if (last && immutable(last)) {\n            $(bomSpan).appendTo(body);\n        }\n    },\n\n    keyup: $.noop\n});\n\nvar Keyboard = Class.extend({\n    init: function(handlers) {\n        this.handlers = handlers;\n        this.typingInProgress = false;\n    },\n\n    isCharacter: function(keyCode) {\n        return (keyCode >= 48 && keyCode <= 90) || (keyCode >= 96 && keyCode <= 111) ||\n               (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222) ||\n               keyCode == 229;\n    },\n\n    toolFromShortcut: function(tools, e) {\n        var key = String.fromCharCode(e.keyCode),\n            toolName,\n            toolOptions,\n            modifier = this._getShortcutModifier(e, navigator.platform);\n\n        for (toolName in tools) {\n            toolOptions = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n            if ((toolOptions.key == key || toolOptions.key == e.keyCode) &&\n                toolOptions.ctrl == modifier &&\n                toolOptions.alt == e.altKey &&\n                toolOptions.shift == e.shiftKey) {\n                return toolName;\n            }\n        }\n    },\n\n    _getShortcutModifier: function(e, platform) {\n        var mac = platform.toUpperCase().indexOf('MAC') >= 0;\n        return mac ? e.metaKey : e.ctrlKey;\n    },\n\n    toolsFromShortcut: function(tools, e) {\n        var key = String.fromCharCode(e.keyCode),\n            toolName,\n            o,\n            matchesKey,\n            found = [];\n        var matchKey = function(toolKey) { return toolKey == key || toolKey == e.keyCode || toolKey == e.charCode; };\n\n        for (toolName in tools) {\n            o = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n            matchesKey = Array.isArray(o.key) ? $.grep(o.key, matchKey).length > 0 : matchKey(o.key);\n            if (matchesKey &&\n                o.ctrl == e.ctrlKey &&\n                o.alt == e.altKey &&\n                o.shift == e.shiftKey) {\n                found.push(tools[toolName]);\n            }\n        }\n\n        return found;\n    },\n\n    isTypingKey: function(e) {\n        var keyCode = e.keyCode;\n        return (this.isCharacter(keyCode) && !e.ctrlKey && !e.altKey) ||\n               keyCode == 32 || keyCode == 13 || keyCode == 8 ||\n               (keyCode == 46 && !e.shiftKey && !e.ctrlKey && !e.altKey);\n    },\n\n    isModifierKey: function(e) {\n        var keyCode = e.keyCode;\n        return (keyCode == 17 && !e.shiftKey && !e.altKey) ||\n               (keyCode == 16 && !e.ctrlKey && !e.altKey) ||\n               (keyCode == 18 && !e.ctrlKey && !e.shiftKey);\n    },\n\n    isSystem: function(e) {\n        return e.keyCode == 46 && e.ctrlKey && !e.altKey && !e.shiftKey;\n    },\n\n    startTyping: function(callback) {\n        this.onEndTyping = callback;\n        this.typingInProgress = true;\n    },\n\n    stopTyping: function() {\n        if (this.typingInProgress && this.onEndTyping) {\n            this.onEndTyping();\n        }\n        this.typingInProgress = false;\n    },\n\n    endTyping: function(force) {\n        var that = this;\n        that.clearTimeout();\n        if (force) {\n            that.stopTyping();\n        } else {\n            that.timeout = window.setTimeout(that.stopTyping.bind(that), 1000);\n        }\n    },\n\n    isTypingInProgress: function() {\n        return this.typingInProgress;\n    },\n\n    clearTimeout: function() {\n        window.clearTimeout(this.timeout);\n    },\n\n    notify: function(e, what) {\n        var i, handlers = this.handlers;\n\n        for (i = 0; i < handlers.length; i++) {\n            if (handlers[i][what](e)) {\n                break;\n            }\n        }\n    },\n\n    keydown: function(e) {\n        this.notify(e, 'keydown');\n    },\n\n    keyup: function(e) {\n        this.notify(e, 'keyup');\n    }\n});\n\nextend(editorNS, {\n    TypingHandler: TypingHandler,\n    SystemHandler: SystemHandler,\n    BackspaceHandler: BackspaceHandler,\n    SelectAllHandler: SelectAllHandler,\n    Keyboard: Keyboard\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        extend = $.extend;\n\nvar ExportPdfCommand = Command.extend({\n    init: function(options) {\n        this.async = true;\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var that = this;\n        var range = that.lockRange(true);\n        var editor = that.editor;\n\n        editor._destroyResizings();\n\n        editor.saveAsPDF().then(function() {\n            that.releaseRange(range);\n            editor._initializeColumnResizing();\n            editor._initializeRowResizing();\n            editor._initializeElementResizing();\n        });\n    }\n});\n\nextend(editorNS, {\n    ExportPdfCommand: ExportPdfCommand\n});\n\nregisterTool(\"pdf\", new Tool({ command: ExportPdfCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        extend = $.extend;\n\nvar PrintCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.managesUndoRedo = true;\n    },\n\n    exec: function() {\n        var editor = this.editor;\n\n        if (kendo.support.browser.msie) {\n            editor.document.execCommand(\"print\", false, null);\n        } else if (editor.window.print) {\n            editor.window.print();\n        }\n    }\n});\n\nextend(editorNS, {\n    PrintCommand: PrintCommand\n});\n\nregisterTool(\"print\", new Tool({ command: PrintCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    Command = Editor.Command,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    registerTool = EditorUtils.registerTool;\n\nvar CopyFormatCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        this.inlineStyles = [];\n        this.blockStyles = [];\n        this.collectStyles(range);\n        this.editor.inlineStyles = this.inlineStyles;\n        this.editor.blockStyles = this.blockStyles;\n        this.releaseRange(range);\n    },\n\n    collectStyles: function(range) {\n        var rangeNodes = RangeUtils.nodes(range);\n        var node;\n\n        if (rangeNodes.length === 1) {\n            node = rangeNodes[0].parentNode;\n        } else {\n            node = range.startContainer;\n        }\n\n        while (node && !dom.is(node, \"body\") && node.getAttribute(\"data-role\") !== \"editor\") {\n            if (dom.isBlock(node)) {\n                this.populateStyles(node, \"blockStyles\");\n                if (dom.is(node, \"li\")) {\n                    node = node.parentNode;\n                } else {\n                    node = null;\n                }\n            } else {\n                this.populateStyles(node, \"inlineStyles\");\n                node = node.parentNode;\n            }\n        }\n    },\n\n    populateStyles: function(node, destination) {\n        var styles = node.style;\n        var attributes = node.attributes;\n        var nodeStyles = {\n            tags: [ node.tagName ],\n            attr: {\n                style: {}\n            }\n        };\n        var styleValue, styleKey, attributeKey, attributeValue, i;\n\n        if (styles) {\n            for (i = 0; i < styles.length; i++) {\n                styleKey = styles[i];\n                styleValue = styles[styleKey];\n                nodeStyles.attr.style[styleKey] = styleValue;\n            }\n        }\n\n        if (attributes) {\n            for (i = 0; i < attributes.length; i++) {\n                attributeKey = attributes[i].nodeName;\n                attributeValue = attributes[i].nodeValue;\n                if (attributeKey === \"style\") {\n                    continue;\n                } else if (attributeKey === \"class\") {\n                    nodeStyles.attr.className = attributeValue;\n                } else {\n                    nodeStyles.attr[attributeKey] = attributeValue;\n                }\n            }\n        }\n\n        this[destination].push(nodeStyles);\n    }\n});\n\nvar ApplyFormatCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        var markers = RangeUtils.getMarkers(range);\n        var editor = this.editor;\n        var inlineStyles = editor.inlineStyles;\n        var blockStyles = editor.blockStyles;\n        var nodes;\n\n        if ((!inlineStyles || inlineStyles.length === 0) && (!blockStyles || blockStyles.length === 0)) {\n            return;\n        }\n\n        if (markers.length === 3) {\n            this.marker.removeCaret(range);\n            this.marker.caret = null;\n        }\n\n        this.removeEmptyElementsFromRange(range);\n        nodes = RangeUtils.nodes(range);\n        this.cleanInlineParents(nodes);\n        dom.normalize(range.commonAncestorContainer);\n\n        if (markers.length === 2) {\n            range.setStartAfter(markers[0]);\n            range.setEndBefore(markers[1]);\n        } else {\n            range.setStartBefore(nodes[0]);\n            range.setEndAfter(nodes[0]);\n        }\n\n        nodes = RangeUtils.nodes(range);\n\n        if (nodes && blockStyles && blockStyles.length) {\n            this.applyBlockStyles(nodes, blockStyles);\n        }\n\n        if (nodes && inlineStyles && inlineStyles.length) {\n            this.applyInlineStyles(nodes, inlineStyles);\n        }\n\n        this.releaseRange(range);\n    },\n\n    removeEmptyElementsFromRange: function(range) {\n        var isEmptyInline = function(node) {\n            return dom.isInline(node) && !node.firstChild && !dom.isMarker(node);\n        };\n        var emptyElements, i;\n\n        emptyElements = RangeUtils.getAll(range, isEmptyInline);\n\n        if (emptyElements && emptyElements.length > 0) {\n            for (i = 0; i < emptyElements.length; i++) {\n                emptyElements[i].parentNode.removeChild(emptyElements[i]);\n            }\n        }\n    },\n\n    cleanInlineParents: function(nodes) {\n        var i, node, parent, children, j, child, newNode;\n\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            parent = node.parentNode;\n\n            if (this.immutableParent(node)) {\n                continue;\n            }\n\n            while (parent && dom.isInline(parent)) {\n                children = parent.childNodes;\n\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n\n                    if (!dom.isMarker(child) && child !== node) {\n                        newNode = parent.cloneNode(true);\n                        newNode.innerHTML = \"\";\n                        dom.wrap(child, newNode);\n                    }\n                }\n\n                dom.unwrap(parent);\n                parent = node.parentNode;\n            }\n        }\n    },\n\n    applyBlockStyles: function(nodes, blockStyles) {\n        var formatTag = blockStyles[0].tags[0];\n        var attr = blockStyles[0].attr;\n        var document = this.editor.document;\n        var i, len, node, wrapper, blockParent, outerWrapper;\n        var previousNodes, nextNodes, previous, next, prevWrapper, nextWrapper, child, j, listItems;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            node = nodes[i];\n\n            if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                continue;\n            }\n\n            blockParent = dom.blockParentOrBody(node);\n\n            if (blockParent.tagName !== \"BODY\" && blockParent.tagName !== formatTag) {\n                if (blockParent.tagName !== \"LI\" && blockParent.tagName !== \"TD\" && blockParent.tagName !== \"TH\") {\n                    previousNodes = [];\n                    nextNodes = [];\n                    previous = node.previousSibling;\n                    next = node.nextSibling;\n\n                    while (previous) {\n                        if (!dom.isMarker(previous)) {\n                            previousNodes.push(previous);\n                        }\n\n                        previous = previous.previousSibling;\n                    }\n\n                    if (previousNodes.length) {\n                        prevWrapper = blockParent.cloneNode(true);\n                        prevWrapper.innerHTML = \"\";\n                        dom.insertBefore(prevWrapper, previousNodes[0]);\n\n                        for (j = 0; j < previousNodes.length; j++) {\n                            child = previousNodes[j];\n                            dom.insertAt(prevWrapper, child, 0);\n                        }\n                    }\n\n                    while (next) {\n                        if (!dom.isMarker(next)) {\n                            nextNodes.push(next);\n                        }\n\n                        next = next.nextSibling;\n                    }\n\n                    if (nextNodes.length) {\n                        nextWrapper = blockParent.cloneNode(true);\n                        nextWrapper.innerHTML = \"\";\n                        dom.insertBefore(nextWrapper, nextNodes[0]);\n\n                        for (j = 0; j < nextNodes.length; j++) {\n                            child = nextNodes[j];\n                            nextWrapper.appendChild(child);\n                        }\n                    }\n\n                    dom.unwrap(blockParent);\n                }\n\n                wrapper = dom.create(document, formatTag, attr);\n                dom.wrap(node, wrapper);\n            } else if (blockParent.tagName === formatTag) {\n                dom.attr(blockParent, attr);\n            }\n        }\n\n        if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\" && formatTag === \"LI\") {\n            listItems = [];\n\n            while (dom.is(wrapper, \"li\")) {\n                listItems.push(wrapper);\n                wrapper = dom.prev(wrapper);\n            }\n\n            outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n            dom.insertBefore(outerWrapper, listItems[listItems.length - 1]);\n            outerWrapper.appendChild(listItems[0]);\n\n            for (i = 1, len = listItems.length; i < len; i++) {\n                dom.insertBefore(listItems[i], outerWrapper.firstChild);\n            }\n        } else if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\") {\n            outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n            dom.wrap(wrapper, outerWrapper);\n        }\n    },\n\n    applyInlineStyles: function(nodes, inlineStyles) {\n        var document = this.editor.document;\n        var currentStyle, createdNode, topNode, i, newNode, node;\n\n        for (i = 0; i < inlineStyles.length; i++) {\n            currentStyle = inlineStyles[i];\n            createdNode = dom.create(document, currentStyle.tags[0], currentStyle.attr);\n\n            if (topNode) {\n                createdNode.appendChild(topNode);\n            }\n\n            topNode = createdNode;\n        }\n\n        if (topNode) {\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n                if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                    continue;\n                }\n                newNode = topNode.cloneNode(true);\n                dom.insertBefore(newNode, node);\n\n                while (newNode.children && newNode.children.length) {\n                    newNode = newNode.children[0];\n                }\n\n                newNode.appendChild(node);\n            }\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    immutableParent: function(node) {\n        return this.immutables() && Editor.Immutables.immutableParent(node);\n    }\n});\n\nvar CopyFormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        return new CopyFormatCommand(commandArguments);\n    }\n});\n\nvar ApplyFormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        return new ApplyFormatCommand(commandArguments);\n    }\n});\n\n$.extend(Editor, {\n    CopyFormatCommand: CopyFormatCommand,\n    ApplyFormatCommand: ApplyFormatCommand,\n    CopyFormatTool: CopyFormatTool,\n    ApplyFormatTool: ApplyFormatTool\n});\n\nregisterTool(\"copyFormat\", new CopyFormatTool({ }));\nregisterTool(\"applyFormat\", new ApplyFormatTool({ }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    const kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        formats = kendo.ui.Editor.fn.options.formats,\n        dom = Editor.Dom,\n        Tool = Editor.Tool,\n        DelayedExecutionTool = Editor.DelayedExecutionTool,\n        BlockFormatter = Editor.BlockFormatter,\n        FormatCommand = Editor.FormatCommand,\n        GreedyInlineFormatFinder = Editor.GreedyInlineFormatFinder,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        registerFormat = EditorUtils.registerFormat,\n        RangeUtils = Editor.RangeUtils,\n        MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n        KEYDOWN_NS = \"keydown.kendoEditor\";\n\n    const LineHeightCommand = FormatCommand.extend({\n        exec: function() {\n            const cmd = this,\n                range = cmd.lockRange(true),\n                nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n            cmd.formatter.format[0].attr.style.lineHeight = cmd.options.value.lineHeight;\n            cmd.formatter.apply(nodes);\n            cmd.releaseRange(range);\n        }\n    });\n\n    const LineHeightFormatTool = DelayedExecutionTool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            this.type = \"kendoComboBox\";\n            this.format = [{ tags: [\"p\", \"lineHeight\"] }];\n            this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr, options.defaultValue);\n        },\n\n        command: function(commandArguments) {\n            var that = this;\n\n            return new LineHeightCommand(extend(commandArguments, {\n                formatter: function() {\n                    return new BlockFormatter(that.options.format);\n                }\n            }));\n        },\n\n        initialize: function(ui, editor) {\n            let tool = this,\n                component = ui.getKendoComboBox();\n\n            tool.editor = editor;\n\n            component.bind(\"change\", this.changeHandler.bind(this));\n            component.bind(\"close\", this.closeHandler.bind(this));\n\n            component.wrapper.on(MOUSEDOWN_NS, \".k-input-button,.k-input-inner\", this.mouseDownHandler.bind(this))\n                .on(KEYDOWN_NS, this.keyDownHandler.bind(this));\n        },\n\n        changeHandler: function(e) {\n            this._exec(e.sender.value());\n        },\n\n        closeHandler: function() {\n            let that = this,\n                editor = that.editor;\n\n            setTimeout(function() {\n                editor._deleteSavedRange();\n                that.currentRange = null;\n            },0);\n        },\n\n        mouseDownHandler: function() {\n            let newRange = this.editor.getRange();\n\n            this.currentRange = this.editor._containsRange(newRange) ? newRange : this.currentRange;\n        },\n\n        keyDownHandler: function(e) {\n            if (e.keyCode === kendo.keys.ENTER) {\n                this.editor._deleteSavedRange();\n                this.currentRange = null;\n                e.preventDefault();\n            }\n        },\n\n        _exec: function(value) {\n            let editor = this.editor;\n            editor._range = this.currentRange;\n            if (value) {\n                Tool.exec(this.editor, this.options.name, { lineHeight: value });\n            }\n        },\n    });\n\n    $.extend(Editor, {\n        LineHeightCommand: LineHeightCommand,\n        LineHeightFormatTool: LineHeightFormatTool\n    });\n\n    registerFormat(\"lineHeight\", [\n        { tags: dom.blockElements, attr: { style: { lineHeight: \"normal\" } } }\n    ]);\n\n    registerTool(\"lineHeight\", new LineHeightFormatTool({\n        cssAttr: \"line-height\",\n        format: formats.lineHeight,\n        defaultValue: 1.15,\n        ui: {\n            type: \"component\",\n            component: \"ComboBox\",\n            componentOptions: {\n                value: 1.15,\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                prefixOptions: {\n                    icon: \"paragraphHeight\"\n                },\n                autoSize: true,\n                dataSource: [\n                    { text: \"1\", value: \"1\" },\n                    { text: \"1.15\", value: \"1.15\" },\n                    { text: \"1.5\", value: \"1.5\" },\n                    { text: \"2\", value: \"2\" },\n                    { text: \"2.5\", value: \"2.5\" },\n                ]\n            }\n        }\n    }));\n})(window.kendo.jQuery);\n\n(function($) {\n\n    const kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        Command = Editor.Command,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        DOM = Editor.Dom,\n        SPACE_UNICODE = \"\\u00B7\",\n        NEW_LINE_UNICODE = \"\\u21B5\";\n\n    const createMark = function(range, document, character, scrollTop, index, scrollableWrapper) {\n        const clonedRange = range.cloneRange(),\n              container = clonedRange.startContainer;\n\n        let domRect, x, y, textNode, parentRect;\n\n        if (index !== undefined && index !== null) {\n            clonedRange.setStart(container, index);\n            clonedRange.setEnd(container, index + 1);\n        }\n\n        domRect = clonedRange.getBoundingClientRect();\n\n        if (scrollableWrapper) {\n            parentRect = scrollableWrapper.getBoundingClientRect();\n            x = domRect.left - parentRect.left - domRect.width / 2;\n            y = domRect.top - parentRect.top + domRect.height + scrollTop;\n        } else {\n            if (character === SPACE_UNICODE) {\n                x = domRect.x - domRect.width / 4;\n                y = domRect.y + domRect.height + scrollTop;\n            } else if (character === NEW_LINE_UNICODE) {\n                x = domRect.x;\n                y = domRect.y + domRect.height + scrollTop;\n            }\n        }\n\n        textNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        textNode.setAttributeNS(null, \"x\", x);\n        textNode.setAttributeNS(null, \"y\", y);\n        textNode.setAttributeNS(null, \"fill\", \"#6098f2\");\n        textNode.setAttributeNS(null, \"font-size\", `${Math.ceil(domRect.height + domRect.width)}px`);\n        textNode.textContent = character;\n\n        return textNode;\n    };\n\n    const appendSvgMarks = function() {\n        const that = this,\n            range = that.getRange().cloneRange(),\n            overlay = that._formattingMarksOverlay[0],\n            fragment = that.document.createDocumentFragment(),\n            document = that.document,\n            isInlineEditor = that._isInlineEditor(),\n            scrollableWrapper = isInlineEditor ? that.body.parentElement : null,\n            scrollTop = isInlineEditor ? scrollableWrapper.scrollTop : document.documentElement.scrollTop;\n\n        if (!that.body.firstChild && !that.body.lastChild) {\n            return;\n        }\n\n        range.setStart(that.body.firstChild, 0);\n        range.setEnd(that.body.lastChild, 0);\n\n        const nodes = DOM.getTextNodes(that.body).concat($(that.body).find(\"br\").toArray());\n\n        nodes.forEach((node) => {\n            if (node.nodeType === DOM.nodeTypes.TEXT_NODE) {\n                range.selectNodeContents(node);\n\n                for (let i = range.startOffset; i < range.endOffset; i++) {\n                    if ((range.startContainer.textContent.charCodeAt(i) === 32 || range.startContainer.textContent.charCodeAt(i) === 160)) {\n                        fragment.appendChild(createMark(range, document, SPACE_UNICODE, scrollTop, i, scrollableWrapper));\n                    }\n                }\n            } else {\n                range.selectNode(node);\n                fragment.appendChild(createMark(range, document, NEW_LINE_UNICODE, scrollTop, null, scrollableWrapper));\n            }\n        });\n\n        overlay.appendChild(fragment);\n    };\n\n    const clearFormattingMarksOverlay = function(editor) {\n        editor._formattingMarksOverlay.empty();\n    };\n\n    const applyFormattingMarks = function(editor) {\n        editor._updateFormattingMarksOverlayHeight();\n        appendSvgMarks.call(editor);\n    };\n\n    const FormattingMarksCommand = Command.extend({\n        exec: function() {\n            const cmd = this,\n                range = cmd.lockRange(true),\n                editor = cmd.editor;\n\n            if (!editor._toggledFormattingMarks) {\n                editor._toggledFormattingMarks = true;\n                editor._appendFormattingMarksOverlay();\n                editor._appendFormattingMarksStyles();\n                clearFormattingMarksOverlay(editor);\n                applyFormattingMarks(editor);\n            } else {\n                editor._toggledFormattingMarks = false;\n                editor._destroyFormattingMarksOverlay();\n            }\n\n            cmd.releaseRange(range);\n        }\n    });\n\n    $.extend(Editor, {\n        FormattingMarksCommand: FormattingMarksCommand,\n        applyFormattingMarks: applyFormattingMarks,\n        clearFormattingMarksOverlay: clearFormattingMarksOverlay\n    });\n\n    registerTool(\"formattingMarks\", new Tool({ command: FormattingMarksCommand, icon: \"paragraphMark\", ui: { togglable: true } }));\n})(window.kendo.jQuery);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var min = math.min;\n    var max = math.max;\n    var parseFloat = global.parseFloat;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n\n    var PERCENTAGE = \"%\";\n    var PIXEL = \"px\";\n    var REGEX_NUMBER_IN_PERCENTAGES = /(\\d+)(\\.?)(\\d*)%/;\n    var REGEX_NUMBER_IN_PIXELS = /(\\d+)(\\.?)(\\d*)px/;\n    var STRING = \"string\";\n\n    function constrain(options) {\n        var value = options.value;\n        var lowerBound = options.min;\n        var upperBound = options.max;\n\n        return max(min(parseFloat(value), parseFloat(upperBound)), parseFloat(lowerBound));\n    }\n\n    function getScrollBarWidth(element) {\n        if (element && !$(element).is(\"body\") && element.scrollHeight > element.clientHeight) {\n            return kendo.support.scrollbar();\n        }\n\n        return 0;\n    }\n\n    function calculatePercentageRatio(value, total) {\n        if (inPercentages(value)) {\n            return parseFloat(value);\n        }\n        else {\n            return ((parseFloat(value) / total) * 100);\n        }\n    }\n\n    function inPercentages(value) {\n        return (typeof(value) === STRING && REGEX_NUMBER_IN_PERCENTAGES.test(value));\n    }\n\n    function inPixels(value) {\n        return (typeof(value) === STRING && REGEX_NUMBER_IN_PIXELS.test(value));\n    }\n\n    function toPercentages(value) {\n        return (parseFloat(value) + PERCENTAGE);\n    }\n\n    function toPixels(value) {\n        return (parseFloat(value) + PIXEL);\n    }\n\n    var ResizingUtils = {\n        constrain: constrain,\n        getScrollBarWidth: getScrollBarWidth,\n        calculatePercentageRatio: calculatePercentageRatio,\n        inPercentages: inPercentages,\n        inPixels: inPixels,\n        toPercentages: toPercentages,\n        toPixels: toPixels\n    };\n\n    extend(Editor, {\n        ResizingUtils: ResizingUtils\n    });\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n    var noop = $.noop;\n\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n\n    var KEY_DOWN = \"keydown\";\n    var MOUSE_DOWN = \"mousedown\";\n    var MOUSE_ENTER = \"mouseenter\";\n    var MOUSE_LEAVE = \"mouseleave\";\n    var MOUSE_MOVE = \"mousemove\";\n    var MOUSE_UP = \"mouseup\";\n\n    var COMMA = \",\";\n    var DOT = \".\";\n    var LAST_CHILD = \":last-child\";\n\n    var TABLE = \"table\";\n\n    var TableElementResizing = Class.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.options = extend({}, that.options, options);\n\n            that.options.tags = Array.isArray(that.options.tags) ? that.options.tags : [that.options.tags];\n\n            if ($(element).is(TABLE)) {\n                that.element = element;\n                that._attachEventHandlers();\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            var eventNamespace = that.options.eventNamespace;\n\n            if (that.element) {\n                $(that.element).off(eventNamespace);\n                that.element = null;\n            }\n\n            $(that.options.rootElement).off(KEY_DOWN + eventNamespace);\n\n            that._destroyResizeHandle();\n        },\n\n        options: {\n            tags: [],\n            min: 0,\n            rootElement: null,\n            eventNamespace: \"\",\n            rtl: false,\n            handle: {\n                dataAttribute: \"\",\n                height: 0,\n                width: 0,\n                classNames: {},\n                template: \"\"\n            }\n        },\n\n        _attachEventHandlers: function() {\n            var that = this;\n            var options = that.options;\n\n            $(that.element).on(MOUSE_MOVE + options.eventNamespace, options.tags.join(COMMA), that.detectElementBorderHovering.bind(that));\n        },\n\n        resizingInProgress: function() {\n            var that = this;\n            var resizable = that._resizable;\n\n            if (resizable) {\n                return !!resizable.resizing;\n            }\n\n            return false;\n        },\n\n        resize: noop,\n\n        detectElementBorderHovering: function(e) {\n            var that = this;\n            var options = that.options;\n            var handleOptions = options.handle;\n            var tableElement = $(e.currentTarget);\n            var resizeHandle = that.resizeHandle;\n            var dataAttribute = handleOptions.dataAttribute;\n\n            if (!that.resizingInProgress()) {\n                if (!tableElement.is(LAST_CHILD) && that.elementBorderHovered(tableElement, e)) {\n                    if (resizeHandle) {\n                        if (resizeHandle.data(dataAttribute) && resizeHandle.data(dataAttribute) !== tableElement[0]) {\n                            that.showResizeHandle(tableElement, e);\n                        }\n                    }\n                    else {\n                        that.showResizeHandle(tableElement, e);\n                    }\n                }\n                else {\n                    if (resizeHandle) {\n                        that._destroyResizeHandle();\n                    }\n                }\n            }\n        },\n\n        elementBorderHovered: noop,\n\n        showResizeHandle: function(tableElement, e) {\n            var that = this;\n\n            if (e.buttons !== 0) {\n                //prevent showing when a mouse button is still being pressed\n                return;\n            }\n\n            that._initResizeHandle();\n            that.setResizeHandlePosition(tableElement);\n            that.setResizeHandleDimensions();\n            that.setResizeHandleDataAttributes(tableElement[0]);\n            that._attachResizeHandleEventHandlers();\n\n            that._initResizable(tableElement);\n\n            that._hideResizeMarker();\n            that.resizeHandle.show();\n        },\n\n        _initResizeHandle: function() {\n            var that = this;\n            var options = that.options;\n\n            that._destroyResizeHandle();\n\n            that.resizeHandle = $(options.handle.template).appendTo(options.rootElement);\n        },\n\n        setResizeHandlePosition: noop,\n\n        setResizeHandleDimensions: noop,\n\n        setResizeHandleDataAttributes: function(tableElement) {\n            var that = this;\n\n            that.resizeHandle.data(that.options.handle.dataAttribute, tableElement);\n        },\n\n        _attachResizeHandleEventHandlers: function() {\n            var that = this;\n            var options = that.options;\n            var eventNamespace = options.eventNamespace;\n            var markerClass = options.handle.classNames.marker;\n            var resizeHandle = that.resizeHandle;\n\n            that.resizeHandle\n                .on(MOUSE_DOWN + eventNamespace, function() {\n                    resizeHandle.find(DOT + markerClass).show();\n                })\n                .on(MOUSE_UP + eventNamespace, function() {\n                    resizeHandle.find(DOT + markerClass).hide();\n                });\n        },\n\n        _hideResizeMarker: function() {\n            var that = this;\n\n            that.resizeHandle.find(DOT + that.options.handle.classNames.marker).hide();\n        },\n\n        _destroyResizeHandle: function() {\n            var that = this;\n\n            if (that.resizeHandle) {\n                that._destroyResizable();\n                that.resizeHandle.off(that.options.eventNamespace).remove();\n                that.resizeHandle = null;\n            }\n        },\n\n        _initResizable: function(tableElement) {\n            var that = this;\n\n            if (!that.resizeHandle) {\n                return;\n            }\n\n            that._destroyResizable();\n\n            that._resizable = new kendo.ui.Resizable(tableElement, {\n                draggableElement: that.resizeHandle[0],\n                start: that.onResizeStart.bind(that),\n                resize: that.onResize.bind(that),\n                resizeend: that.onResizeEnd.bind(that)\n            });\n        },\n\n        _destroyResizable: function() {\n            var that = this;\n\n            if (that._resizable) {\n                that._resizable.destroy();\n                that._resizable = null;\n            }\n        },\n\n        onResizeStart: function() {\n            this._disableKeyboard();\n        },\n\n        onResize: function(e) {\n            this.setResizeHandleDragPosition(e);\n        },\n\n        setResizeHandleDragPosition: noop,\n\n        onResizeEnd: function(e) {\n            var that = this;\n\n            that.resize(e);\n            that._destroyResizeHandle();\n            that._enableKeyboard();\n\n            if (this.options.editor) {\n                this.options.editor._handleSpaceAndNewLines();\n            }\n        },\n\n        _enableKeyboard: function() {\n            var options = this.options;\n\n            $(options.rootElement).off(KEY_DOWN + options.eventNamespace);\n        },\n\n        _disableKeyboard: function() {\n            var options = this.options;\n\n            $(options.rootElement).on(KEY_DOWN + options.eventNamespace, function(e) {\n                e.preventDefault();\n            });\n        },\n\n        _forceResizing: function(e) {\n            var resizable = this._resizable;\n\n            if (resizable && resizable.userEvents) {\n                resizable.userEvents._end(e);\n            }\n        }\n    });\n\n    var ResizingFactory = Class.extend({\n        create: function(editor, options) {\n            var that = this;\n            var resizingName = options.name;\n            var NS = options.eventNamespace;\n\n            $(editor.body)\n                .on(MOUSE_ENTER + NS, TABLE, function(e) {\n                    var table = e.currentTarget;\n                    var resizing = editor[resizingName];\n\n                    e.stopPropagation();\n\n                    if (resizing) {\n                        if (resizing.element !== table && !resizing.resizingInProgress()) {\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, table, options);\n                        }\n                    }\n                    else {\n                        that._initResizing(editor, table, options);\n                    }\n                })\n                .on(MOUSE_LEAVE + NS, TABLE, function(e) {\n                    var parentTable;\n                    var resizing = editor[resizingName];\n\n                    e.stopPropagation();\n\n                    if (resizing && !resizing.resizingInProgress() && !resizing.resizeHandle) {\n                        parentTable = $(resizing.element).parents(TABLE)[0];\n\n                        if (parentTable) {\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, parentTable, options);\n                        }\n                    }\n                })\n                .on(MOUSE_LEAVE + NS, function() {\n                    var resizing = editor[resizingName];\n\n                    if (resizing && !resizing.resizingInProgress()) {\n                        that._destroyResizing(editor, options);\n                    }\n                })\n                .on(MOUSE_UP + NS, function(e) {\n                    var resizing = editor[resizingName];\n                    var parentTable;\n\n                    if (resizing && resizing.resizingInProgress()) {\n                        parentTable = $(e.target).parents(TABLE)[0];\n\n                        if (parentTable) {\n                            resizing._forceResizing(e);\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, parentTable, options);\n                        }\n                    }\n                });\n        },\n\n        dispose: function(editor, options) {\n            $(editor.body).off(options.eventNamespace);\n        },\n\n        _initResizing: function(editor, tableElement, options) {\n            var resizingName = options.name;\n            var resizingType = options.type;\n\n            editor[resizingName] = new resizingType(tableElement, {\n                rtl: kendo.support.isRtl(editor.element),\n                rootElement: editor.body,\n                editor: editor\n            });\n        },\n\n        _destroyResizing: function(editor, options) {\n            var resizingName = options.name;\n\n            if (editor[resizingName]) {\n                editor[resizingName].destroy();\n                editor[resizingName] = null;\n            }\n        }\n    });\n    ResizingFactory.current = new ResizingFactory();\n\n    TableElementResizing.create = function(editor, options) {\n        ResizingFactory.current.create(editor, options);\n    };\n\n    TableElementResizing.dispose = function(editor, options) {\n        ResizingFactory.current.dispose(editor, options);\n    };\n\n    extend(Editor, {\n        TableElementResizing: TableElementResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var abs = math.abs;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n    var dom = Editor.Dom;\n    var TableElementResizing = Editor.TableElementResizing;\n    var ResizingUtils = Editor.ResizingUtils;\n    var constrain = ResizingUtils.constrain;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n    var inPercentages = ResizingUtils.inPercentages;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerWidth = kendo._outerWidth;\n\n    var NS = \".kendoEditorColumnResizing\";\n    var RESIZE_HANDLE_CLASS = \"k-column-resize-handle\";\n    var RESIZE_MARKER_CLASS = \"k-column-resize-marker\";\n\n    var BODY = \"body\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n    var TD = \"td\";\n    var TH = \"th\";\n    var TR = \"tr\";\n\n    var COLATTR = \"col-index\";\n\n    var COMMA = \",\";\n    var WIDTH = \"width\";\n\n    var ColumnResizing = TableElementResizing.extend({\n        options: {\n            tags: [TD, TH],\n            min: 20,\n            rootElement: null,\n            eventNamespace: NS,\n            rtl: false,\n            handle: {\n                dataAttribute: \"column\",\n                width: 10,\n                height: 0,\n                classNames: {\n                    handle: RESIZE_HANDLE_CLASS,\n                    marker: RESIZE_MARKER_CLASS\n                },\n                template:\n                    '<div class=\"k-column-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                        '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                            '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                        '</div>' +\n                    '</div>'\n            }\n        },\n\n        elementBorderHovered: function(column, e) {\n            var that = this;\n            var options = that.options;\n            var handleWidth = options.handle.width;\n            var borderOffset = column.offset().left + (options.rtl ? 0 : outerWidth(column));\n\n\n            var mousePosition = e.clientX + $(column[0].ownerDocument).scrollLeft();\n\n            if ((mousePosition > (borderOffset - handleWidth)) && (mousePosition < (borderOffset + handleWidth))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n\n        setResizeHandlePosition: function(column) {\n            var that = this;\n            var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n            var options = that.options;\n            var rtl = options.rtl;\n            var handleWidth = options.handle.width;\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var columnWidthOffset = rtl ? 0 : outerWidth(column);\n            var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var columnOffsetLeft = column.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(column.css(\"marginLeft\"));\n            var innerElementOffsetTop = tableInnerElement.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(tableInnerElement.css(\"marginTop\"));\n            var browser = kendo.support.browser;\n\n            if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            that.resizeHandle.css({\n                top: innerElementOffsetTop + scrollTopOffset,\n                left: columnOffsetLeft + columnWidthOffset + (scrollLeftOffset - scrollBarWidth) - (handleWidth / 2),\n                position: \"absolute\"\n            });\n        },\n\n        setResizeHandleDimensions: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableBody = $(that.element).children(TBODY);\n            var fullHeight = tableHead.length > 0 ? tableHead.height() + tableBody.height() : tableBody.height();\n\n            that.resizeHandle.css({\n                width: that.options.handle.width,\n                height: fullHeight\n            });\n        },\n\n        setResizeHandleDragPosition: function(e) {\n            var that = this;\n            var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n            var options = that.options;\n            var rootElement = $(options.rootElement);\n            var handleWidth = options.handle ? options.handle.width : 0;\n            var min = options.min;\n            var rtl = options.rtl;\n            var columnWidth = outerWidth(column);\n            var columnLeftOffset = column.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(column.css(\"marginLeft\"));\n            var adjacentColumnWidth = outerWidth(column.next());\n            var resizeHandle = $(that.resizeHandle);\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var resizeHandleOffsetLeft = resizeHandle.offset().left -\n                                            (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                            parseFloat(resizeHandle.css(\"marginLeft\"));\n            var browser = kendo.support.browser;\n\n            if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            var handleOffset = constrain({\n                value: resizeHandleOffsetLeft + (scrollLeftOffset - scrollBarWidth) + e.x.delta,\n                min: columnLeftOffset + (scrollLeftOffset - scrollBarWidth) - (rtl ? adjacentColumnWidth : 0) + min,\n                max: columnLeftOffset + columnWidth + (scrollLeftOffset - scrollBarWidth) + (rtl ? 0 : adjacentColumnWidth) - handleWidth - min\n            });\n\n            resizeHandle.css({ left: handleOffset });\n        },\n\n        resize: function(e) {\n            var that = this;\n            var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n            var options = that.options;\n            var rtlModifier = options.rtl ? (-1) : 1;\n            var min = options.min;\n            var initialDeltaX = rtlModifier * e.x.initialDelta;\n            var newWidth;\n            var initialAdjacentColumnWidth;\n            var initialColumnWidth;\n            var colIndex;\n            var nextColumn;\n\n            dom.reMapTableColumns(that.element, COLATTR);\n\n            colIndex = parseInt(column.attr(COLATTR), 10);\n\n            if (column.prop(\"colSpan\") > 1) {\n                column = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + column.prop(\"colSpan\") - 1) + \"]\").eq(0);\n                colIndex = parseInt(column.attr(COLATTR), 10);\n            }\n\n            nextColumn = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + 1) + \"]:not([colspan])\");\n\n            that._setTableComputedWidth();\n            that._setColumnsComputedWidth();\n\n            initialColumnWidth = outerWidth(column);\n            initialAdjacentColumnWidth = outerWidth(nextColumn);\n\n            newWidth = constrain({\n                value: initialColumnWidth + initialDeltaX,\n                min: min,\n                max: initialColumnWidth + initialAdjacentColumnWidth - min\n            });\n\n            that._resizeColumn(column[0], newWidth);\n            that._resizeTopAndBottomColumns(column[0], newWidth);\n            that._resizeAdjacentColumns(parseInt(column.attr(COLATTR),10), initialAdjacentColumnWidth, initialColumnWidth, (initialColumnWidth - newWidth));\n\n            dom.clearTableMappings(that.element, COLATTR);\n        },\n\n        _setTableComputedWidth: function() {\n            var element = this.element;\n\n            if (element.style[WIDTH] === \"\") {\n                element.style[WIDTH] = toPixels(outerWidth($(element)));\n            }\n        },\n\n        _setColumnsComputedWidth: function() {\n            var that = this;\n            var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n            var innerElementWidth = outerWidth(tableInnerElement);\n            var columns = tableInnerElement.children(TR).children(TD);\n            var length = columns.length;\n            var currentColumnsWidths = columns.map(function() {\n                return outerWidth($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                if (inPercentages(columns[i].style[WIDTH])) {\n                    columns[i].style[WIDTH] = toPercentages(calculatePercentageRatio(currentColumnsWidths[i], innerElementWidth));\n                }\n                else {\n                    columns[i].style[WIDTH] = toPixels(currentColumnsWidths[i]);\n                }\n            }\n        },\n\n        _resizeTopAndBottomColumns: function(column, newWidth) {\n            var that = this;\n            var columnIndex = $(column).attr(COLATTR);\n            var topAndBottomColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                .filter(function() {\n                    var cell = this;\n                    return ($(cell).attr(COLATTR) === columnIndex && cell !== column);\n                });\n            var length = topAndBottomColumns.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that._resizeColumn(topAndBottomColumns[i], newWidth);\n            }\n        },\n\n        _resizeColumn: function(column, newWidth) {\n            var innerTableElement = $(this.element.tHead || this.element.tBodies[0]);\n            if (inPercentages(column.style[WIDTH])) {\n                column.style[WIDTH] = toPercentages(calculatePercentageRatio(newWidth, outerWidth(innerTableElement)));\n            }\n            else {\n                column.style[WIDTH] = toPixels(newWidth);\n            }\n        },\n\n        _resizeAdjacentColumns: function(columnIndex, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n            var that = this;\n            var adjacentColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                .filter(function() {\n                    return (parseInt($(this).attr(COLATTR),10) === (columnIndex + 1));\n                });\n            var length = adjacentColumns.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that._resizeAdjacentColumn(adjacentColumns[i], initialAdjacentColumnWidth, initialColumnWidth, deltaWidth);\n            }\n        },\n\n        _resizeAdjacentColumn: function(adjacentColumn, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n            var that = this;\n            var min = that.options.min;\n            var newWidth;\n\n            newWidth = constrain({\n                value: initialAdjacentColumnWidth + deltaWidth,\n                min: min,\n                max: abs(initialColumnWidth + initialAdjacentColumnWidth - min)\n            });\n\n            that._resizeColumn(adjacentColumn, newWidth);\n        }\n    });\n\n    ColumnResizing.create = function(editor) {\n        TableElementResizing.create(editor, {\n            name: \"columnResizing\",\n            type: ColumnResizing,\n            eventNamespace: NS\n        });\n    };\n\n    ColumnResizing.dispose = function(editor) {\n        TableElementResizing.dispose(editor, {\n            eventNamespace: NS\n        });\n    };\n\n    extend(Editor, {\n        ColumnResizing: ColumnResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var math = window.Math;\n    var abs = math.abs;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n    var TableElementResizing = Editor.TableElementResizing;\n    var ResizingUtils = Editor.ResizingUtils;\n    var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n    var constrain = ResizingUtils.constrain;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var inPercentages = ResizingUtils.inPercentages;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerHeight = kendo._outerHeight;\n\n    var NS = \".kendoEditorRowResizing\";\n    var RESIZE_HANDLE_CLASS = \"k-row-resize-handle\";\n    var RESIZE_HANDLE_MARKER_WRAPPER_CLASS = \"k-row-resize-marker-wrapper\";\n    var RESIZE_MARKER_CLASS = \"k-row-resize-marker\";\n\n    var BODY = \"body\";\n    var TR = \"tr\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n\n    var COMMA = \",\";\n    var HEIGHT = \"height\";\n\n    var RowResizing = TableElementResizing.extend({\n        options: {\n            tags: [TR],\n            min: 20,\n            rootElement: null,\n            eventNamespace: NS,\n            rtl: false,\n            handle: {\n                dataAttribute: \"row\",\n                width: 0,\n                height: 10,\n                classNames: {\n                    handle: RESIZE_HANDLE_CLASS,\n                    marker: RESIZE_MARKER_CLASS\n                },\n                template:\n                    '<div class=\"k-row-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                        '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                            '<div class=\"' + RESIZE_HANDLE_MARKER_WRAPPER_CLASS + '\">' +\n                                '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</div>'\n            }\n        },\n\n        elementBorderHovered: function(tableElement, e) {\n            var that = this;\n            var handleHeight = that.options.handle[HEIGHT];\n            var borderOffset = tableElement.offset().top + outerHeight(tableElement);\n            var mousePosition = e.clientY + $(tableElement[0].ownerDocument).scrollTop();\n\n            if ((mousePosition > (borderOffset - handleHeight)) && (mousePosition < (borderOffset + handleHeight))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n\n        setResizeHandlePosition: function(row) {\n            var that = this;\n            var options = that.options;\n            var handleHeight = options.handle[HEIGHT];\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n\n            var rowOffsetLeft = row.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(row.css(\"marginLeft\"));\n            var rowOffsetTop = row.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(row.css(\"marginTop\"));\n            var browser = kendo.support.browser;\n\n            if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            that.resizeHandle.css({\n                top: rowOffsetTop + outerHeight(row) + scrollTopOffset - (handleHeight / 2),\n                left: rowOffsetLeft + (scrollLeftOffset - scrollBarWidth),\n                position: \"absolute\"\n            });\n        },\n\n        setResizeHandleDimensions: function() {\n            var that = this;\n            var innerTableElement = $(that.element.tHead || that.element.tBodies[0]);\n\n            that.resizeHandle.css({\n                width: innerTableElement.width(),\n                height: that.options.handle[HEIGHT]\n            });\n        },\n\n        setResizeHandleDragPosition: function(e) {\n            var that = this;\n            var options = that.options;\n            var min = options.min;\n            var tableHead = $(that.element).children(THEAD);\n            var tableBody = $(that.element).children(TBODY);\n            var topInnerTableElement = tableHead.length > 0 ? tableHead : tableBody;\n            var resizeHandle = $(that.resizeHandle);\n            var row = $(e.currentTarget).data(options.handle.dataAttribute);\n            var $row = $(row);\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var tableTopOffset = topInnerTableElement.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(topInnerTableElement.css(\"marginTop\"));\n\n            var rowOffsetTop = $row.offset().top -\n                                (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                parseFloat($row.css(\"marginTop\"));\n\n            var resizeHandleOffsetTop = resizeHandle.offset().top -\n                                (Math.max(0 , rootElement.offset().top) + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                parseFloat(resizeHandle.css(\"marginTop\"));\n\n            var handleOffset = constrain({\n                value: resizeHandleOffsetTop + scrollTopOffset + e.y.delta,\n                min: rowOffsetTop + scrollTopOffset + min,\n                max: tableTopOffset + outerHeight(tableHead) + outerHeight(tableBody) + scrollTopOffset - options.handle[HEIGHT] - min\n            });\n\n            resizeHandle.css({ top: handleOffset });\n        },\n\n        resize: function(e) {\n            var that = this;\n            var options = that.options;\n            var row = $(e.currentTarget).data(options.handle.dataAttribute);\n            var currentRowHeight = outerHeight($(row));\n            var element = $(that.element);\n            var initialTableHeight = outerHeight(element);\n            var tableHead = element.children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = element.children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var initialStyleHeight = row.style[HEIGHT];\n            var newRowHeight = constrain({\n                value: currentRowHeight + e.y.initialDelta,\n                min: options.min,\n                max: abs(tableHeadHeight + tableBodyHeight - options.min)\n            });\n\n            that._setRowsHeightInPixels();\n            row.style[HEIGHT] = toPixels(newRowHeight);\n            that._setTableHeight(initialTableHeight + (newRowHeight - currentRowHeight));\n\n            if (inPercentages(initialStyleHeight)) {\n                //resize rows in percentages as late as possible to prevent incorrect precision calculations\n                that._setRowsHeightInPercentages();\n            }\n        },\n\n        _setRowsHeightInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(TBODY + COMMA + THEAD).children(TR);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n            }\n        },\n\n        _setRowsHeightInPercentages: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = $(that.element).children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(TR);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n            }\n        },\n\n        _setTableHeight: function(newHeight) {\n            var element = this.element;\n\n            if (inPercentages(element.style[HEIGHT])) {\n                element.style[HEIGHT] = toPercentages(calculatePercentageRatio(newHeight, $(element).parent().height()));\n            }\n            else {\n                element.style[HEIGHT] = toPixels(newHeight);\n            }\n        }\n    });\n\n    RowResizing.create = function(editor) {\n        TableElementResizing.create(editor, {\n            name: \"rowResizing\",\n            type: RowResizing,\n            eventNamespace: NS\n        });\n    };\n\n    RowResizing.dispose = function(editor) {\n        TableElementResizing.dispose(editor, {\n            eventNamespace: NS\n        });\n    };\n\n    extend(Editor, {\n        RowResizing: RowResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n    var noop = $.noop;\n\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n    var Draggable = kendo.ui.Draggable;\n    var Observable = kendo.Observable;\n    var getScrollBarWidth = Editor.ResizingUtils.getScrollBarWidth;\n    var outerWidth = kendo._outerWidth;\n    var outerHeight = kendo._outerHeight;\n\n    var NS = \".kendoEditorElementResizeHandle\";\n    var RESIZE_HANDLE_CLASS = \"k-element-resize-handle\";\n\n    var DRAG_START = \"dragStart\";\n    var DRAG = \"drag\";\n    var DRAG_END = \"dragEnd\";\n    var HALF_INSIDE = \"halfInside\";\n    var MOUSE_OVER = \"mouseover\";\n    var MOUSE_OUT = \"mouseout\";\n\n    var BODY = \"body\";\n    var TABLE = \"table\";\n\n    var EAST = \"east\";\n    var NORTH = \"north\";\n    var NORTHEAST = \"northeast\";\n    var NORTHWEST = \"northwest\";\n    var SOUTH = \"south\";\n    var SOUTHEAST = \"southeast\";\n    var SOUTHWEST = \"southwest\";\n    var WEST = \"west\";\n\n    var DOT = \".\";\n\n    var ElementResizeHandle = Observable.extend({\n        init: function(options) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.options = extend({}, that.options, options);\n            that.element = $(that.options.template).appendTo(that.options.appendTo)[0];\n\n            that._attachEventHandlers();\n            that._addStyles();\n            that._initDraggable();\n            that._initPositioningStrategy();\n            that._initDraggingStrategy();\n\n            $(that.element).data(TABLE, that.options.resizableElement);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            $(that.element).off(NS).remove();\n            that.element = null;\n\n            that._destroyDraggable();\n\n            that.unbind();\n        },\n\n        options: {\n            appendTo: null,\n            direction: SOUTHEAST,\n            resizableElement: null,\n            rtl: false,\n            template:\n                \"<div class='k-element-resize-handle-wrapper' unselectable='on' contenteditable='false'>\" +\n                    \"<div class='\" + RESIZE_HANDLE_CLASS + \"'></div>\" +\n                \"</div>\"\n        },\n\n        events: [\n            DRAG_START,\n            DRAG,\n            DRAG_END,\n            MOUSE_OVER,\n            MOUSE_OUT\n        ],\n\n        show: function() {\n            this._setPosition();\n        },\n\n        _setPosition: function() {\n            var that = this;\n            var position = that._positioningStrategy.getPosition();\n\n            $(that.element).css({\n                top: position.top,\n                left: position.left,\n                position: \"absolute\"\n            });\n        },\n\n        _attachEventHandlers: function() {\n            var that = this;\n\n            $(that.element)\n                .on(MOUSE_OVER + NS, that._onMouseOver.bind(that))\n                .on(MOUSE_OUT + NS, that._onMouseOut.bind(that));\n        },\n\n        _onMouseOver: function() {\n            this.trigger(MOUSE_OVER);\n        },\n\n        _onMouseOut: function() {\n            this.trigger(MOUSE_OUT);\n        },\n\n        _addStyles: function() {\n            var that = this;\n            $(that.element).children(DOT + RESIZE_HANDLE_CLASS).addClass(\"k-resize-\" + that.options.direction);\n        },\n\n        _initPositioningStrategy: function() {\n            var that = this;\n            var options = that.options;\n\n            that._positioningStrategy = HandlePositioningStrategy.create({\n                name: options.direction,\n                handle: that.element,\n                resizableElement: options.resizableElement,\n                rootElement: options.rootElement,\n                rtl: options.rtl\n            });\n        },\n\n        _initDraggable: function() {\n            var that = this;\n            var element = that.element;\n\n            if (that._draggable || !element) {\n                return;\n            }\n\n            that._draggable = new Draggable(element, {\n                dragstart: that._onDragStart.bind(that),\n                drag: that._onDrag.bind(that),\n                dragend: that._onDragEnd.bind(that)\n            });\n        },\n\n        _onDragStart: function() {\n            this.trigger(DRAG_START);\n        },\n\n        _onDrag: function(e) {\n            var that = this;\n\n            that.trigger(DRAG, that._draggingStrategy.adjustDragDelta({\n                deltaX: e.x.delta,\n                deltaY: e.y.delta,\n                initialDeltaX: e.x.initialDelta,\n                initialDeltaY: e.y.initialDelta\n            }));\n\n            if (that.options.editor) {\n                that.options.editor._handleSpaceAndNewLines();\n            }\n        },\n\n        _onDragEnd: function() {\n            this.trigger(DRAG_END);\n        },\n\n        _destroyDraggable: function() {\n            var that = this;\n\n            if (that._draggable) {\n                that._draggable.destroy();\n                that._draggable = null;\n            }\n        },\n\n        _initDraggingStrategy: function() {\n            var that = this;\n\n            that._draggingStrategy = HandleDraggingStrategy.create({\n                name: that.options.direction\n            });\n        }\n    });\n\n    var StrategyFactory = Class.extend({\n        init: function() {\n            this._items = [];\n        },\n\n        register: function(name, type) {\n            this._items.push({\n                name: name,\n                type: type\n            });\n        },\n\n        create: function(options) {\n            var items = this._items;\n            var itemsLength = items.length;\n            var name = options.name ? options.name.toLowerCase() : \"\";\n            var match;\n            var item;\n            var i;\n\n            for (i = 0; i < itemsLength; i++) {\n                item = items[i];\n\n                if (item.name.toLowerCase() === name) {\n                    match = item;\n                    break;\n                }\n            }\n\n            if (match) {\n                return new match.type(options);\n            }\n        }\n    });\n\n    var PositioningStrategyFactory = StrategyFactory.extend({});\n    PositioningStrategyFactory.current = new PositioningStrategyFactory();\n\n    var HandlePositioningStrategy = Class.extend({\n        init: function(options) {\n            var that = this;\n            that.options = extend({}, that.options, options);\n        },\n\n        options: {\n            handle: null,\n            offset: HALF_INSIDE,\n            resizableElement: null,\n            rootElement: null,\n            rtl: false\n        },\n\n        getPosition: function() {\n            var that = this;\n\n            var position = that.calculatePosition();\n            var handleOffsetPosition = that.applyHandleOffset(position);\n            var scrollOffsetPosition = that.applyScrollOffset(handleOffsetPosition);\n\n            return scrollOffsetPosition;\n        },\n\n        calculatePosition: noop,\n\n        applyHandleOffset: function(position) {\n            var options = this.options;\n            var handle = $(options.handle);\n\n            if (options.offset === HALF_INSIDE) {\n                return {\n                    top: position.top - (outerHeight(handle) / 2),\n                    left: position.left - (outerWidth(handle) / 2)\n                };\n            }\n\n            return position;\n        },\n\n        applyScrollOffset: function(position) {\n            var options = this.options;\n            var rootElement = $(options.rootElement);\n            var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var browser = kendo.support.browser;\n            var rootLeft;\n\n            if (!rootElement.is(BODY)) {\n                rootLeft = kendo.scrollLeft(rootElement) || 0;\n\n                if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    rootLeft = rootLeft * -1;\n                }\n\n                return {\n                    top: position.top + (rootElement.scrollTop() || 0),\n                    left: position.left + rootLeft - scrollBarWidth\n                };\n            }\n\n            return position;\n        }\n    });\n\n    HandlePositioningStrategy.create = function(options) {\n        return PositioningStrategyFactory.current.create(options);\n    };\n\n    var EastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + (outerHeight(resizableElement) / 2),\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(EAST, EastPositioningStrategy);\n\n    var NorthPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTH, NorthPositioningStrategy);\n\n    var NortheastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTHEAST, NortheastPositioningStrategy);\n\n    var NorthwestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTHWEST, NorthwestPositioningStrategy);\n\n    var SouthPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTH, SouthPositioningStrategy);\n\n    var SoutheastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTHEAST, SoutheastPositioningStrategy);\n\n    var SouthwestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTHWEST, SouthwestPositioningStrategy);\n\n    var WestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + (outerHeight(resizableElement) / 2),\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(WEST, WestPositioningStrategy);\n\n    var DraggingStrategyFactory = StrategyFactory.extend({});\n    DraggingStrategyFactory.current = new DraggingStrategyFactory();\n\n    var HandleDraggingStrategy = Class.extend({\n        init: function(options) {\n            var that = this;\n            that.options = extend({}, that.options, options);\n        },\n\n        options: {\n            deltaX: {\n                adjustment: null,\n                modifier: null\n            },\n            deltaY: {\n                adjustment: null,\n                modifier: null\n            }\n        },\n\n        adjustDragDelta: function(deltas) {\n            var options = this.options;\n            var xAxisAdjustment = options.deltaX.adjustment * options.deltaX.modifier;\n            var yAxisAdjustment = options.deltaY.adjustment * options.deltaY.modifier;\n\n            return {\n                deltaX: deltas.deltaX * xAxisAdjustment,\n                deltaY: deltas.deltaY * yAxisAdjustment,\n                initialDeltaX: deltas.initialDeltaX * xAxisAdjustment,\n                initialDeltaY: deltas.initialDeltaY * yAxisAdjustment\n            };\n        }\n    });\n\n    HandleDraggingStrategy.create = function(options) {\n        return DraggingStrategyFactory.current.create(options);\n    };\n\n    var HorizontalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 1,\n                modifier: 1\n            },\n            deltaY: {\n                adjustment: 0,\n                modifier: 0\n            }\n        }\n    });\n\n    var EastDraggingStrategy = HorizontalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(EAST, EastDraggingStrategy);\n\n    var WestDraggingStrategy = HorizontalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(WEST, WestDraggingStrategy);\n\n    var VerticalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 0,\n                modifier: 0\n            },\n            deltaY: {\n                adjustment: 1,\n                modifier: 1\n            }\n        }\n    });\n\n    var NorthDraggingStrategy = VerticalDraggingStrategy.extend({\n        options: {\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTH, NorthDraggingStrategy);\n\n    var SouthDraggingStrategy = VerticalDraggingStrategy.extend({\n        options: {\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTH, SouthDraggingStrategy);\n\n    var HorizontalAndVerticalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 1,\n                modifier: 1\n            },\n            deltaY: {\n                adjustment: 1,\n                modifier: 1\n            }\n        }\n    });\n\n    var NorthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            },\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTHEAST, NorthEastDraggingStrategy);\n\n    var NorthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            },\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTHWEST, NorthWestDraggingStrategy);\n\n    var SouthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            },\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTHEAST, SouthEastDraggingStrategy);\n\n    var SouthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            },\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTHWEST, SouthWestDraggingStrategy);\n\n    extend(Editor, {\n        ElementResizeHandle: ElementResizeHandle\n    });\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var min = math.min;\n    var max = math.max;\n\n    var $ = kendo.jQuery;\n    var contains = $.contains;\n    var extend = $.extend;\n\n    var browser = kendo.support.browser;\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n    var ElementResizeHandle = Editor.ElementResizeHandle;\n    var ResizingUtils = Editor.ResizingUtils;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var constrain = ResizingUtils.constrain;\n    var inPercentages = ResizingUtils.inPercentages;\n    var inPixels = ResizingUtils.inPixels;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerWidth = kendo._outerWidth;\n    var outerHeight = kendo._outerHeight;\n    var RangeUtils = Editor.RangeUtils;\n\n    var NS = \".kendoEditorElementResizing\";\n    var RESIZE_HANDLE_WRAPPER_CLASS = \"k-element-resize-handle-wrapper\";\n    var TABLE_CLASS = \"k-table\";\n    var ELEMENT_RESIZING_CLASS = \"k-element-resizing\";\n\n    var DRAG_START = \"dragStart\";\n    var DRAG = \"drag\";\n    var DRAG_END = \"dragEnd\";\n    var KEY_DOWN = \"keydown\";\n    var MOUSE_DOWN = \"mousedown\";\n    var SELECT = \"select\";\n    var DROP = \"drop\";\n\n    var COLUMN = \"td\";\n    var ROW = \"tr\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n    var TABLE = \"table\";\n    var IMG = \"img\";\n    var ELEMENT_TYPES = [\"TABLE\", \"IMG\"];\n\n    var COMMA = \",\";\n    var WIDTH = \"width\";\n    var HEIGHT = \"height\";\n\n    var EAST = \"east\";\n    var NORTH = \"north\";\n    var NORTHEAST = \"northeast\";\n    var NORTHWEST = \"northwest\";\n    var SOUTH = \"south\";\n    var SOUTHEAST = \"southeast\";\n    var SOUTHWEST = \"southwest\";\n    var WEST = \"west\";\n\n    var DOT = \".\";\n\n    function isUndefined(value) {\n        return typeof(value) === \"undefined\";\n    }\n\n    var ElementResizing = Class.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.options = extend({}, that.options, options);\n            that.handles = [];\n\n            // Check whether the element is TABLE or IMG\n            if (ELEMENT_TYPES.indexOf(element.nodeName) >= 0) {\n                that.element = element;\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            $(that.element).off(NS);\n            that.element = null;\n\n            $(that.options.rootElement).off(KEY_DOWN + NS);\n\n            that._destroyResizeHandles();\n        },\n\n        options: {\n            appendHandlesTo: null,\n            rtl: false,\n            rootElement: null,\n            minWidth: 10,\n            minHeight: 10,\n            handles: [{\n                direction: NORTHWEST\n            }, {\n                direction: NORTH\n            }, {\n                direction: NORTHEAST\n            }, {\n                direction: EAST\n            }, {\n                direction: SOUTHEAST\n            }, {\n                direction: SOUTH\n            }, {\n                direction: SOUTHWEST\n            }, {\n                direction: WEST\n            }]\n        },\n\n        resize: function(args) {\n            var that = this;\n            var deltas = extend({}, {\n                deltaX: 0,\n                deltaY: 0,\n                initialDeltaX: 0,\n                initialDeltaY: 0\n            }, args);\n\n            that._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            that._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n            that.showResizeHandles();\n        },\n\n        _resizeWidth: function() {\n            return false;\n        },\n\n        _resizeHeight: function() {\n            return false;\n        },\n\n        _getMaxDimensionValue: function(dimension) {\n            var that = this;\n            var element = $(that.element);\n            var dimensionLowercase = dimension.toLowerCase();\n            var rtlModifier = that.options.rtl ? (-1) : 1;\n            var parent = $(that.element).parent();\n            var parentElement = parent[0];\n            var parentDimension = parent[dimensionLowercase]();\n            var parentScrollOffset = rtlModifier * (dimension === WIDTH ? kendo.scrollLeft(parent) : parent.scrollTop());\n\n            if (parentElement && parentElement === element.closest(COLUMN)[0]) {\n                if (parentElement.style[dimensionLowercase] === \"\" && !inPercentages(that.element.style[dimensionLowercase])) {\n                    return Infinity;\n                }\n                else {\n                    return (parentDimension + parentScrollOffset);\n                }\n            }\n            else {\n                return (parentDimension + parentScrollOffset);\n            }\n        },\n\n        showResizeHandles: function() {\n            var that = this;\n\n            that._initResizeHandles();\n            that._showResizeHandles();\n        },\n\n        _initResizeHandles: function() {\n            var that = this;\n            var handles = that.handles;\n            var options = that.options;\n            var handleOptions = that.options.handles;\n            var length = handleOptions.length;\n            var i;\n\n            if (handles && handles.length > 0) {\n                return;\n            }\n\n            for (i = 0; i < length; i++) {\n                that.handles.push(new ElementResizeHandle(extend({\n                    appendTo: options.appendHandlesTo,\n                    resizableElement: that.element,\n                    rootElement: options.rootElement,\n                    rtl: options.rtl,\n                    editor: that.options.editor\n                }, handleOptions[i])));\n            }\n\n            that._bindToResizeHandlesEvents();\n        },\n\n        _destroyResizeHandles: function() {\n            var that = this;\n            var length = that.handles ? that.handles.length : 0;\n\n            for (var i = 0; i < length; i++) {\n                that.handles[i].destroy();\n            }\n\n            that.handles = [];\n        },\n\n        _showResizeHandles: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that.handles[i].show();\n            }\n        },\n\n        _bindToResizeHandlesEvents: function() {\n            return false;\n        },\n\n        _onResizeHandleDragStart: function() {\n            var that = this;\n            var element = $(that.element);\n\n            element.addClass(ELEMENT_RESIZING_CLASS);\n\n            that._initialElementHeight = outerHeight(element);\n            that._initialElementWidth = outerWidth(element);\n            that._disableKeyboard();\n        },\n\n        _onResizeHandleDrag: function(e) {\n            this.resize(e);\n        },\n\n        _onResizeHandleDragEnd: function() {\n            var that = this;\n            $(that.element).removeClass(ELEMENT_RESIZING_CLASS);\n            that._enableKeyboard();\n        },\n\n        _enableKeyboard: function() {\n            $(this.options.rootElement).off(KEY_DOWN + NS);\n        },\n\n        _disableKeyboard: function() {\n            $(this.options.rootElement).on(KEY_DOWN + NS, function(e) {\n                e.preventDefault();\n            });\n        }\n    });\n\n    var TableResizing = ElementResizing.extend({\n        _bindToResizeHandlesEvents: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n            var handle;\n\n            for (i = 0; i < length; i++) {\n                handle = handles[i];\n                handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n                handle.bind(DRAG, that._onResizeHandleDrag.bind(that));\n                handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n            }\n        },\n\n        _hasRowsInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n\n            for (var i = 0; i < rows.length; i++) {\n                if (rows[i].style.height === \"\" || inPixels(rows[i].style.height)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _resizeWidth: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var styleWidth = element[0].style[WIDTH];\n            var currentWidth = outerWidth(element);\n            var parentWidth = element.parent().width();\n            var maxWidth = that._getMaxDimensionValue(WIDTH);\n            var newWidth;\n            var ratioValue;\n            var ratioTotalValue;\n            var constrainedWidth;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementWidth)) {\n                that._initialElementWidth = currentWidth;\n            }\n\n            //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedWidth = constrain({\n                value: that._initialElementWidth + initialDelta,\n                min: that.options.minWidth,\n                max: maxWidth\n            });\n\n            if (inPercentages(styleWidth)) {\n                //detect resizing greater than 100%\n                if (currentWidth + delta > parentWidth) {\n                    ratioValue = max(constrainedWidth, parentWidth);\n                    ratioTotalValue = min(constrainedWidth, parentWidth);\n                }\n                else {\n                    ratioValue = min(constrainedWidth, parentWidth);\n                    ratioTotalValue = max(constrainedWidth, parentWidth);\n                }\n\n                newWidth = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n            }\n            else {\n                newWidth = toPixels(constrainedWidth);\n            }\n\n            that._setColumnsWidth();\n\n            element[0].style[WIDTH] = newWidth;\n        },\n\n        _resizeHeight: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var styleHeight = element[0].style[HEIGHT];\n            var currentHeight = outerHeight(element);\n            var parent = element.parent();\n            var parentHeight = parent.height();\n            var maxHeight = that._getMaxDimensionValue(HEIGHT);\n            var newHeight;\n            var ratioValue;\n            var ratioTotalValue;\n            var constrainedHeight;\n            var minHeight = that.options.minHeight;\n            var hasRowsInPixels = that._hasRowsInPixels();\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementHeight)) {\n                that._initialElementHeight = currentHeight;\n            }\n\n            //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedHeight = constrain({\n                value: that._initialElementHeight + initialDelta,\n                min: minHeight,\n                max: maxHeight\n            });\n\n            if (hasRowsInPixels && delta < 0) {\n                //decreasing table height when rows are sized in pixels is not possible\n                that._setRowsHeightInPercentages();\n            }\n\n            if (inPercentages(styleHeight)) {\n                //detect resizing greater than 100%\n                if (currentHeight + delta > parentHeight) {\n                    ratioValue = max(constrainedHeight, parentHeight);\n                    ratioTotalValue = min(constrainedHeight, parentHeight);\n                }\n                else {\n                    ratioValue = min(constrainedHeight, parentHeight);\n                    ratioTotalValue = max(constrainedHeight, parentHeight);\n                }\n\n                newHeight = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n            }\n            else {\n                newHeight = toPixels(constrainedHeight);\n            }\n\n            element[0].style[HEIGHT] = newHeight;\n\n            if (hasRowsInPixels && delta < 0) {\n                //restore original rows height unit\n                that._setRowsHeightInPixels();\n            }\n        },\n\n        _setColumnsWidth: function() {\n            var that = this;\n            var element = $(that.element);\n            var parentElement = element.parent()[0];\n            var parentColumn = element.closest(COLUMN);\n            var columns = parentColumn.closest(ROW).children();\n            var columnsLength = columns.length;\n            var i;\n\n            function isWidthInPercentages(element) {\n                var styleWidth = element.style.width;\n\n                if (styleWidth !== \"\") {\n                    return inPercentages(styleWidth) ? true : false;\n                }\n                else {\n                    return $(element).hasClass(TABLE_CLASS) ? true : false;\n                }\n            }\n\n            if (isWidthInPercentages(element[0]) && parentElement === parentColumn[0] && parentElement.style[WIDTH] === \"\") {\n                for (i = 0; i < columnsLength; i++) {\n                    columns[i].style[WIDTH] = toPixels($(columns[i]).width());\n                }\n            }\n        },\n\n        _setRowsHeightInPercentages: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = $(that.element).children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n            }\n        },\n\n        _setRowsHeightInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n            }\n        }\n    });\n\n    var ImageResizing = ElementResizing.extend({\n        _bindToResizeHandlesEvents: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n            var handle;\n\n            for (i = 0; i < length; i++) {\n                handle = handles[i];\n                handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n\n                if (handle.options.direction === \"north\" || handle.options.direction === \"south\") {\n                    handle.bind(DRAG, that._onResizeHandleDragVertical.bind(that));\n                } else if (handle.options.direction === \"east\" || handle.options.direction === \"west\") {\n                    handle.bind(DRAG, that._onResizeHandleDragHorizontal.bind(that));\n                } else {\n                    handle.bind(DRAG, that._onResizeHandleDragLocked.bind(that));\n                }\n\n                handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n            }\n        },\n\n        _getDeltas: function(args) {\n            return extend({}, {\n                deltaX: 0,\n                deltaY: 0,\n                initialDeltaX: 0,\n                initialDeltaY: 0\n            }, args);\n        },\n\n        _onResizeHandleDragVertical: function(args) {\n            var deltas = this._getDeltas(args);\n\n            this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n            this.showResizeHandles();\n        },\n\n        _onResizeHandleDragHorizontal: function(args) {\n            var deltas = this._getDeltas(args);\n\n            this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            this.showResizeHandles();\n        },\n\n        _onResizeHandleDragLocked: function(args) {\n            var min = Math.min(Math.abs(args.initialDeltaX), Math.abs(args.initialDeltaY)),\n                initialWidth = this._initialElementWidth,\n                initialHeight = this._initialElementHeight,\n                deltas;\n\n            if (min === args.initialDeltaX || min === args.initialDeltaX * -1) {\n                args.initialDeltaY = args.initialDeltaX * initialHeight / initialWidth;\n                args.deltaY = args.deltaX;\n            } else if (min === args.initialDeltaY || min === args.initialDeltaY * -1) {\n                args.initialDeltaX = args.initialDeltaY * initialWidth / initialHeight;\n                args.deltaX = args.deltaY;\n            }\n\n            deltas = this._getDeltas(args);\n\n            this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n            this.showResizeHandles();\n        },\n\n        _resizeWidth: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var currentWidth = outerWidth(element);\n            var newWidth;\n            var constrainedWidth;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementWidth)) {\n                that._initialElementWidth = currentWidth;\n            }\n\n            //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedWidth = constrain({\n                value: that._initialElementWidth + initialDelta,\n                min: that.options.minWidth,\n                max: that._getMaxDimensionValue(WIDTH)\n            });\n\n            newWidth = toPixels(constrainedWidth);\n            element[0].style[WIDTH] = newWidth;\n            element.attr(WIDTH, Math.floor(constrainedWidth));\n        },\n\n        _resizeHeight: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var currentHeight = outerHeight(element);\n            var newHeight;\n            var constrainedHeight;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementHeight)) {\n                that._initialElementHeight = currentHeight;\n            }\n\n            //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedHeight = constrain({\n                value: that._initialElementHeight + initialDelta,\n                min: that.options.minHeight,\n                max: Number.MAX_SAFE_INTEGER\n            });\n\n            newHeight = toPixels(constrainedHeight);\n            element[0].style[HEIGHT] = newHeight;\n            element.attr(HEIGHT, Math.floor(constrainedHeight));\n        }\n    });\n\n    const ElementResizingFactory = Class.extend({\n        create: function(editor) {\n            let factory = this;\n\n            $(editor.body)\n                .on(\"dragstart\" + NS, function() {\n                    var nodes = RangeUtils.nodes(editor.getRange()),\n                        hasImg = false;\n\n                    nodes.forEach(function(node) {\n                        if (node.nodeName === \"IMG\") {\n                            hasImg = true;\n                        }\n                    });\n\n                    if (hasImg && nodes.length > 1) {\n                        editor.elementResizing._destroyResizeHandles();\n                    }\n                })\n                .on(DROP + NS, function() {\n                    setTimeout(function() {\n                        var image = RangeUtils.image(editor.getRange());\n\n                        if (image) {\n                            editor.elementResizing._destroyResizeHandles();\n                            editor.elementResizing.element = image;\n                            editor.elementResizing.showResizeHandles();\n                        }\n                    });\n                })\n                .on(MOUSE_DOWN + NS, TABLE + COMMA + IMG, function(e) {\n                    var eventTarget = e.target;\n                    var eventCurrentTarget = e.currentTarget;\n                    var elementResizing = editor.elementResizing;\n                    var element = elementResizing ? elementResizing.element : null;\n\n                    if (elementResizing) {\n                        if (element && eventCurrentTarget !== element) {\n                            if (contains(eventCurrentTarget, element) && element !== eventTarget && contains(element, eventTarget)) {\n                                //prevent a parent table resizing init when clicking on a nested table when the event bubbles\n                                //instead of stopping event propagation\n                                return;\n                            }\n                            else {\n                                if (element !== eventTarget) {\n                                    editor._destroyElementResizing();\n                                    factory._initResizing(editor, eventCurrentTarget);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        factory._initResizing(editor, eventCurrentTarget);\n                    }\n\n                    editor._showElementResizeHandles();\n                })\n                .on(MOUSE_DOWN + NS, function(e) {\n                    var elementResizing = editor.elementResizing;\n                    var element = elementResizing ? elementResizing.element : null;\n                    var target = e.target;\n                    var isResizeHandleOrChild = $(target).hasClass(RESIZE_HANDLE_WRAPPER_CLASS) || $(target).parents(DOT + RESIZE_HANDLE_WRAPPER_CLASS).length > 0;\n\n                    if (elementResizing && element !== target && !contains(element, target) && !isResizeHandleOrChild) {\n                        editor._destroyElementResizing();\n                    }\n                });\n        },\n\n        dispose: function(editor) {\n            $(editor.body).off(NS);\n        },\n\n        _initResizing: function(editor, element) {\n            // table and image resizing is natively supported in IE\n            // https://stackoverflow.com/questions/53831846/resizing-images-in-contenteditable-div-stopped-working-in-firefox\n            // Enable custom resize handlers for FF too\n            if (!browser.msie) {\n                if ($(element).is(TABLE)) {\n                    editor.elementResizing = editor.tableResizing = new TableResizing(element, {\n                        appendHandlesTo: editor.body,\n                        rtl: kendo.support.isRtl(editor.element),\n                        rootElement: editor.body,\n                        editor: editor\n                    });\n                } else if ($(element).is(IMG)) {\n                    editor.elementResizing = new ImageResizing(element, {\n                        appendHandlesTo: editor.body,\n                        rtl: kendo.support.isRtl(editor.element),\n                        rootElement: editor.body,\n                        editor: editor\n                    });\n                }\n\n                if (editor._showElementResizeHandlesProxy) {\n                    editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n                    editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n                }\n            }\n        }\n    });\n\n    ElementResizingFactory.current = new ElementResizingFactory();\n\n    extend(Editor, {\n        TableResizing: TableResizing,\n        ImageResizing: ImageResizing,\n        ElementResizing: ElementResizing,\n        ElementResizingFactory: ElementResizingFactory\n    });\n\n})(window.kendo);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    RangeUtils = Editor.RangeUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    Command = Editor.Command;\n\nvar tableFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"table\"] }]);\nvar cellsFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"td\",\"th\"] }]);\nvar reUnit = /([a-z]+|%)$/i;\n\nvar COL = \"col\";\nvar ROW = \"row\";\nvar COLGROUP = \"colgroup\";\nvar SCOPE = \"scope\";\nvar COL_INDEX = \"col-index\";\nvar TH = \"th\";\nvar TD = \"td\";\nvar THEAD = \"thead\";\nvar HEADERS = \"headers\";\nvar TABLE = \"table\";\n\nvar TableWizardCommand = Command.extend({\n    exec: function() {\n        var cmd = this;\n        var editor = cmd.editor;\n        var range = cmd.range = cmd.lockRange();\n        var isTableCellWizard = cmd.options.tableCellWizard;\n        var selectedTable = cmd._sourceTable = !cmd.options.insertNewTable ? cmd._selectedTable(range) : undefined$1;\n        var selectedCells = cmd._selectedTableCells = selectedTable ? cmd._selectedCells(range) : undefined$1;\n        var options = {\n            visible: false,\n            messages: editor.options.messages,\n            closeCallback: cmd.onDialogClose.bind(cmd),\n            table: cmd.parseTable(selectedTable, selectedCells),\n            dialogOptions: editor.options.dialogOptions,\n            isRtl: kendo.support.isRtl(editor.wrapper)\n        };\n\n        var dialog = new Editor.TableWizardDialog(options);\n        dialog.open(isTableCellWizard);\n    },\n\n    onDialogClose: function(data) {\n        var cmd = this;\n        cmd.releaseRange(cmd.range);\n\n        if (data) { //Ok button pressed\n            if (cmd.options.insertNewTable) {\n                cmd.insertTable(cmd.createNewTable(data));\n            } else {\n                cmd.updateTable(data, cmd._sourceTable, cmd._selectedTableCells);\n            }\n        }\n    },\n    releaseRange: function(range) {\n        var cmd = this;\n        var doc = cmd.editor.document;\n        dom.windowFromDocument(doc).focus();\n        Command.fn.releaseRange.call(cmd, range);\n    },\n    insertTable: function(table) {\n        var range = this.range;\n\n        range.insertNode(table);\n        range.collapse(true);\n        this.editor.selectRange(range);\n\n        this._ensureFocusableAfterTable(table);\n    },\n    _ensureFocusableAfterTable: function(table) {\n        var siblingNodes = $(table).parent().contents();\n        var lastSiblingIndex = siblingNodes.length - 1;\n        var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n        while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n            lastSiblingIndex -= 1;\n            lastSibling = siblingNodes.get(lastSiblingIndex);\n        }\n\n        if (lastSibling === table) {\n            dom.insertAfter(dom.createEmptyNode(this.editor.document, \"p\"), table);\n        }\n    },\n    updateTable: function(data, table, selectedCells) {\n        var cmd = this;\n        var tableRows = $(table.rows).toArray();\n        var tableProp = data.tableProperties;\n        var rows = tableProp.rows;\n        var tHead = table.tHead;\n        var last = cmd._lastInCollection;\n        var lastSelectedRow, cellProp;\n\n        //Leave only first selected cell\n        while (selectedCells.length > 1) {\n            selectedCells.pop();\n        }\n\n        lastSelectedRow = selectedCells.length ? last(selectedCells).parentNode : last(tableRows);\n\n        cmd._deleteTableRows(tableRows, tableRows.length - rows);\n\n        if (tableRows.length < rows) {\n            cmd._addRows(lastSelectedRow, rows, tableRows);\n        }\n\n        dom.reMapTableColumns(table, COL_INDEX);\n        cmd._updateColumns(tableRows, tableProp.columns, selectedCells, lastSelectedRow);\n        cmd._updateTableProperties(table, tableProp);\n\n        cellProp = data.cellProperties;\n        if (selectedCells[0]) {\n            dom.attr(selectedCells[0], { id: (cellProp || {}).id || null });\n        }\n        if (cellProp) {\n            (cellProp.selectAllCells ? $(tableRows).children() : $(selectedCells)).each(function(i, cell) {\n                cmd._updateCellProperties(cell, cellProp, tableProp);\n            });\n        }\n\n        cmd._updateCaption(table, tableProp);\n\n        if (tHead) {\n            cmd._updateHeadersWithThead(table, data);\n        } else {\n            cmd._updateHeadersNoThead(table, data);\n        }\n\n        cmd._updateHeaderAssociates(table, tableProp);\n        dom.clearTableMappings(table, COL_INDEX);\n    },\n    _isHeadingRow: function(row) {\n        return dom.is(row.cells[0], TH) && dom.is(row.parentNode, THEAD);\n    },\n    _isHeadingCell: function(cell) {\n        return dom.is(cell, TH);\n    },\n    cellsWithHeadersAssociated: function(table) {\n        var cells = $(table.rows).children();\n        var headingIds = [];\n        var checkHeader = function(header) {\n            return headingIds.indexOf(header) > -1;\n        };\n\n        cells.each(function(c, cell) {\n            if (cell.id && dom.is(cell, TH)) {\n                headingIds.push(cell.id);\n            }\n        });\n\n        var associatedCells = cells.filter(function(c, cell) {\n            var headersAttr = cell.getAttribute(HEADERS);\n            var headersArray;\n\n            if (headersAttr && !dom.is(cell, TH)) {\n                headersArray = headersAttr.split(\" \");\n\n                if (headersArray && headersArray.length > 0) {\n                    return headersArray.some(checkHeader);\n                }\n            }\n\n            return false;\n        });\n\n        return !!associatedCells.length;\n    },\n    _insertCells: function(count, row, index) {\n        index = isNaN(index) ? -1 : index;\n        for (var i = 0, cell; i < count; i++) {\n            cell = row.insertCell(index);\n            cell.innerHTML = \"&nbsp;\";\n        }\n    },\n    _deleteTableRows: function(rows, count) {\n        for (var i = 0, row, rowParent; i < count; i++) {\n            row = rows.pop();\n            rowParent = row.parentNode;\n            rowParent.removeChild(row);\n            if (!rowParent.rows.length) {\n                dom.remove(rowParent);\n            }\n        }\n    },\n    createNewTable: function(data) {\n        var cmd = this;\n        var doc = cmd.editor.document;\n        var tableProp = data.tableProperties;\n        var table = dom.create(doc, TABLE);\n        var rowIndex = 0;\n        var thead;\n\n        cmd._updateTableProperties(table, tableProp);\n        cmd._updateCaption(table, tableProp);\n\n        if (tableProp.headerRows && tableProp.headerRows > 0) {\n            thead = table.createTHead();\n            cmd._createTableRows(data, thead, rowIndex, true);\n            rowIndex += tableProp.headerRows;\n        }\n\n        var tbody = table.createTBody();\n        cmd._createTableRows(data, tbody, rowIndex, false);\n\n        dom.reMapTableColumns(table, COL_INDEX);\n\n        if (tableProp.cellsWithHeaders === \"ids\") {\n            dom.associateWithIds(table);\n        } else if (tableProp.cellsWithHeaders === \"scope\") {\n            cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n        }\n\n        dom.clearTableMappings(table, COL_INDEX);\n\n        return table;\n    },\n    _createTableRows: function(data, container, initialIndex, headerRows) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var cellProp = data.cellProperties;\n        var columns = tableProp.columns;\n        var rows = headerRows ? tableProp.headerRows : tableProp.rows;\n        var headerColumns = tableProp.headerColumns;\n\n        for (var r = initialIndex, row; r < rows; r++) {\n            row = container.insertRow();\n\n            for (var c = 0, cell; c < columns; c++) {\n                if (headerRows || headerColumns > c) {\n                    cell = document.createElement(TH);\n                } else {\n                    cell = document.createElement(TD);\n                }\n\n                row.appendChild(cell);\n                cell.innerHTML = \"&nbsp;\";\n                if (cellProp && r === 0 && c === 0 && cellProp.id) {\n                    cell.id = cellProp.id;\n                }\n\n                cmd._updateCellProperties(cell, cellProp && (cellProp.selectAllCells || (r === 0 && c === 0)) ? cellProp : {}, tableProp);\n            }\n        }\n    },\n    _addRows: function(lastSelectedRow, rows, tableRows) {\n        var cmd = this;\n        var rowIndex = $(lastSelectedRow).index();\n        var cellsLength = lastSelectedRow.cells.length;\n        var newRowsCount = rows - tableRows.length;\n        var parent = lastSelectedRow.parentNode;\n        var row;\n\n        while (newRowsCount) {\n            row = parent.insertRow(rowIndex + 1);\n            cmd._insertCells(cellsLength - row.cells.length, row);\n            newRowsCount--;\n        }\n    },\n    _updateColumns: function(tableRows, columns, selectedCells, lastSelectedRow) {\n        var cmd = this;\n        var last = cmd._lastInCollection;\n        var firstRowLastCell = last(tableRows[0].cells);\n        var numberOfColumns = Number(firstRowLastCell.getAttribute(COL_INDEX)) + firstRowLastCell.colSpan;\n\n        if (numberOfColumns > columns) {\n            $(tableRows).each(function(i, row) {\n                var lastCurrentCell = last(row.cells);\n                var rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n\n                while (rowColumns > columns) {\n                    if (lastCurrentCell.colSpan && lastCurrentCell.colSpan > 1) {\n                        lastCurrentCell.colSpan -= 1;\n                    } else {\n                        row.deleteCell(-1);\n                    }\n\n                    lastCurrentCell = last(row.cells);\n                    rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n                }\n            });\n        }\n\n        if (numberOfColumns < columns) {\n            var cellIndex = $(last(selectedCells) || last(lastSelectedRow.cells)).index();\n            $(tableRows).each(function(i, row) {\n                var lastCurrentCell = last(row.cells);\n                cmd._insertCells(columns - Number(lastCurrentCell.getAttribute(COL_INDEX)) - lastCurrentCell.colSpan, row, cellIndex + 1);\n            });\n        }\n    },\n    _updateTableProperties: function(table, data) {\n        var style = this._getStylesData(data);\n        dom.attr(table, {\n            cellSpacing: data.cellSpacing || null,\n            topCellPadding: this._getNumericValue(data.topCellPadding) ?? '',\n            leftCellPadding: this._getNumericValue(data.leftCellPadding) ?? '',\n            bottomCellPadding: this._getNumericValue(data.bottomCellPadding) ?? '',\n            rightCellPadding: this._getNumericValue(data.rightCellPadding) ?? '',\n            className: data.className || null,\n            id: data.id || null,\n            summary: data.summary || null,\n            style: style || null\n        });\n        $(table).addClass(\"k-table\");\n    },\n    _updateCellProperties: function(cell, data, tableData) {\n        var style = this._getStylesData(data);\n        style.paddingTop = this._getNumericValue(data.topCellPadding) ?? this._getNumericValue(tableData?.topCellPadding) ?? '';\n        style.paddingLeft = this._getNumericValue(data.leftCellPadding) ?? this._getNumericValue(tableData?.leftCellPadding) ?? '';\n        style.paddingBottom = this._getNumericValue(data.bottomCellPadding) ?? this._getNumericValue(tableData?.bottomCellPadding) ?? '';\n        style.paddingRight = this._getNumericValue(data.rightCellPadding) ?? this._getNumericValue(tableData?.rightCellPadding) ?? '';\n        style.margin = data.cellMargin || null;\n        dom.attr(cell, {\n            style: style || null,\n            className: data.className || null\n        });\n    },\n    _updateCaption: function(table, data) {\n        if (table.caption && !data.captionContent) {\n            table.deleteCaption();\n        } else if (data.captionContent) {\n            var caption = table.createCaption();\n            caption.innerHTML = data.captionContent;\n            var alignment = this._getAlignmentData(data.captionAlignment);\n            dom.attr(caption, {\n                style: {\n                    textAlign: alignment.textAlign,\n                    verticalAlign: alignment.verticalAlign\n                }\n            });\n        }\n    },\n    _updateHeadersNoThead: function(table, data) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var rows = table.rows;\n        var row, cells, cell, i, j;\n\n        for (i = 0; i < rows.length; i++) {\n            row = rows[i];\n            cells = row.cells;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                if (!cmd._isHeadingCell(cell) && (i < tableProp.headerRows || tableProp.headerColumns > cell.getAttribute(COL_INDEX))) {\n                    dom.changeTag(cell, TH, false);\n                } else if (cmd._isHeadingCell(cell) && i >= tableProp.headerRows && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TD, false);\n                }\n            }\n        }\n    },\n    _updateHeadersWithThead: function(table, data) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var thead = table.tHead;\n        var rowIndex = 0;\n        var tbody = table.tBodies[0];\n        var row, cell, i;\n\n        if (!tbody) {\n            tbody = table.createTBody();\n        }\n\n        if (tableProp.headerRows && tableProp.headerRows > 0) {\n            if (!thead) {\n                thead = table.createTHead();\n            }\n\n            while (thead.rows.length < tableProp.headerRows) {\n                thead.appendChild(tbody.rows[0]);\n            }\n\n            while (thead.rows.length > tableProp.headerRows) {\n                tbody.appendChild(thead.rows[0]);\n            }\n\n            cmd._swapToHeaderCells(thead);\n        } else if (thead) {\n            while (thead.rows.length > 0) {\n                tbody.appendChild(thead.rows[thead.rows.length - 1]);\n            }\n\n            table.deleteTHead();\n        }\n\n        while (tbody.rows.length > rowIndex) {\n            row = tbody.rows[rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cmd._isHeadingCell(cell) && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TD, false);\n                } else if (!cmd._isHeadingCell(cell) && tableProp.headerColumns > cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TH, false);\n                }\n            }\n            rowIndex += 1;\n        }\n    },\n    _updateHeaderAssociates: function(table, tableProp) {\n        var cmd = this;\n\n        if (tableProp.cellsWithHeaders === \"ids\") {\n            if (!cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeScopes(table);\n            }\n            dom.associateWithIds(table);\n        } else if (tableProp.cellsWithHeaders === \"scope\") {\n            if (cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeAssociates(table);\n            }\n            cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n        } else {\n            if (cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeAssociates(table);\n            } else {\n                cmd._removeScopes(table);\n            }\n        }\n    },\n    _addScopes: function(table, headerRows, headerCols) {\n        var rows = table.rows;\n        var i, j, row, cell;\n\n        for (i = 0; i < rows.length; i++) {\n            row = rows[i];\n\n            for (j = 0; j < row.cells.length; j++) {\n                cell = row.cells[j];\n\n                if (i < headerRows) {\n                    cell.setAttribute(SCOPE, COL);\n                } else if (cell.getAttribute(COL_INDEX) < headerCols) {\n                    cell.setAttribute(SCOPE, ROW);\n                }\n            }\n        }\n    },\n    _removeScopes: function(table) {\n        $(table).find(TH).removeAttr(SCOPE);\n        $(table).find(COL).remove();\n        $(table).find(COLGROUP).remove();\n    },\n    _removeAssociates: function(table) {\n        $(table).find(\"th, td\").removeAttr(\"id headers\");\n    },\n    _swapToHeaderCells: function(thead) {\n        var tds = $(thead).find(\"td\");\n        var swapCell = function(index, cell) {\n            dom.changeTag(cell, TH, false);\n        };\n        tds.each(swapCell);\n    },\n    _getStylesData: function(data) {\n        var that = this;\n        var alignment = this._getAlignmentData(data.alignment);\n        var whiteSpace = \"wrapText\" in data ? (data.wrapText ? \"\" : \"nowrap\") : null;\n\n        return $.extend({\n            width: data.width ? data.width + data.widthUnit : null,\n            height: data.height ? data.height + data.heightUnit : null,\n            textAlign: alignment.textAlign,\n            verticalAlign: alignment.verticalAlign,\n            backgroundColor: data.bgColor || \"\",\n            borderWidth: data.borderWidth,\n            borderStyle: data.borderStyle,\n            borderColor: data.borderColor || \"\",\n            borderCollapse: data.collapseBorders ? \"collapse\" : null,\n            whiteSpace: whiteSpace\n        }, that._getTablePositionData(data.position));\n    },\n    _getAlignmentData: function(alignment) {\n        var textAlign = \"\";\n        var verticalAlign = textAlign;\n\n        if (alignment) {\n            if (alignment.indexOf(\" \") != -1) {\n                var align = alignment.split(\" \");\n                textAlign = align[0];\n                verticalAlign = align[1];\n            } else {\n                textAlign = alignment;\n            }\n        }\n        return { textAlign: textAlign, verticalAlign: verticalAlign };\n    },\n    _getTablePositionData: function(position) {\n        if (!position) {\n            return {};\n        }\n\n        return { marginLeft: position != \"left\" ? \"auto\" : \"\", marginRight: position != \"right\" ? \"auto\" : \"\" };\n    },\n    parseTable: function(table, selectedCells) {\n        if (!table) {\n            return { tableProperties: {}, selectedCells: [] };\n        }\n\n        var cmd = this;\n        var tStyle = table.style;\n        var rows = table.rows;\n        var caption = table.caption;\n        var captionClone = $(caption ? caption.cloneNode(true) : undefined$1);\n        captionClone.find(\".k-marker\").remove();\n\n        var cssClass = table.className;\n        cssClass = cssClass.replace(/^k-table\\s|\\sk-table$/, \"\");\n        cssClass = cssClass.replace(/\\sk-table\\s/, \" \");\n        cssClass = cssClass.replace(/^k-table$/, \"\");\n\n        var tableAlignment = cmd._getAlignment(table, true);\n        var tablePosition = cmd._getTablePosition(table);\n        var captionAlignment = caption ? cmd._getAlignment(caption) : undefined$1;\n        var numberOfHeaderRows = dom._getNumberOfHeaderRows(table);\n\n        var cellsWithHeaders;\n        if (cmd.cellsWithHeadersAssociated(table)) {\n            cellsWithHeaders = \"ids\";\n        } else if ($(table).find(\"th[scope]\").length > 0) {\n            cellsWithHeaders = \"scope\";\n        } else {\n            cellsWithHeaders = \"none\";\n        }\n\n        dom.reMapTableColumns(table, COL_INDEX);\n        var numberOfColumns = dom._getNumberOfColumns(table);\n        var numberOfHeaderColumns = dom._getNumberOfHeaderColumns(table, numberOfHeaderRows);\n        dom.clearTableMappings(table, COL_INDEX);\n\n        var tableJson = {\n            tableProperties: {\n                width: tStyle.width || table.width ? parseFloat(tStyle.width || table.width) : null,\n                height: tStyle.height || table.height ? parseFloat(tStyle.height || table.height) : null,\n                columns: numberOfColumns,\n                rows: rows.length,\n                widthUnit: cmd._getUnit(tStyle.width),\n                heightUnit: cmd._getUnit(tStyle.height),\n                cellSpacing: table.cellSpacing,\n                topCellPadding: table.topCellPadding,\n                leftCellPadding: table.leftCellPadding,\n                bottomCellPadding: table.bottomCellPadding,\n                rightCellPadding: table.rightCellPadding,\n                alignment: tableAlignment.textAlign,\n                position: tablePosition,\n                bgColor: tStyle.backgroundColor || table.bgColor,\n                className: cssClass,\n                id: table.id,\n                borderWidth: tStyle.borderWidth || table.border,\n                borderColor: tStyle.borderColor,\n                borderStyle: tStyle.borderStyle || \"\",\n                collapseBorders: !!tStyle.borderCollapse,\n                summary: table.summary,\n                captionContent: caption ? captionClone.html() : \"\",\n                captionAlignment: caption && captionAlignment.textAlign ? captionAlignment.textAlign + \" \" + captionAlignment.verticalAlign : \"\",\n                headerRows: numberOfHeaderRows,\n                headerColumns: numberOfHeaderColumns,\n                cellsWithHeaders: cellsWithHeaders\n            },\n            selectedCells: []\n        };\n\n        tableJson.rows = cmd.parseTableRows(rows, selectedCells, tableJson);\n\n        return tableJson;\n    },\n    parseTableRows: function(rows, selectedCells, tableJson) {\n        var cmd = this;\n        var data = [], row, rowData, cells, cell, cellData;\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowData = { cells: [] };\n            cells = row.cells;\n            data.push(rowData);\n            for (var j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                cellData = cmd.parseCell(cell);\n                if ($.inArray(cell, selectedCells) != -1) {\n                    tableJson.selectedCells.push(cellData);\n                }\n                rowData.cells.push(cellData);\n            }\n        }\n        return data;\n    },\n    parseCell: function(cell) {\n        var cmd = this;\n        var cStyle = cell.style;\n        var alignment = cmd._getAlignment(cell);\n        alignment = alignment.textAlign ? alignment.textAlign + \" \" + alignment.verticalAlign : \"\";\n\n        var data = {\n            width: cStyle.width || cell.width ? parseFloat(cStyle.width || cell.width) : null,\n            height: cStyle.height || cell.height ? parseFloat(cStyle.height || cell.height) : null,\n            widthUnit: cmd._getUnit(cStyle.width),\n            heightUnit: cmd._getUnit(cStyle.height),\n            cellMargin: cStyle.margin,\n            topCellPadding: cStyle.paddingTop,\n            leftCellPadding: cStyle.paddingLeft,\n            bottomCellPadding: cStyle.paddingBottom,\n            rightCellPadding: cStyle.paddingRight,\n            alignment: alignment,\n            bgColor: cStyle.backgroundColor || cell.bgColor,\n            className: cell.className,\n            id: cell.id,\n            borderWidth: cStyle.borderWidth || cell.border,\n            borderColor: cStyle.borderColor,\n            borderStyle: cStyle.borderStyle,\n            wrapText: cStyle.whiteSpace != \"nowrap\"\n        };\n\n        return data;\n    },\n    _getTablePosition: function(element) {\n        var style = element.style;\n        if (style.marginLeft == \"auto\" && style.marginRight == \"auto\") {\n            return \"center\";\n        }\n\n        if (style.marginLeft == \"auto\") {\n            return \"right\";\n        }\n\n        return \"left\";\n    },\n    _getAlignment: function(element, horizontalOnly) {\n        var style = element.style;\n        var hAlign = style.textAlign || element.align || \"\";\n        if (horizontalOnly) {\n            return { textAlign: hAlign };\n        }\n        var vAlign = style.verticalAlign || element.vAlign || \"\";\n        if (hAlign && vAlign) {\n            return { textAlign: hAlign, verticalAlign: vAlign };\n        }\n        if (!hAlign && vAlign) {\n            return { textAlign: \"left\", verticalAlign: vAlign };\n        }\n        if (hAlign && !vAlign) {\n            return { textAlign: hAlign, verticalAlign: \"top\" };\n        }\n        return { textAlign: \"\", verticalAlign: \"\" };\n    },\n    _getUnit: function(value) {\n        var unit = (value || \"\").match(reUnit);\n        return unit ? unit[0] : \"px\";\n    },\n    _selectedTable: function(range) {\n        var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n        return tableFormatFinder.findSuitable(nodes)[0];\n    },\n    _selectedCells: function(range) {\n        var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n        return cellsFormatFinder.findSuitable(nodes);\n    },\n    _lastInCollection: function(collection) {\n        return collection[collection.length - 1];\n    },\n    _getNumericValue: function(value) {\n        return !isNaN(value) || typeof value === \"string\" ? value : null;\n    }\n});\n\nvar TableWizardTool = Editor.Tool.extend({\n    command: function(options) {\n        options.insertNewTable = this.options.insertNewTable;\n        options.tableCellWizard = !!this.options.tableCellWizard;\n        return new TableWizardCommand(options);\n    }\n});\n\nvar TableWizardEditTool = TableWizardTool.extend({\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nvar TableCellWizardEditTool = TableWizardTool.extend({\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nkendo.ui.editor.TableWizardTool = TableWizardTool;\nkendo.ui.editor.TableWizardCommand = TableWizardCommand;\n\nregisterTool(\"tableProperties\", new TableWizardEditTool({ command: TableWizardCommand, insertNewTable: false, property: \"tableProperties\" }));\nregisterTool(\"tableCellProperties\", new TableCellWizardEditTool({ command: TableWizardCommand, tableCellWizard: true, insertNewTable: false, property: \"tableCellProperties\" }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nconst FORM_FIELD_CLASS = \"k-form-field\",\n      INVISIBLE_CLASS = \"k-visibility-invisible\",\n      DOT = \".\";\n\nvar kendo = window.kendo,\n    encode = kendo.htmlEncode,\n    numericTextBoxSettings = { format: \"0\", min: 0 },\n    units = [\"px\", \"em\"],\n    borderStyles = [\"solid\", \"dotted\", \"dashed\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\", \"initial\", \"inherit\", \"none\", \"hidden\"];\n\nvar DEFAULT_NUMBER_OF_COLS_AND_ROWS = 4;\n\nvar textWrapDropDownSettings = {\n    dataSource: [{\n        className: \"text-wrap\",\n        value: \"wrap\"\n    }, {\n        className: \"parameter-string\",\n        value: \"nowrap\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-text-wrap\" }) + encode(tooltip)\n};\n\nvar tablePositionDropDownSettings = {\n    dataSource: [{\n        className: \"table-position-start\",\n        value: \"left\"\n    }, {\n        className: \"table-position-center\",\n        value: \"center\"\n    }, {\n        className: \"table-position-end\",\n        value: \"right\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar tableAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-middle-left\",\n        value: \"left\"\n    }, {\n        className: \"table-align-middle-center\",\n        value: \"center\"\n    }, {\n        className: \"table-align-middle-right\",\n        value: \"right\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar cellAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-top-left\",\n        value: \"left top\"\n    }, {\n        className: \"table-align-top-center\",\n        value: \"center top\"\n    }, {\n        className: \"table-align-top-right\",\n        value: \"right top\"\n    }, {\n        className: \"table-align-middle-left\",\n        value: \"left middle\"\n    }, {\n        className: \"table-align-middle-center\",\n        value: \"center middle\"\n    }, {\n        className: \"table-align-middle-right\",\n        value: \"right middle\"\n    }, {\n        className: \"table-align-bottom-left\",\n        value: \"left bottom\"\n    }, {\n        className: \"table-align-bottom-center\",\n        value: \"center bottom\"\n    }, {\n        className: \"table-align-bottom-right\",\n        value: \"right bottom\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar accessibilityAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-top-left\",\n        value: \"left top\"\n    }, {\n        className: \"table-align-top-center\",\n        value: \"center top\"\n    }, {\n        className: \"table-align-top-right\",\n        value: \"right top\"\n    }, {\n        className: \"table-align-bottom-left\",\n        value: \"left bottom\"\n    }, {\n        className: \"table-align-bottom-center\",\n        value: \"center bottom\"\n    }, {\n        className: \"table-align-bottom-right\",\n        value: \"right bottom\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" })\n};\n\nvar tablePropertiesDialogTemplate = ({ messages }) =>\n    '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n        '<div id=\"k-table-wizard-tabs\" class=\"k-root-tabs\">' +\n            '<ul>' +\n                `<li class=\"k-active\">${ messages.tableTab }</li>` +\n                `<li>${ messages.accessibilityTab }</li>` +\n            '</ul>' +\n            '<div id=\"k-table-properties\"></div>' +\n            '<div id=\"k-accessibility-properties\"></div>' +\n        '</div>' +\n        '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                    icon: 'check',\n                        themeColor: \"primary\"\n                    }) +\n                    kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                        icon: 'cancel-outline'\n                    }) +\n        '</div>' +\n    '</div>';\n    var cellPropertiesDialogTemplate = ({ messages }) =>\n    '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n        '<div id=\"k-cell-properties\"></div>' +\n        '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                    icon: 'check',\n                        themeColor: \"primary\"\n                    }) +\n                    kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                        icon: 'cancel-outline'\n                    }) +\n        '</div>' +\n    '</div>';\n\nvar TableWizardDialog = kendo.Class.extend({\n    init: function(options) {\n        this.options = options;\n    },\n    _openTablePropertiesDialog: function() {\n        var that = this,\n            options = that.options,\n            dialogOptions = options.dialogOptions,\n            tableData = options.table,\n            dialog,\n            messages = options.messages,\n            isIE = kendo.support.browser.msie;\n\n        function close(e) {\n            e.preventDefault();\n            that.destroy();\n            dialog.destroy();\n        }\n\n        function okHandler(e) {\n            that.collectTableDialogValues(tableData);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            options.closeCallback(tableData);\n        }\n\n        function closeHandler(e) {\n            close(e);\n            options.closeCallback();\n        }\n\n        dialogOptions.close = closeHandler;\n        dialogOptions.minWidth = 700;\n        dialogOptions.width = 700;\n        dialogOptions.title = messages.tableProperties;\n        dialogOptions.visible = options.visible;\n\n        dialog = $(that._dialogTemplate(messages)).appendTo(document.body)\n            .kendoWindow(dialogOptions)\n            .addClass(\"k-editor-window\")\n            .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n            .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n            .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n            .data(\"kendoWindow\");\n\n        var element = dialog.element;\n        this.components = {};\n        that._initTabStripComponent(element);\n        that._tablePropertiesForm = that._createTablePropertiesForm(dialog, messages);\n        that._accessibilityPropertiesForm = that._createAccessibilityPropertiesForm(dialog, messages);\n\n        dialog.center();\n        dialog.open();\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n    },\n    _openCellPropertiesDialog: function() {\n        var that = this,\n            options = that.options,\n            dialogOptions = options.dialogOptions,\n            tableData = options.table,\n            dialog,\n            messages = options.messages,\n            isIE = kendo.support.browser.msie;\n\n        function close(e) {\n            e.preventDefault();\n            that.destroy();\n            dialog.destroy();\n        }\n\n        function okHandler(e) {\n            that.collectCellDialogValues(tableData);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            options.closeCallback(tableData);\n        }\n\n        function closeHandler(e) {\n            close(e);\n            options.closeCallback();\n        }\n\n        dialogOptions.close = closeHandler;\n        dialogOptions.minWidth = 400;\n        dialogOptions.title = messages.tableCellProperties;\n        dialogOptions.visible = options.visible;\n\n        dialog = $(that._dialogTemplate(messages, cellPropertiesDialogTemplate)).appendTo(document.body)\n            .kendoWindow(dialogOptions)\n            .addClass(\"k-editor-window\")\n            .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n            .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n            .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n            .data(\"kendoWindow\");\n\n        var element = dialog.element;\n        that._cellPropertiesForm = that._createCellPropertiesForm(dialog, messages);\n\n        dialog.center();\n        dialog.open();\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n    },\n    open: function(isCellProperties) {\n        if (!isCellProperties) {\n            this._openTablePropertiesDialog();\n        } else {\n            this._openCellPropertiesDialog();\n        }\n    },\n\n    _initTabStripComponent: function(element) {\n        var components = this.components = {};\n        components.tabStrip = element.find(\"#k-table-wizard-tabs\").kendoTabStrip({\n            animation: false\n        }).data(\"kendoTabStrip\");\n    },\n\n    collectTableDialogValues: function() {\n        var that = this;\n        var data = that.options.table;\n        that._collectTableViewValues(data);\n        that._collectAccessibilityViewValues(data);\n    },\n\n    collectCellDialogValues: function() {\n        var that = this;\n        var data = that.options.table;\n        that._collectCellViewValues(data);\n    },\n\n    _collectTableViewValues: function(tableData) {\n        var tableView = this.components.tableView;\n        var tableProperties = tableData.tableProperties;\n        var cellData = tableData.cellProperties = tableData.cellProperties || {};\n        tableProperties.width = tableView.width.value();\n        tableProperties.widthUnit = tableView.widthUnit.value();\n        tableProperties.height = tableView.height.value();\n        tableProperties.columns = tableView.columns.value();\n        tableProperties.rows = tableView.rows.value();\n        tableProperties.heightUnit = tableView.heightUnit.value();\n        tableProperties.cellSpacing = tableView.cellSpacing.value();\n        tableProperties.topCellPadding = tableView.topCellPadding.value();\n        tableProperties.leftCellPadding = tableView.leftCellPadding.value();\n        tableProperties.bottomCellPadding = tableView.bottomCellPadding.value();\n        tableProperties.rightCellPadding = tableView.rightCellPadding.value();\n        tableProperties.alignment = tableView.alignment.value();\n        tableProperties.position = tableView.position.value();\n        tableProperties.bgColor = tableView.bgColor.value();\n        tableProperties.borderWidth = tableView.borderWidth.value();\n        tableProperties.borderColor = tableView.borderColor.value();\n        tableProperties.borderStyle = tableView.borderStyle.value();\n        tableProperties.collapseBorders = tableView.collapseBorders.check();\n\n        if (!cellData.width) {\n            cellData.selectAllCells = true;\n            cellData.width = 100 / tableData.tableProperties.columns;\n            cellData.widthUnit = \"%\";\n        }\n    },\n\n    _collectCellViewValues: function(table) {\n        var cellData = table.cellProperties = table.cellProperties || {};\n        var cellView = this.components.cellView;\n\n        cellData.selectAllCells = cellView.selectAllCells.check();\n        cellData.width = cellView.width.value();\n        cellData.widthUnit = cellView.widthUnit.value();\n        cellData.height = cellView.height.value();\n        cellData.heightUnit = cellView.heightUnit.value();\n        cellData.independentCellPaddings = cellView.independentCellPaddings.check();\n        cellData.topCellPadding = cellView.topCellPadding.value();\n        cellData.leftCellPadding = cellView.leftCellPadding.value();\n        cellData.bottomCellPadding = cellView.bottomCellPadding.value();\n        cellData.rightCellPadding = cellView.rightCellPadding.value();\n        cellData.cellMargin = cellView.cellMargin.value();\n        cellData.alignment = cellView.alignment.value();\n        cellData.bgColor = cellView.bgColor.value();\n        cellData.className = cellView.className.value();\n        cellData.id = cellView.id.value();\n        cellData.borderWidth = cellView.borderWidth.value();\n        cellData.borderColor = cellView.borderColor.value();\n        cellData.borderStyle = cellView.borderStyle.value();\n        cellData.wrapText = cellView.wrapTextValue.value() == \"wrap\";\n\n        if (!cellData.width) {\n            cellData.selectAllCells = true;\n            cellData.width = 100 / table.tableProperties.columns;\n            cellData.widthUnit = \"%\";\n        }\n    },\n\n   _collectAccessibilityViewValues: function(table) {\n        var tableProperties = table.tableProperties;\n        var accessibilityView = this.components.accessibilityView;\n        tableProperties.captionContent = accessibilityView.captionContent.value();\n        tableProperties.captionAlignment = accessibilityView.captionAlignment.value();\n        tableProperties.summary = accessibilityView.summary.value();\n        tableProperties.cellsWithHeaders = accessibilityView.cellsWithHeaders.value();\n        tableProperties.className = accessibilityView.className.value();\n        tableProperties.id = accessibilityView.id.value();\n        tableProperties.headerRows = accessibilityView.headerRows.value();\n        tableProperties.headerColumns = accessibilityView.headerColumns.value();\n    },\n    _addUnit: function(units, value) {\n        if (value && $.inArray(value, units) == -1) {\n            units.push(value);\n        }\n    },\n\n    _initNumericTextbox: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoNumericTextBox(\n                settings ? $.extend({}, numericTextBoxSettings, settings) : numericTextBoxSettings\n            ).data(\"kendoNumericTextBox\");\n        if (property in data) {\n            component.value(parseInt(data[property], 10));\n        }\n    },\n\n    _initDropDownList: function(element, property, data, storage, dataSource) {\n        var component = storage[property] = element.kendoDropDownList({\n            dataSource: dataSource\n        }).data(\"kendoDropDownList\");\n        this._setComponentValue(component, data, property);\n    },\n\n    _initBorderStyleDropDown: function(element, property, data, storage, dataSource) {\n        var component = storage[property] = element.kendoDropDownList({\n            dataSource: dataSource,\n            optionLabel: this.options.messages.borderNone\n        }).data(\"kendoDropDownList\");\n        this._setComponentValue(component, data, property);\n    },\n\n    _initTablePositionDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var tableView = this.components.tableView;\n        var dataSource = tablePositionDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.tableAlignLeft;\n        dataSource[1].tooltip = messages.tableAlignCenter;\n        dataSource[2].tooltip = messages.tableAlignRight;\n\n        this._initPositionDropDown(element, tablePositionDropDownSettings, \"position\", data, tableView);\n    },\n\n    _initTableAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var tableView = this.components.tableView;\n        var dataSource = tableAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeft;\n        dataSource[1].tooltip = messages.alignCenter;\n        dataSource[2].tooltip = messages.alignRight;\n        dataSource[3].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, tableAlignmentDropDownSettings, \"alignment\", data, tableView);\n    },\n\n    _initCellAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var cellView = this.components.cellView;\n        var dataSource = cellAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeftTop;\n        dataSource[1].tooltip = messages.alignCenterTop;\n        dataSource[2].tooltip = messages.alignRightTop;\n        dataSource[3].tooltip = messages.alignLeftMiddle;\n        dataSource[4].tooltip = messages.alignCenterMiddle;\n        dataSource[5].tooltip = messages.alignRightMiddle;\n        dataSource[6].tooltip = messages.alignLeftBottom;\n        dataSource[7].tooltip = messages.alignCenterBottom;\n        dataSource[8].tooltip = messages.alignRightBottom;\n        dataSource[9].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, cellAlignmentDropDownSettings, \"alignment\", data, cellView);\n    },\n\n    _initAccessibilityAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var accessibilityView = this.components.accessibilityView;\n        var dataSource = accessibilityAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeftTop;\n        dataSource[1].tooltip = messages.alignCenterTop;\n        dataSource[2].tooltip = messages.alignRightTop;\n        dataSource[3].tooltip = messages.alignLeftBottom;\n        dataSource[4].tooltip = messages.alignCenterBottom;\n        dataSource[5].tooltip = messages.alignRightBottom;\n        dataSource[6].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, accessibilityAlignmentDropDownSettings, \"captionAlignment\", data, accessibilityView);\n    },\n    _initTextWrapDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var name = \"wrapTextValue\";\n        data.wrapTextValue = data.wrapText ? \"wrap\" : \"nowrap\";\n\n        var cellView = this.components.cellView;\n        var dataSource = textWrapDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.wrapText;\n        dataSource[1].tooltip = messages.fitToCell;\n        var component = cellView[name] =\n            element.kendoDropDownList(textWrapDropDownSettings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-text-wrap');\n        this._setComponentValue(component, data, name);\n    },\n    _initPositionDropDown: function(element, settings, name, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-position');\n        this._setComponentValue(component, data, name);\n    },\n    _initAlignmentDropDown: function(element, settings, name, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-align');\n        this._setComponentValue(component, data, name);\n    },\n    _initAssociationDropDown: function(element, name, settings, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        this._setComponentValue(component, data, name);\n    },\n    _setComponentValue: function(component, data, property) {\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    _initColorPicker: function(element, property, data, storage) {\n        var component = storage[property] =\n            element.kendoColorPicker({ buttons: false, clearButton: true }).data(\"kendoColorPicker\");\n\n        if (data[property]) {\n            component.value(data[property]);\n        }\n    },\n    _initInput: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoTextBox(settings || {}).data(\"kendoTextBox\");\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    _initCheckbox: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoCheckBox(settings || {}).data(\"kendoCheckBox\");\n        if (property in data) {\n            component.check(data[property]);\n        }\n    },\n\n    _initTextArea: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoTextArea(settings || {}).data(\"kendoTextArea\");\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    destroy: function() {\n        var that = this;\n        that._destroyComponents(this.components);\n\n        delete that.components;\n    },\n    _destroyComponents: function(components) {\n        for (var widget in components) {\n            if (components[widget].destroy) {\n                components[widget].destroy();\n            }\n            delete components[widget];\n        }\n    },\n\n    _dialogTemplate: function(messages, dialogTemplate) {\n        return kendo.template(dialogTemplate || tablePropertiesDialogTemplate)({ messages: messages });\n    },\n\n    _onPaddingTopChange: function(e) {\n        let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n            view = this.components[viewType],\n            independentCellPaddings = !view.independentCellPaddings.check(),\n            topCellPaddingNumeric = view.topCellPadding,\n            topCellPaddingValue = topCellPaddingNumeric.value(),\n            leftCellPaddingNumeric = view.leftCellPadding,\n            bottomCellPaddingNumeric = view.bottomCellPadding,\n            rightCellPaddingNumeric = view.rightCellPadding;\n\n        if (independentCellPaddings) {\n            leftCellPaddingNumeric.value(topCellPaddingValue);\n            bottomCellPaddingNumeric.value(topCellPaddingValue);\n            rightCellPaddingNumeric.value(topCellPaddingValue);\n        }\n\n        topCellPaddingNumeric._cachedPadding = topCellPaddingValue;\n    },\n\n    _onPaddingCheckChange: function(e) {\n        let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n            messages = this.options.messages,\n            checked = e.sender.check(),\n            view = this.components[viewType],\n            topCellPaddingNumeric = view.topCellPadding,\n            leftCellPaddingNumeric = view.leftCellPadding,\n            bottomCellPaddingNumeric = view.bottomCellPadding,\n            rightCellPaddingNumeric = view.rightCellPadding,\n            topCellPaddingValue = topCellPaddingNumeric.value(),\n            bottomCellPaddingValue = bottomCellPaddingNumeric.value(),\n            leftCellPaddingValue = leftCellPaddingNumeric.value(),\n            rightCellPaddingValue = rightCellPaddingNumeric.value();\n\n        if (!checked) {\n            if (topCellPaddingValue === bottomCellPaddingValue &&\n                    topCellPaddingValue === leftCellPaddingValue &&\n                    topCellPaddingValue === rightCellPaddingValue) {\n                leftCellPaddingNumeric.value(topCellPaddingValue);\n                bottomCellPaddingNumeric.value(topCellPaddingValue);\n                rightCellPaddingNumeric.value(topCellPaddingValue);\n            } else {\n                topCellPaddingNumeric.value(null);\n            }\n\n            leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n            bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n            rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n\n            topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.cellPadding);\n        } else {\n            if (!isNaN(topCellPaddingNumeric._cachedPadding)) {\n                topCellPaddingNumeric.value(topCellPaddingNumeric._cachedPadding);\n            }\n\n            leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n            bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n            rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n\n            topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.topPadding);\n        }\n    },\n\n    _onColumnsNumberChange: function(args) {\n        var that = this;\n        var accessibilityView = that.components.accessibilityView;\n        var headerColumnsNumeric = accessibilityView.headerColumns;\n        var currentNumberOfColumnsHeaders = headerColumnsNumeric.value();\n        var numberOfColumns = args.sender.value();\n\n        if (numberOfColumns < currentNumberOfColumnsHeaders) {\n            headerColumnsNumeric.value(numberOfColumns);\n        }\n\n        headerColumnsNumeric.max(numberOfColumns);\n    },\n\n    _onRowsNumberChange: function(args) {\n        var that = this;\n        var accessibilityView = that.components.accessibilityView;\n        var headerRowsNumeric = accessibilityView.headerRows;\n        var currentNumberOfRowHeaders = headerRowsNumeric.value();\n        var numberOfRows = args.sender.value();\n\n        if (numberOfRows < currentNumberOfRowHeaders) {\n            headerRowsNumeric.value(numberOfRows);\n        }\n\n        headerRowsNumeric.max(numberOfRows);\n    },\n\n    _createTablePropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-table-properties\");\n        var components = that.components;\n        var tableView = components.tableView = {};\n        var tableProperties = table.tableProperties = table.tableProperties || {};\n        var form;\n\n        that._addUnit(units, tableProperties.widthUnit);\n        that._addUnit(units, tableProperties.heightUnit);\n        tableProperties.borderStyle = tableProperties.borderStyle || \"\";\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: 2,\n                    field: \"k-editor-table-columns\",\n                    label: encode(messages.columns),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-columns\" />').appendTo(container),\n                            \"columns\",\n                            tableProperties,\n                            tableView,\n                            {\n                                min: 1,\n                                value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                change: that._onColumnsNumberChange.bind(that)\n                            });\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-rows\",\n                    label: encode(messages.rows),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-rows\" />').appendTo(container),\n                            \"rows\",\n                            tableProperties,\n                            tableView,\n                            {\n                                min: 1,\n                                value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                change: that._onRowsNumberChange.bind(that)\n                            });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-width\",\n                    label: encode(messages.width),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-width\" />').appendTo(container), \"width\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-width-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-table-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"widthUnit\",\n                            tableProperties,\n                            tableView,\n                            units);\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-height\",\n                    label: encode(messages.height),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-height\" />').appendTo(container), \"height\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-height-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-table-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"heightUnit\",\n                            tableProperties,\n                            tableView,\n                            units);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-position\",\n                    label: encode(messages.position),\n                    editor: function(container, options) {\n                        that._initTablePositionDropDown($('<input id=\"k-editor-table-position\" class=\"k-position\" />').appendTo(container), tableProperties);\n                    }\n                },\n                {\n                    colSpan: 2,\n                    field: \"k-editor-table-alignment\",\n                    label: encode(messages.alignment),\n                    editor: function(container, options) {\n                        that._initTableAlignmentDropDown($('<input id=\"k-editor-table-alignment\" class=\"k-align\" />').appendTo(container), tableProperties);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-cell-spacing\",\n                    label: encode(messages.cellSpacing),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-cell-spacing\" />').appendTo(container), \"cellSpacing\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    type: \"group\",\n                    label: \"Cell Paddings\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 20\n                    },\n                    items: [\n                        {\n                            colSpan: \"full\",\n                            field: \"k-editor-padding-all-sides\",\n                            label: \"\",\n                            editor: function(container, options) {\n                                that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", tableProperties, tableView,\n                                {\n                                    checked: true,\n                                    label: encode(messages.independentCellPaddings),\n                                    change: that._onPaddingCheckChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-top\",\n                            label: encode(messages.topPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-top\" />').appendTo(container), \"topCellPadding\", tableProperties, tableView,\n                                {\n                                    placeholder: encode(messages.auto),\n                                    change: that._onPaddingTopChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-right\",\n                            label: encode(messages.rightPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-right\" />').appendTo(container), \"rightCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-bottom\",\n                            label: encode(messages.bottomPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-left\",\n                            label: encode(messages.leftPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-left\" />').appendTo(container), \"leftCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        }\n                    ]\n                }, {\n                    type: \"group\",\n                    label: \"Borders\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 10\n                    },\n                    items: [{\n                        colSpan: \"full\",\n                        field: \"k-editor-table-bg\",\n                        label: encode(messages.tableBackground),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-table-bg\" />').appendTo(container), \"bgColor\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-border-width\",\n                        label: encode(messages.borderWidth),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-border-width\" />').appendTo(container), \"borderWidth\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-border-color\",\n                        label: encode(messages.borderColor),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-border-color\" />').appendTo(container), \"borderColor\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-border-style\",\n                        label: encode(messages.borderStyle),\n                        editor: function(container, options) {\n                            that._initBorderStyleDropDown($('<input id=\"k-editor-border-style\" />').appendTo(container),\n                                \"borderStyle\",\n                                tableProperties,\n                                tableView,\n                                borderStyles);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-collapse-borders\",\n                        label: \"\",\n                        editor: function(container, options) {\n                            that._initCheckbox($('<input id=\"k-editor-collapse-borders\"/>').appendTo(container), \"collapseBorders\", tableProperties, tableView, { label: encode(messages.collapseBorders) });\n                        }\n                    }]\n                }\n            ]\n        }).data(\"kendoForm\");\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    },\n\n    _createCellPropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-cell-properties\");\n        var components = that.components = that.components || {};\n        var cellView = components.cellView = {};\n        var cellProperties = (table.selectedCells && table.selectedCells[0]) || { borderStyle: \"\", wrapText: true };\n        var form;\n\n        that._addUnit(units, cellProperties.widthUnit);\n        that._addUnit(units, cellProperties.heightUnit);\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: \"full\",\n                    field: \"k-editor-selectAllCells\",\n                    label: \"\",\n                    editor: function(container, options) {\n                        that._initCheckbox($('<input id=\"k-editor-selectAllCells\" />').appendTo(container), \"selectAllCells\", table.tableProperties, cellView, { label: encode(messages.selectAllCells) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-width\",\n                    label: encode(messages.width),\n                    hint: encode(messages.applyToColumn),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-cell-width\" />').appendTo(container), \"width\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-width-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-cell-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"widthUnit\",\n                            cellProperties,\n                            cellView,\n                            units);\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-height\",\n                    label: encode(messages.height),\n                    hint: encode(messages.applyToRow),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-cell-height\" />').appendTo(container), \"height\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-height-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-cell-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"heightUnit\",\n                            cellProperties,\n                            cellView,\n                            units);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-cell-alignment\",\n                    label: encode(messages.alignment),\n                    editor: function(container, options) {\n                        that._initCellAlignmentDropDown($('<input id=\"k-editor-cell-alignment\" class=\"k-align\" />').appendTo(container), cellProperties);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-wrap-text\",\n                    label: \"Text control\",\n                    editor: function(container, options) {\n                        that._initTextWrapDropDown($('<input id=\"k-editor-wrap-text\" />').appendTo(container),\n                        cellProperties);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-bg\",\n                    label: encode(messages.background),\n                    editor: function(container, options) {\n                        that._initColorPicker($('<input id=\"k-editor-cell-bg\" />').appendTo(container), \"bgColor\", cellProperties, cellView);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-cell-margin\",\n                    label: encode(messages.cellMargin),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-cell-margin\" />').appendTo(container), \"cellMargin\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    type: \"group\",\n                    label: \"Cell Paddings\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 20\n                    },\n                    items: [\n                        {\n                            colSpan: \"full\",\n                            field: \"k-editor-padding-all-sides\",\n                            label: \"\",\n                            editor: function(container, options) {\n                                that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", table.tableProperties, cellView,\n                                {\n                                    checked: true,\n                                    label: encode(messages.independentCellPaddings),\n                                    change: that._onPaddingCheckChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-top\",\n                            label: encode(messages.topPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-top\" />').appendTo(container), \"topCellPadding\", cellProperties, cellView,\n                                {\n                                    placeholder: encode(messages.auto),\n                                    change: that._onPaddingTopChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-right\",\n                            label: encode(messages.rightPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-right\" />').appendTo(container), \"rightCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-bottom\",\n                            label: encode(messages.bottomPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-left\",\n                            label: encode(messages.leftPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-left\" />').appendTo(container), \"leftCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        }\n                    ]\n                },{\n                    type: \"group\",\n                    label: \"Borders\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 10\n                    },\n                    items: [{\n                        colSpan: 1,\n                        field: \"k-editor-cell-border-width\",\n                        label: encode(messages.borderWidth),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-cell-border-width\" />').appendTo(container), \"borderWidth\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-border-color\",\n                        label: encode(messages.borderColor),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-cell-border-color\" />').appendTo(container), \"borderColor\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-cell-border-style\",\n                        label: encode(messages.borderStyle),\n                        editor: function(container, options) {\n                            that._initBorderStyleDropDown($('<input id=\"k-editor-cell-border-style\" />').appendTo(container),\n                                \"borderStyle\",\n                                cellProperties,\n                                cellView,\n                                borderStyles);\n                        }\n                    }]\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-id\",\n                    label: {\n                        text: encode(messages.id),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-cell-id\" />').appendTo(container), \"id\", cellProperties, cellView);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-css-class\",\n                    label: {\n                        text: encode(messages.cssClass),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-cell-css-class\" />').appendTo(container), \"className\", cellProperties, cellView);\n                    }\n                }\n            ]\n        }).data(\"kendoForm\");\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    },\n\n    _createAccessibilityPropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-accessibility-properties\");\n        var components = that.components;\n        var accessibilityView = components.accessibilityView = {};\n        var tableProperties = table.tableProperties;\n        var form;\n\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: \"full\",\n                    field: \"k-editor-id\",\n                    label: {\n                        text: encode(messages.id),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-id\" />').appendTo(container), \"id\", tableProperties, accessibilityView);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-css-class\",\n                    label: {\n                        text: encode(messages.cssClass),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-css-class\" />').appendTo(container), \"className\", tableProperties, accessibilityView);\n                    }\n                },\n                {\n                    layout: \"grid\",\n                    grid: {\n                        cols: 4,\n                        gutter: 16\n                    },\n                    colSpan: \"full\",\n                    type: \"group\",\n                    label: \"Accessibility\",\n                    items: [\n                        {\n                            colSpan: 2,\n                            field: \"k-editor-table-caption\",\n                            label: {\n                                text: encode(messages.caption),\n                                optional: true\n                            },\n                            editor: function(container, options) {\n                                that._initInput($('<input id=\"k-editor-table-caption\" />').appendTo(container), \"captionContent\", tableProperties, accessibilityView);\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-accessibility-alignment\",\n                            label: encode(messages.captionAlignment),\n                            editor: function(container, options) {\n                                that._initAccessibilityAlignmentDropDown($('<input id=\"k-editor-accessibility-alignment\" />').appendTo(container), tableProperties);\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-header-rows\",\n                            label: encode(messages.headerRows),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-header-rows\" />').appendTo(container),\n                                \"headerRows\",\n                                tableProperties,\n                                accessibilityView,\n                                {\n                                    max: tableProperties.rows || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-header-columns\",\n                            label: encode(messages.headerColumns),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-header-columns\" />').appendTo(container),\n                                \"headerColumns\",\n                                tableProperties,\n                                accessibilityView,\n                                {\n                                    max: tableProperties.columns || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                });\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-cells-headers\",\n                            label: encode(messages.associateCellsWithHeaders),\n                            editor: function(container, options) {\n                                var element = $(`<select id=\"k-editor-cells-headers\">\n                                    <option value=\"none\">${ messages.associateNone }</option>\n                                    <option value=\"scope\">${ messages.associateScope }</option>\n                                    <option value=\"ids\">${ messages.associateIds }</option>\n                                </select>`).appendTo(container);\n\n                                that._initAssociationDropDown(element, \"cellsWithHeaders\", { valuePrimitive: true }, tableProperties, accessibilityView);\n                            }\n                        },{\n                            colSpan: \"full\",\n                            field: \"k-editor-accessibility-summary\",\n                            label: {\n                                text: encode(messages.summary),\n                                optional: true\n                            },\n                            editor: function(container, options) {\n                                that._initTextArea($('<textarea id=\"k-editor-accessibility-summary\"></textarea>').appendTo(container), \"summary\", tableProperties, accessibilityView, {\n                                    rows: 5,\n                                    placeholder: messages.tableSummaryPlaceholder\n                                });\n                            }\n                        }\n                    ]\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    }\n});\n\nkendo.ui.editor.TableWizardDialog = TableWizardDialog;\n\n})(window.kendo.jQuery);\n\nconst __meta__ = {\n        id: \"editor\",\n        name: \"Editor\",\n        category: \"web\",\n        description: \"Rich text editor component\",\n        depends: [ \"combobox\", \"dropdownlist\", \"window\", \"colorpicker\", \"toolbar\", \"icons\" ],\n        features: [ {\n            id: \"editor-imagebrowser\",\n            name: \"Image Browser\",\n            description: \"Support for uploading and inserting images\",\n            depends: [ \"imagebrowser\" ]\n        }, {\n            id: \"editor-resizable\",\n            name: \"Resize handle\",\n            description: \"Support for resizing the content area via a resize handle\",\n            depends: [ \"resizable\" ]\n        }, {\n            id: \"editor-tablewizard\",\n            name: \"Table wizard dialog\",\n            description: \"Support for table properties configuration\",\n            depends: [ \"tabstrip\", \"button\", \"numerictextbox\", \"textarea\" ]\n        }, {\n            id: \"editor-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export Editor content as PDF\",\n            depends: [ \"pdf\", \"drawing\" ]\n        }]\n    };\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
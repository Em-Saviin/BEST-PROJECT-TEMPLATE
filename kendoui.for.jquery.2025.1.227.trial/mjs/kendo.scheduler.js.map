{"version":3,"sources":["raw-mjs/kendo.scheduler.js"],"names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","date","MS_PER_DAY","getDate","getMilliseconds","recurrence","encode","htmlEncode","keys","ui","Widget","DataBoundWidget","STRING","Popup","Calendar","DataSource","data","isPlainObject","extend","toString","Object","prototype","isArray","Array","NS","CLICK","MOUSEDOWN","TOUCHSTART","support","pointers","TOUCHMOVE","TOUCHEND","MOUSEMOVE","mousemove","CHANGE","PROGRESS","ERROR","CANCEL","REMOVE","RESET","SAVE","EDIT","DISABLED","FOCUSEDSTATE","valueStartEndBoundRegex","MIN_SCREEN","TODAY","Date","EXCEPTION_SEPARATOR","OLD_EXCEPTION_SEPARATOR_REGEXP","RECURRENCE_EXCEPTION","EDITRECURRING","COMMANDBUTTONTMPL","className","attr","text","icon","fillMode","themeColor","html","renderButton","VIEWS_DROPDOWN_TEMPLATE","template","label","views","type","map","view","title","join","DEFAULT_TOOLS","pdf","attributes","class","pdfMobile","showText","today","previous","groupClass","next","current","search","refresh","create","calendar","previousMobile","nextMobile","currentMobile","togglable","group","defaultDesktopTools","defaultMobileToolsFirst","defaultMobileToolsSecond","timezoneButtonText","model","message","startTimezone","endTimezone","appendTimezoneAttr","attrs","options","timezone","appendValidDateValidator","validationRules","fields","field","validation","validDateRule","validDateValidator","appendDateCompareValidator","dateCompareRule","dateCompare","convertData","method","removeUid","event","idx","length","startOffset","endOffset","start","getTimezoneOffset","end","convert","uid","getTime","getOccurrenceByUid","SchedulerDataReader","Class","init","schema","reader","this","originalFunction","wrapDataAccess","bind","serialize","call","ObservableArray","wrapDataSerialization","errors","parse","total","groups","aggregates","applyZone","fromZone","toZone","remove","input","filter","picker","widgetInstance","parseDate","val","format","value","SchedulerEvent","Model","define","that","fn","_defaultId","defaults","idField","_time","fieldTime","toUtcTime","_date","clone","updateUid","constructor","toJSON","duration","offset","MS_PER_MINUTE","expand","zone","update","eventInfo","set","_startTime","_endTime","isMultiDay","isAllDay","isException","isNew","recurrenceId","isOccurrence","isRecurring","recurrenceRule","isRecurrenceHead","toOccurrence","recurrenceException","obj","shouldSerialize","key","milliseconds","setTime","defaultValue","required","validDate","container","closest","startInput","find","endInput","startPicker","endPicker","editable","untilDateCompare","until","SchedulerDataSource","modelBase","apply","logic","filters","operator","Query","events","concat","expandAll","toArray","cancelChanges","_removeExceptionDate","insert","index","_createNewModel","accept","_pushCreated","_addExceptionDate","pushCreate","items","_removeExceptions","slice","item","shift","head","get","replaceRegExp","RegExp","toExceptionString","replace","test","newException","dataSource","Error","defaultCommands","canceledit","destroy","imageClass","iconClass","descriptionEditor","createValidationAttributes","appendTo","wrap","ruleName","rule","modelField","specialRules","datatype","inArray","isFunction","filterResourceEditorData","editor","parentValue","parentValueField","valueField","valueArray","editorValue","isMs","JSON","stringify","forEach","currentValue","indexOf","splice","trigger","bindParentValueChangeHandler","currentEditor","resource","parent","parentElement","ns","parentWidget","getKendoDropDownList","ev","sender","dataParentValueField","dataValueField","on","target","filterMobileResourceEditorData","parentSelectedValue","itemParentValue","getter","removeAttribute","setAttribute","moveEventRange","distance","editors","mobile","dateRange","dateTimeValidate","dateValidate","hide","timezonePopUp","messages","noTimezone","click","kendoMobileTimezoneEditor","optionLabel","kendoMobileRecurrenceEditor","pane","multipleResources","dataTextField","setTimeout","resources","desktop","timezoneEditorButton","visible","toggle","kendoTimezoneEditor","kendoRecurrenceEditor","kendoMultiSelect","valuePrimitive","itemTemplate","disabled","dataColorField","tagTemplate","select","e","dataItem","preventDefault","dataBound","list","i","element","eq","addClass","kendoDropDownList","Editor","Observable","createButton","toggleDateValidationHandler","_toggleDateValidation","isDateTimeInput","shouldValidate","bindAttribute","each","is","allDayEvent","checkHierarchical","windows_zones","push","_initTimezoneEditor","repeat","recurrenceEditor","resourceIndex","parentResource","some","multiple","_buildDesktopEditTemplate","editableFields","renderCheckBox","separateTimezones","editableField","fieldName","fieldTitle","_createEndTimezoneButton","_buildMobileEditTemplate","midPart","_buildEditTemplate","isMobile","settings","Template","templateSettings","unescape","_revertTimezones","_startTimezone","_endTimezone","MobileEditor","arguments","Pane","viewEngine","viewOptions","renderOnInit","wrapInSections","detachOnHide","detachOnDestroy","css","height","animations","left","right","close","unbind","timezoneView","content","kSwitch","endTimezoneRow","last","cancel","timezoneTitle","save","append","contentElement","show","stopPropagation","hasClass","editView","_editPane","navigate","checked","enable","showDialog","actions","buttons","button","action","primary","document","body","kendoDialog","modal","preventScroll","closable","editEvent","updateText","removeText","cancelText","titleText","editorTitle","resetSeries","resetSeriesBtn","deleteBtn","kendoEditable","clearContainer","validateOnBlur","_views","roleSelector","not","purge","PopupEditor","$html","deleteText","applyStylesFromKendoAttributes","kendoWindow","resizable","draggable","userTriggered","position","open","center","cycleForm","popup","_timezonePopup","buttonIndex","wrapper","currentTarget","getKendoWindow","activator","wnd","checkbox","saveButton","cancelButton","timezonePopup","startTimezoneChange","prop","timezoneEditorTitle","focus","Scheduler","_initModel","_wrapper","selectable","_tabindex","_toolbar","_dataSource","_resources","_resizeHandler","resize","_resizable","_movable","_bindResize","_navigation","_selectable","_touchHandlers","_ariaId","guid","_createEditor","mediaQueryList","mediaQuery","onChange","_onMediaChange","toolbar","children","removeClass","_showWatermarkOverlay","_selectedView","toolbarEl","getKendoToolBar","matches","_model","dateForTitle","shortDateForTitle","_unbindResize","off","dataItems","_data","eventsUids","dict","eventsUidsLength","eventsCount","sortedData","_isMobile","mobileOS","_isTouch","originalEvent","pointerType","_isInverseColor","eventElement","_groupsByResource","groupIndex","groupsArray","parentFieldValue","parentField","prevIndex","dataIndex","fieldValue","currentGroupIndex","selectedGroups","selection","_selection","selectedEvents","slots","_selectedSlots","_selectedEvents","_resourceBySlot","_old","clearSelection","groupsByResource","groupedResources","_selectEvents","_select","ranges","rangeStart","_startDate","rangeEnd","addDays","_endDate","timeSlotCollectionCount","toLocalDate","isDaySlot","eventsLength","isGrouped","ctrlKey","_ctrlKey","currentGroup","daySlotCollectionCount","collIdx","getTimeSlotCollection","dayCollIdx","getDaySlotCollection","getAttribute","_createSelection","startX","startY","endX","endY","timeStamp","touchMoveHandler","_touchMove","stop","_touchPosX","_tapPosition","_touchPosY","_userTouched","_scrolling","now","_preventFocus","delta","amplitude","_amplitude","_dragging","Math","abs","_mouseDownSelection","kineticScrollNeeded","animate","scrollTop","_mouseDown","_initialFocus","_shiftKey","_keydown","shiftKey","mouseMoveHandler","_mouseMove","which","isRight","_activeElement","focusElement","_selectFirstSlot","firstSlot","firstAllDay","first","firstContent","_firstEvent","firstEvent","contentEvent","firstEventInAllDay","firstEventInContent","occurrenceByUid","_focusToolbar","oldSelection","oldEventsLength","removeAttr","oldSelectionStart","selectionStart","oldSelectionEnd","selectionEnd","selectionRangeChanged","currentUid","uids","coordinate","changedTouches","verticalScroll","scrollHeight","clientHeight","horizontalScroll","scrollWidth","clientWidth","round","scrollLeft","applyVerticalScroll","applyhorizontalScroll","clearTimeout","_moveTimer","slot","selectionByElement","startDate","endDate","backward","_viewByIndex","_keydownToolbar","keyCode","altKey","DOWN","_showCalendar","_selectedViewName","activeElement","_keydownView","cell","isModifier","arrowKeys","LEFT","RIGHT","UP","isRtl","ENTER","DELETE","BACKSPACE","moveToEvent","HOME","END","_scrollTo","removeEvent","_keydownShortcut","currentDate","toggleFullDay","addEvent","timezoneOffset","_keydownYearView","TAB","F10","_adjustSelectedDate","_keydownAgendaView","move","_keydownChangeView","viewByIndex","viewIndex","_keydownChangeDate","direction","nextDate","previousDate","toolbarIsFocused","ESC","_updateSelection","_updateEventForSelection","_timeSlotInterval","indexOfEvent","autoBind","snap","allDaySlot","min","max","workWeekStart","workWeekEnd","workDays","showWorkHours","startTime","endTime","currentTimeMarker","updateInterval","useLocalTimezone","ongoingEvents","cssClass","enabled","footer","deleteWindowTitle","selectView","ariaSlotLabel","ariaEventLabel","at","to","allDay","prefix","day","week","workWeek","agenda","month","timeline","timelineWeek","timelineWorkWeek","timelineMonth","year","recurrenceMessages","resetSeriesWindowTitle","deleteWindowOccurrence","deleteWindowSeries","editWindowTitle","editWindowOccurrence","editWindowSeries","confirmation","width","orientation","_refreshHandler","_progressHandler","_errorHandler","_resourceRefreshHandler","resourceDS","_resourceProgressHandler","_resourceErrorHandler","_editor","_moveDraggable","_resizeDraggable","add","setDataSource","fetch","siblings","startSlot","endSlot","startResources","clonedEvent","originSlot","originStartTime","clonedEvents","cachedEvents","movable","android","Draggable","ignore","holdToDrag","autoScroll","isTouch","_eventOptionsForMove","inverseColor","evtClone","evtCloneElement","_slotByPosition","x","startLocation","y","range","location","slotIndex","targetSlotElement","top","_updateMoveHint","_removeMoveHint","endResources","_isMultiDrag","evt","updatedEventOptions","eventOptions","_updateEvent","sync","cancelHold","handle","directions","dragstart","_updateEventForResize","drag","dir","currentSlot","originalStart","originalEnd","_updateResizeHint","dragend","dragHandle","_removeResizeHint","setHours","setMinutes","dragcancel","updateEvent","callback","_preventRefresh","_convertDates","getHours","getMinutes","getSeconds","recurrenceHead","getByUid","_showRecurringDialog","eventUid","exception","editRecurring","occurrenceText","seriesText","_modelForContainer","_confirmation","isResetSeries","_isEditorOpened","deleteRecurringConfirmation","deleteSeriesConfirmation","resetSeriesConfirmation","cancelEvent","_editEvent","saveEvent","dirty","_editRecurringDialog","_createPopupEditor","editOccurrence","editSeries","editRecurringMode","_createButton","command","commandName","edit","_set","_attemptRefresh","_deleteRecurringDialog","_removeEvent","occurrence","occurrencesInRange","deleteOccurrence","deleteSeries","createException","deleteOccurrenceConfirmation","createExceptionConfirmation","currentModel","seriesCallback","occurrenceCallback","exeptionCallback","deleteRecurring","_unbindView","_bindView","_viewRemoveHandler","_viewAddHandler","_viewEditHandler","_viewNavigateHandler","isWorkDay","switchWorkDay","_workDayMode","_selectView","_viewActivateHandler","constrainSelection","_renderView","_initialSize","matchMedia","_viewsCount","viewElementToSelect","viewsDropdown","viewsButtonGroup","rebind","viewName","_initializeView","mouseAndTouchPresent","mobileDateForTitle","mobileYearForTitle","force","size","getSize","currentSize","_size","selectedDate","isInDateRange","setFullYear","getFullYear","getMonth","isSettings","overrideOptions","trimOptions","defaultView","selected","hasType","defaultViews","time","resourceFetchArray","_preventRebind","when","then","_requestStart","_error","_progress","progress","resourcePromises","_resourceDataSource","groupName","promises","dataSourceInstance","_bindResourceEvents","isResourceGrouped","_refreshResource","observable","formattedDate","formattedShortDate","_processHandlers","_pdfClickHandler","saveAsPDF","_createClickHandler","_calendarClickHandler","_currentClickHandler","_todayClickHandler","_previousClickHandler","_nextClickHandler","_refreshClickHandler","_viewClickHandler","values","t","_processDefaults","viewsDdl","viewsMobile","viewsButtons","refAttribute","toLowerCase","_viewsButtons","_processToolbarArray","tools","toolbarOptions","commands","grep","unshift","_processViewTools","result","viewsIndex","_processToolbarItems","desktopItems","mobileItems","navigation","main","_processTools","secondToolbar","kendoToolBar","defaultTools","parentMessages","placeholder","throttle","targetElm","anchor","activate","_toggleResize","change","setOptions","depth","copyAnchorStyles","preventRefresh","visibleEndDate","refreshLayout","render","slotByPosition","slotByElement","el","centerX","centerY","resourcesBySlot","plugin","PDFMixin","SCHEDULER_EXPORT","_drawPDF","styles","style","cssText","scheduler","promise","Deferred","table","_drawPDFShadow","avoidLinks","done","args","page","pageNumber","totalPages","notify","resolve","fail","err","reject","always","TimezoneEditor","zones","zones_titles","_zonesQuery","_zoneTitleId","_zoneTitlePicker","_zonePicker","_zoneTitle","_zone","_value","zoneTitle","DropDownList","cascadeFrom","other_zone","ZONETITLEOPTIONTEMPLATE","ZONEOPTIONTEMPLATE","territory","MobileTimezoneEditor","_bindZones","_filter","_options","_zonePickerLabel","zoneSelect","after","zonePicker","zone_value","jQuery","kendo$1"],"mappings":"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","file":"kendo.scheduler.js","sourcesContent":["import './kendo.dropdownlist.js';\nimport './kendo.editable.js';\nimport './kendo.multiselect.js';\nimport './kendo.window.js';\nimport './kendo.datetimepicker.js';\nimport './kendo.scheduler.recurrence.js';\nimport './kendo.scheduler.view.js';\nimport './kendo.scheduler.dayview.js';\nimport './kendo.scheduler.agendaview.js';\nimport './kendo.scheduler.monthview.js';\nimport './kendo.scheduler.timelineview.js';\nimport './kendo.scheduler.yearview.js';\nimport './kendo.dialog.js';\nimport './kendo.pane.js';\nimport './kendo.pdf.js';\nimport './kendo.switch.js';\nimport './kendo.toolbar.js';\nimport './kendo.html.button.js';\nimport './kendo.icons.js';\n\nconst __meta__ = {\n    id: \"scheduler\",\n    name: \"Scheduler\",\n    category: \"web\",\n    description: \"The Scheduler is an event calendar.\",\n    depends: [ \"dropdownlist\", \"editable\", \"multiselect\", \"window\", \"datepicker\", \"datetimepicker\", \"toolbar\", \"scheduler.recurrence\", \"scheduler.view\", \"html.button\", \"icons\" ],\n    features: [ {\n        id: \"scheduler-dayview\",\n        name: \"Scheduler Day View\",\n        description: \"Scheduler Day View\",\n        depends: [ \"scheduler.dayview\" ]\n    }, {\n        id: \"scheduler-agendaview\",\n        name: \"Scheduler Agenda View\",\n        description: \"Scheduler Agenda View\",\n        depends: [ \"scheduler.agendaview\" ]\n    }, {\n        id: \"scheduler-monthview\",\n        name: \"Scheduler Month View\",\n        description: \"Scheduler Month View\",\n        depends: [ \"scheduler.monthview\" ]\n    }, {\n        id: \"scheduler-timelineview\",\n        name: \"Scheduler Timeline View\",\n        description: \"Scheduler Timeline View\",\n        depends: [ \"scheduler.timelineview\" ]\n    }, {\n        id: \"scheduler-yearview\",\n        name: \"Scheduler Year View\",\n        description: \"Scheduler Year View\",\n        depends: [ \"scheduler.yearview\" ]\n    }, {\n        id: \"scheduler-mobile\",\n        name: \"Scheduler adaptive rendering\",\n        description: \"Support for adaptive rendering\",\n        depends: [ \"dialog\", \"pane\", \"switch\" ]\n    }, {\n        id: \"scheduler-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export the scheduler events as PDF\",\n        depends: [ \"pdf\", \"drawing\" ]\n    }, {\n        id: \"scheduler-timezones\",\n        name: \"Timezones\",\n        description: \"Allow selecting timezones different than Etc/UTC\",\n        depends: [ \"timezones\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        date = kendo.date,\n        MS_PER_DAY = date.MS_PER_DAY,\n        getDate = date.getDate,\n        getMilliseconds = kendo.date.getMilliseconds,\n        recurrence = kendo.recurrence,\n        encode = kendo.htmlEncode,\n        keys = kendo.keys,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        DataBoundWidget = ui.DataBoundWidget,\n        STRING = \"string\",\n        Popup = ui.Popup,\n        Calendar = ui.Calendar,\n        DataSource = kendo.data.DataSource,\n        isPlainObject = $.isPlainObject,\n        extend = $.extend,\n        toString = Object.prototype.toString,\n        isArray = Array.isArray,\n        NS = \".kendoScheduler\",\n        CLICK = \"click\",\n        MOUSEDOWN = \"mousedown\",\n        TOUCHSTART = kendo.support.pointers ? \"pointerdown\" : \"touchstart\",\n        TOUCHMOVE = kendo.support.pointers ? \"pointermove\" : \"touchmove\",\n        TOUCHEND = kendo.support.pointers ? \"pointerup\" : \"touchend\",\n        MOUSEMOVE = kendo.support.mousemove,\n        CHANGE = \"change\",\n        PROGRESS = \"progress\",\n        ERROR = \"error\",\n        CANCEL = \"cancel\",\n        REMOVE = \"remove\",\n        RESET = \"resetSeries\",\n        SAVE = \"save\",\n        ADD = \"add\",\n        EDIT = \"edit\",\n        DISABLED = \"disabled\",\n        OPTION = \"option\",\n        FOCUSEDSTATE = \"k-focus\",\n        INVERSECOLORCLASS = \"k-event-inverse\",\n        valueStartEndBoundRegex = /(?:value:start|value:end)(?:,|$)/,\n        MIN_SCREEN = \"(min-width: 1024px)\",\n        TODAY = getDate(new Date()),\n        EXCEPTION_SEPARATOR = \",\",\n        OLD_EXCEPTION_SEPARATOR_REGEXP = /\\;/g,\n        RECURRENCE_EXCEPTION = \"recurrenceException\",\n        DELETECONFIRM = \"Are you sure you want to delete this event?\",\n        DELETERECURRING = \"Do you want to delete only this event occurrence or the whole series?\",\n        EDITRECURRING = \"Do you want to edit only this event occurrence or the whole series?\",\n        DELETERECURRINGCONFIRM = \"Are you sure you want to delete this event occurrence?\",\n        RESETSERIESCONFIRM = \"Are you sure you want to reset the whole series?\",\n        DELETESERIESCONFIRM = \"Are you sure you want to delete the whole series?\",\n        ONGOING_CLASS = \"k-event-ongoing\",\n        COMMANDBUTTONTMPL = ({ className, attr, text, icon, fillMode, themeColor }) =>\n            kendo.html.renderButton(`<button type=\"button\" class=\"${className}\" ${attr}>${text}</button>`, {\n                icon: icon,\n                fillMode: fillMode,\n                themeColor: themeColor\n            }),\n        VIEWS_DROPDOWN_TEMPLATE = kendo.template(({ label, views, type }) =>\n            `<select aria-label=\"${label}\" class=\"k-picker k-dropdown-list k-dropdown ${type}\">` +\n                Object.keys(views).map((view) => `<option value=\"${view}\">${views[view].title}</option>`).join('') +\n            '</select>'\n        ),\n\n        DEFAULT_TOOLS = {\n            pdf: {\n                name: \"pdf\",\n                type: \"button\",\n                icon: \"file-pdf\",\n                attributes: {\n                    class: \"k-pdf\"\n                }\n            },\n            pdfMobile: {\n                name: \"pdf\",\n                type: \"button\",\n                icon: \"file-pdf\",\n                showText: \"overflow\",\n                attributes: {\n                    class: \"k-pdf\"\n                }\n            },\n            today: {\n                name: \"today\",\n                type: \"button\",\n                attributes: {\n                    \"ref-nav-today\": \"\",\n                }\n            },\n            previous: {\n                name: \"previous\",\n                type: \"button\",\n                icon: \"caret-alt-left\",\n                showText: \"overflow\",\n                attributes: {\n                    \"ref-nav-prev\": \"\",\n                },\n                groupClass: \"k-scheduler-navigation\"\n            },\n            next: {\n                name: \"next\",\n                type: \"button\",\n                icon: \"caret-alt-right\",\n                showText: \"overflow\",\n                attributes: {\n                    \"ref-nav-next\": \"\",\n                },\n                groupClass: \"k-scheduler-navigation\"\n            },\n            current: {\n                name: \"current\",\n                type: \"button\",\n                icon: \"calendar\",\n                fillMode: \"flat\",\n                text: 'placeholder',\n                attributes: {\n                    \"aria-live\": \"polite\",\n                    class: \"k-nav-current\"\n                }\n            },\n            search: {\n                template: '<span class=\"k-scheduler-search k-textbox k-input k-input-md k-rounded-md k-input-solid\">' +\n                        '<input tabindex=\"-1\" autocomplete=\"off\" class=\"k-input-inner k-scheduler-search-input k-input-inner\" />' +\n                        `<span class=\"k-input-suffix\">${kendo.ui.icon(\"search\")}</span>` +\n                    '</span>'\n            },\n            refresh: {\n                name: \"refresh\",\n                type: \"button\",\n                icon: \"arrow-rotate-cw\",\n                showText: \"overflow\",\n                attributes: {\n                    class: \"k-scheduler-refresh\"\n                }\n            },\n            create: {\n                name: \"create\",\n                type: \"button\",\n                icon: \"plus\",\n                attributes: {\n                    class: \"k-create-event\"\n                }\n            },\n            calendar: {\n                name: \"calendar\",\n                type: \"button\",\n                icon: \"calendar\",\n                attributes: {\n                    class: \"k-nav-calendar\"\n                }\n            },\n            previousMobile: {\n                name: \"previous\",\n                type: \"button\",\n                icon: \"chevron-left\",\n                showText: \"overflow\",\n                attributes: {\n                    \"ref-nav-prev\": \"\",\n                },\n                groupClass: \"k-scheduler-navigation\"\n            },\n            nextMobile: {\n                name: \"next\",\n                type: \"button\",\n                icon: \"chevron-right\",\n                showText: \"overflow\",\n                attributes: {\n                    \"ref-nav-next\": \"\",\n                },\n                groupClass: \"k-scheduler-navigation\"\n            },\n            currentMobile: {\n                template: '<span class=\"k-scheduler-navigation\">' +\n                        '<span class=\"k-nav-current\">' +\n                            '<span class=\"k-m-date-format\"></span>' +\n                            '<span class=\"k-y-date-format\"></span>' +\n                        '</span>' +\n                    '</span>'\n            },\n            view: {\n                name: \"view\",\n                type: \"button\",\n                togglable: true,\n                group: \"views\"\n            }\n        },\n\n        defaultDesktopTools = [\n            [\"today\", \"previous\", \"next\"],\n            \"current\",\n            { type: \"spacer\" }\n        ],\n\n        defaultMobileToolsFirst = [\n            [\"calendar\"],\n            { type: \"spacer\" }\n        ],\n\n        defaultMobileToolsSecond = [\n            \"previousMobile\",\n            { type: \"spacer\" },\n            \"currentMobile\",\n            { type: \"spacer\" },\n            \"nextMobile\"\n        ],\n\n        MOBILEDATERANGEEDITOR = function(container, options) {\n            var attr = { name: options.field, title: options.title };\n            var isAllDay = options.model.isAllDay;\n            var dateTimeValidate = kendo.attr(\"validate\") + \"='\" + (!isAllDay) + \"'\";\n            var dateValidate = kendo.attr(\"validate\") + \"='\" + (!!isAllDay) + \"'\";\n\n            appendTimezoneAttr(attr, options);\n            appendValidDateValidator(attr, options);\n            appendDateCompareValidator(attr, options);\n\n            $('<input type=\"datetime-local\" required ' + kendo.attr(\"type\") + '=\"datetime-local\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + ', invisible:isAllDay\" ' + dateTimeValidate + '/>')\n                .attr(attr)\n                .appendTo(container);\n\n            $('<input type=\"date\" required ' + kendo.attr(\"type\") + '=\"date\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + ',visible:isAllDay\" ' +\n                dateValidate + '/>')\n                .attr(attr).appendTo(container);\n\n            $('<span ' + kendo.attr(\"for\") + '=\"' + options.field + '\" class=\"k-invalid-msg\"/>').hide().appendTo(container);\n        },\n        DATERANGEEDITOR = function(container, options) {\n            var attr = { name: options.field, title: options.title },\n                isAllDay = options.model.isAllDay,\n                dateTimeValidate = kendo.attr(\"validate\") + \"='\" + (!isAllDay) + \"' \",\n                dateValidate = kendo.attr(\"validate\") + \"='\" + (!!isAllDay) + \"' \";\n\n            appendTimezoneAttr(attr, options);\n            appendValidDateValidator(attr, options);\n            appendDateCompareValidator(attr, options);\n\n            $('<input type=\"text\" required ' + kendo.attr(\"type\") + '=\"date\"' + ' ' + kendo.attr(\"role\") + '=\"datetimepicker\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + ',invisible:isAllDay\" ' +\n                dateTimeValidate + '/>')\n            .attr(attr).appendTo(container);\n\n            $('<input type=\"text\" required ' + kendo.attr(\"type\") + '=\"date\"' + ' ' + kendo.attr(\"role\") + '=\"datepicker\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + ',visible:isAllDay\" ' +\n                dateValidate + '/>')\n            .attr(attr).appendTo(container);\n\n            $('<span ' + kendo.attr(\"bind\") + '=\"text: ' + options.field + 'Timezone\"></span>').appendTo(container);\n\n            if (options.field === \"end\") {\n                $('<span ' + kendo.attr(\"bind\") + '=\"text: startTimezone, invisible: endTimezone\"></span>').appendTo(container);\n            }\n\n            $('<span ' + kendo.attr(\"for\") + '=\"' + options.field + '\" class=\"k-invalid-msg\"/>').hide().appendTo(container);\n        },\n        RECURRENCEEDITOR = function(container, options) {\n            $('<div ' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />')\n                .attr({\n                    name: options.field\n                })\n                .appendTo(container)\n                .kendoRecurrenceEditor({\n                    start: options.model.start,\n                    timezone: options.timezone,\n                    messages: options.messages\n                });\n        },\n        MOBILERECURRENCEEDITOR = function(container, options) {\n            $('<div ' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />')\n                .attr({\n                    name: options.field\n                })\n                .appendTo(container)\n                .kendoMobileRecurrenceEditor({\n                    start: options.model.start,\n                    timezone: options.timezone,\n                    messages: options.messages,\n                    pane: options.pane,\n                    value: options.model[options.field]\n                });\n        },\n        MOBILEISALLDAYEDITOR = function(container, options) {\n            $('<input type=\"checkbox\" data-role=\"switch\"' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />').appendTo(container);\n        },\n        ISALLDAYEDITOR = function(container, options) {\n            $('<input type=\"checkbox\" data-role=\"checkbox\"' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" data-label=\"' + options.title + '\" />')\n                .attr({\n                    id: options.field,\n                    name: options.field,\n                    title: options.title ? options.title : options.field\n                })\n                .appendTo(container);\n        },\n        MOBILETIMEZONEPOPUP = function(container, options) {\n            var text = timezoneButtonText(options.model, options.messages.noTimezone);\n            $('<span class=\"k-timezone-label\"></span>').text(text).appendTo(container);\n            $(kendo.ui.icon(\"arrow-chevron-right\")).appendTo(container);\n            container.closest(\"li.k-item label\").on(CLICK, options.click);\n        },\n        TIMEZONEPOPUP = function(container, options) {\n            $('<a href=\"#\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" data-bind=\"invisible:isAllDay\"><span class=\"k-button-text\">' + options.messages.timezoneEditorButton + '</span></a>').on(CLICK, options.click).appendTo(container);\n        },\n        MOBILETIMEZONEEDITOR = function(container, options) {\n            $('<div class=\"k-mobiletimezoneeditor\" ' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />')\n                .attr({\n                    name: options.field\n                })\n                .appendTo(container)\n                .kendoMobileTimezoneEditor({\n                    optionLabel: options.noTimezone\n                });\n        },\n        TIMEZONEEDITOR = function(container, options) {\n            var visible = options.visible || options.visible === undefined$1;\n            $('<div ' + kendo.attr(\"bind\") + '=\"value:' + options.field + '\" />')\n                .attr({ name: options.field })\n                .toggle(visible)\n                .appendTo(container)\n                .kendoTimezoneEditor({\n                    optionLabel: options.noTimezone,\n                    title: options.title\n                });\n        };\n\n    function timezoneButtonText(model, message) {\n        message = message || \"\";\n\n        if (model.startTimezone) {\n            message = model.startTimezone;\n\n            if (model.endTimezone) {\n                message += \" | \" + model.endTimezone;\n            }\n        }\n\n        return message;\n    }\n\n    function appendTimezoneAttr(attrs, options) {\n        var timezone = options.timezone;\n\n        if (timezone) {\n            attrs[kendo.attr(\"timezone\")] = timezone;\n        }\n    }\n\n    function appendValidDateValidator(attrs, options) {\n        var validationRules = options.model.fields[options.field].validation;\n\n        if (validationRules) {\n            var validDateRule = validationRules.validDateValidator;\n            if (validDateRule && isPlainObject(validDateRule) && validDateRule.message) {\n                attrs[kendo.attr(\"validDate-msg\")] = validDateRule.message;\n            }\n        }\n    }\n\n    function appendDateCompareValidator(attrs, options) {\n        var validationRules = options.model.fields[options.field].validation;\n\n        if (validationRules) {\n            var dateCompareRule = validationRules.dateCompare;\n            if (dateCompareRule && isPlainObject(dateCompareRule) && dateCompareRule.message) {\n                attrs[kendo.attr(\"dateCompare-msg\")] = dateCompareRule.message;\n            }\n        }\n    }\n\n    function wrapDataAccess(originalFunction, timezone) {\n        return function(data) {\n            data = originalFunction(data);\n\n            convertData(data, \"apply\", timezone);\n\n            return data || [];\n        };\n    }\n\n    function wrapDataSerialization(originalFunction, timezone) {\n        return function(data) {\n\n            if (data) {\n                if (toString.call(data) !== \"[object Array]\" && !(data instanceof kendo.data.ObservableArray)) {\n                    data = [data];\n                }\n            }\n\n            convertData(data, \"remove\", timezone, true);\n\n            data = originalFunction(data);\n\n            return data || [];\n        };\n    }\n\n    function convertData(data, method, timezone, removeUid) {\n        var event,\n            idx,\n            length,\n            startOffset,\n            endOffset;\n\n        data = data || [];\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            event = data[idx];\n            startOffset = event.start ? event.start.getTimezoneOffset() : null;\n            endOffset = event.start ? event.end.getTimezoneOffset() : null;\n\n            if (removeUid) {\n                if (event.startTimezone || event.endTimezone) {\n                    if (timezone) {\n                        event.start = kendo.timezone.convert(event.start, event.startTimezone || event.endTimezone, timezone);\n                        event.end = kendo.timezone.convert(event.end, event.endTimezone || event.startTimezone, timezone);\n\n                        event.start = kendo.timezone[method](event.start, timezone);\n                        event.end = kendo.timezone[method](event.end, timezone);\n                    } else {\n                        event.start = kendo.timezone[method](event.start, event.startTimezone || event.endTimezone);\n                        event.end = kendo.timezone[method](event.end, event.endTimezone || event.startTimezone);\n                    }\n\n                } else if (timezone) {\n                    event.start = kendo.timezone[method](event.start, timezone);\n                    event.end = kendo.timezone[method](event.end, timezone);\n                }\n            } else {\n                if (event.startTimezone || event.endTimezone) {\n                    event.start = kendo.timezone[method](event.start, event.startTimezone || event.endTimezone);\n                    event.end = kendo.timezone[method](event.end, event.endTimezone || event.startTimezone);\n\n                    if (timezone) {\n                        event.start = kendo.timezone.convert(event.start, event.startTimezone || event.endTimezone, timezone);\n                        event.end = kendo.timezone.convert(event.end, event.endTimezone || event.startTimezone, timezone);\n                    }\n\n                } else if (timezone) {\n                    event.start = kendo.timezone[method](event.start, timezone);\n                    event.end = kendo.timezone[method](event.end, timezone);\n                }\n            }\n\n            if (removeUid) {\n                delete event.uid;\n            }\n\n            if (method === \"remove\" && event.start && startOffset && startOffset !== event.start.getTimezoneOffset()) {\n                event.start = new Date(event.start.getTime() + (startOffset - event.start.getTimezoneOffset()) * 60000);\n            }\n            if (method === \"remove\" && event.end && endOffset && endOffset !== event.end.getTimezoneOffset()) {\n                event.end = new Date(event.end.getTime() + (endOffset - event.end.getTimezoneOffset()) * 60000);\n            }\n        }\n        return data;\n    }\n\n    function getOccurrenceByUid(data, uid) {\n        var length = data.length,\n            idx = 0,\n            event;\n\n        for (; idx < length; idx++) {\n            event = data[idx];\n\n            if (event.uid === uid) {\n                return event;\n            }\n        }\n    }\n\n    var SchedulerDataReader = kendo.Class.extend({\n        init: function(schema, reader) {\n            var timezone = schema.timezone;\n\n            this.reader = reader;\n\n            if (reader.model) {\n                this.model = reader.model;\n            }\n\n            this.timezone = timezone;\n            this.data = wrapDataAccess(this.data.bind(this), timezone);\n            this.serialize = wrapDataSerialization(this.serialize.bind(this), timezone);\n        },\n        errors: function(data) {\n            return this.reader.errors(data);\n        },\n        parse: function(data) {\n            return this.reader.parse(data);\n        },\n        data: function(data) {\n            return this.reader.data(data);\n        },\n        total: function(data) {\n            return this.reader.total(data);\n        },\n        groups: function(data) {\n            return this.reader.groups(data);\n        },\n        aggregates: function(data) {\n            return this.reader.aggregates(data);\n        },\n        serialize: function(data) {\n            return this.reader.serialize(data);\n        }\n    });\n\n    function applyZone(date, fromZone, toZone) {\n        if (toZone) {\n            date = kendo.timezone.convert(date, fromZone, toZone);\n        } else {\n            date = kendo.timezone.remove(date, fromZone);\n        }\n\n        return date;\n    }\n\n    function validDateValidator(input) {\n        if ((input.filter(\"[name=start]\").length && input.filter(\"[title=Start]\").length) ||\n            (input.filter(\"[name=end]\").length && input.filter(\"[title=End]\").length) ||\n            input.filter(\".k-recur-until\").length) {\n            var date;\n            var picker = kendo.widgetInstance(input, kendo.ui);\n\n            if (picker) {\n                date = kendo.parseDate(input.val(), picker.options.format);\n                return !!date && picker.value();\n            } else {\n                date = kendo.parseDate(input.val());\n                return !!date;\n            }\n        }\n\n        return true;\n    }\n\n    function dateCompareValidator(input) {\n        if (input.filter(\"[name=end]\").length) {\n            var container = input.closest(\".k-scheduler-edit-form\");\n            var startInput = container.find(\"[name=start]:visible\");\n            var endInput = container.find(\"[name=end]:visible\");\n\n            if (endInput[0] && startInput[0]) {\n                var start, end;\n                var startPicker = kendo.widgetInstance(startInput, kendo.ui);\n                var endPicker = kendo.widgetInstance(endInput, kendo.ui);\n\n                var editable = container.data(\"kendoEditable\");\n                var model = editable ? editable.options.model : null;\n\n                if (startPicker && endPicker) {\n                    start = startPicker.value();\n                    end = endPicker.value();\n                } else {\n                    start = kendo.parseDate(startInput.val());\n                    end = kendo.parseDate(endInput.val());\n                }\n\n                if (start && end) {\n                    if (model) {\n                        var timezone = startInput.attr(kendo.attr(\"timezone\"));\n                        var startTimezone = model.startTimezone;\n                        var endTimezone = model.endTimezone;\n\n                        startTimezone = startTimezone || endTimezone;\n                        endTimezone = endTimezone || startTimezone;\n\n                        if (startTimezone) {\n                            start = applyZone(start, startTimezone, timezone);\n                            end = applyZone(end, endTimezone, timezone);\n                        }\n                    }\n\n                    return start <= end;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function untilDateCompareValidator(input) {\n        var untilPicker, until,\n            container, startInput, start, startPicker;\n\n        if (input.filter(\".k-recur-until\").length) {\n            untilPicker = kendo.widgetInstance(input, kendo.ui);\n            until = untilPicker.value();\n            container = input.closest(\".k-scheduler-edit-form\");\n            startInput = container.find(\"[name=start]:visible\");\n\n            if (startInput[0]) {\n                startPicker = kendo.widgetInstance(startInput, kendo.ui);\n\n                if (startPicker) {\n                    start = startPicker.value();\n                } else {\n                    start = kendo.parseDate(startInput.val());\n                }\n\n                if (start && until) {\n                    return start <= until;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    var SchedulerEvent = kendo.data.Model.define({\n        init: function(value) {\n            var that = this;\n\n            kendo.data.Model.fn.init.call(that, value);\n\n            that._defaultId = that.defaults[that.idField];\n        },\n\n        _time: function(field) {\n            var date = this[field];\n            var fieldTime = \"_\" + field + \"Time\";\n\n            if (this[fieldTime]) {\n                return this[fieldTime] - kendo.date.toUtcTime(kendo.date.getDate(date));\n            }\n\n            return getMilliseconds(date);\n        },\n\n        _date: function(field) {\n            var fieldTime = \"_\" + field + \"Time\";\n\n            if (this[fieldTime]) {\n                return this[fieldTime] - this._time(field);\n            }\n\n            return kendo.date.getDate(this[field]);\n        },\n\n        clone: function(options, updateUid) {\n            var uid = this.uid,\n                event = new this.constructor($.extend({}, this.toJSON(), options));\n\n            if (!updateUid) {\n                event.uid = uid;\n            }\n\n            return event;\n        },\n\n        duration: function() {\n            var end = this.end;\n            var start = this.start;\n            var offset = (end.getTimezoneOffset() - start.getTimezoneOffset()) * kendo.date.MS_PER_MINUTE;\n\n            return end - start - offset;\n        },\n\n        expand: function(start, end, zone) {\n            return recurrence ? recurrence.expand(this, start, end, zone) : [this];\n        },\n\n        update: function(eventInfo) {\n            for (var field in eventInfo) {\n                this.set(field, eventInfo[field]);\n            }\n\n            if (this._startTime) {\n                this.set(\"_startTime\", kendo.date.toUtcTime(this.start));\n            }\n\n            if (this._endTime) {\n                this.set(\"_endTime\", kendo.date.toUtcTime(this.end));\n            }\n        },\n\n        isMultiDay: function() {\n            return this.isAllDay || this.duration() >= kendo.date.MS_PER_DAY;\n        },\n\n        isException: function() {\n            return !this.isNew() && this.recurrenceId;\n        },\n\n        isOccurrence: function() {\n            return this.isNew() && this.recurrenceId;\n        },\n\n        isRecurring: function() {\n            return !!(this.recurrenceRule || this.recurrenceId);\n        },\n\n        isRecurrenceHead: function() {\n            return !!(this.id && this.recurrenceRule);\n        },\n\n        toOccurrence: function(options) {\n            options = $.extend(options, {\n                recurrenceException: null,\n                recurrenceRule: null,\n                recurrenceId: this.id || this.recurrenceId\n            });\n\n            options[this.idField] = this.defaults[this.idField];\n\n            return this.clone(options, true);\n        },\n\n        toJSON: function() {\n            var obj = kendo.data.Model.fn.toJSON.call(this);\n            obj.uid = this.uid;\n\n            delete obj._startTime;\n            delete obj._endTime;\n\n            return obj;\n        },\n\n        shouldSerialize: function(field) {\n            return kendo.data.Model.fn.shouldSerialize.call(this, field) && field !== \"_defaultId\";\n        },\n\n        set: function(key, value) {\n            var isAllDay = this.isAllDay || false;\n\n            kendo.data.Model.fn.set.call(this, key, value);\n\n            if (key == \"isAllDay\" && value != isAllDay) {\n                var start = kendo.date.getDate(this.start);\n                var end = new Date(this.end);\n                var milliseconds = kendo.date.getMilliseconds(end);\n\n                if (milliseconds === 0 && value) {\n                    milliseconds = MS_PER_DAY;\n                }\n\n                this.set(\"start\", start);\n\n                if (value === true) {\n                    kendo.date.setTime(end, -milliseconds);\n\n                    if (end < start) {\n                        end = start;\n                    }\n                } else {\n                    kendo.date.setTime(end, MS_PER_DAY - milliseconds);\n                }\n\n                this.set(\"end\", end);\n            }\n        },\n        id: \"id\",\n        fields: {\n            id: { type: \"number\" },\n            title: { defaultValue: \"\", type: \"string\" },\n            start: { type: \"date\", validation: { required: true, validDate: { value: validDateValidator } } },\n            startTimezone: { type: \"string\" },\n            end: {\n                type: \"date\",\n                validation: {\n                    required: true,\n                    validDate: { value: validDateValidator },\n                    dateCompare: { value: dateCompareValidator }\n                }\n            },\n            endTimezone: { type: \"string\" },\n            recurrenceRule: {\n                defaultValue: \"\",\n                type: \"string\",\n                validation: {\n                    validDate: { value: validDateValidator },\n                    untilDateCompare: { value: untilDateCompareValidator }\n                }\n            },\n            recurrenceException: { defaultValue: \"\", type: \"string\" },\n            isAllDay: { type: \"boolean\", defaultValue: false },\n            description: { type: \"string\" }\n        }\n    });\n\n    var SchedulerDataSource = DataSource.extend({\n        init: function(options) {\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: {\n                    modelBase: SchedulerEvent,\n                    model: SchedulerEvent\n                }\n            }, options));\n\n            this.reader = new SchedulerDataReader(this.options.schema, this.reader);\n        },\n\n        expand: function(start, end) {\n            var data = this.view(),\n                filter = {},\n                endOffset;\n\n            if (start && end) {\n                endOffset = end.getTimezoneOffset();\n                end = new Date(end.getTime() + MS_PER_DAY - 1);\n\n                if (end.getTimezoneOffset() !== endOffset) {\n                    end = kendo.timezone.apply(end, endOffset);\n                }\n\n                filter = {\n                    logic: \"or\",\n                    filters: [\n                        {\n                            logic: \"and\",\n                            filters: [\n                                { field: \"start\", operator: \"gte\", value: start },\n                                { field: \"end\", operator: \"gte\", value: start },\n                                { field: \"start\", operator: \"lte\", value: end }\n                            ]\n                        },\n                        {\n                            logic: \"and\",\n                            filters: [\n                                { field: \"start\", operator: \"lte\", value: new Date(start.getTime() + MS_PER_DAY - 1) },\n                                { field: \"end\", operator: \"gte\", value: start }\n                            ]\n                        }\n                    ]\n                };\n\n                data = new kendo.data.Query(expandAll(data, start, end, this.reader.timezone)).filter(filter).toArray();\n            }\n\n            return data;\n        },\n\n        cancelChanges: function(model) {\n            if (model && model.isOccurrence()) {\n                this._removeExceptionDate(model);\n            }\n\n            DataSource.fn.cancelChanges.call(this, model);\n        },\n\n        insert: function(index, model) {\n            if (!model) {\n                return;\n            }\n\n            if (!(model instanceof SchedulerEvent)) {\n                var eventInfo = model;\n\n                model = this._createNewModel();\n                model.accept(eventInfo);\n            }\n\n            if ((!this._pushCreated && model.isRecurrenceHead()) || model.recurrenceId) {\n                model = model.recurrenceId ? model : model.toOccurrence();\n                this._addExceptionDate(model);\n            }\n\n            return DataSource.fn.insert.call(this, index, model);\n        },\n\n        pushCreate: function(items) {\n            this._pushCreated = true;\n            DataSource.fn.pushCreate.call(this, items);\n            this._pushCreated = false;\n        },\n\n        remove: function(model) {\n            if (model.isRecurrenceHead()) {\n                this._removeExceptions(model);\n            } else if (model.isRecurring()) {\n                this._addExceptionDate(model);\n            }\n\n            return DataSource.fn.remove.call(this, model);\n        },\n\n        _removeExceptions: function(model) {\n            var data = this.data().slice(0),\n                item = data.shift(),\n                id = model.id;\n\n            while (item) {\n                if (item.recurrenceId === id) {\n                    DataSource.fn.remove.call(this, item);\n                }\n\n                item = data.shift();\n            }\n\n            model.set(RECURRENCE_EXCEPTION, \"\");\n        },\n\n        _removeExceptionDate: function(model) {\n            if (model.recurrenceId) {\n                var head = this.get(model.recurrenceId);\n\n                if (head) {\n                    var start = model.defaults.start;\n                    var replaceRegExp = new RegExp(\"(\\\\\" + EXCEPTION_SEPARATOR + \"?)\" + recurrence.toExceptionString(start, this.reader.timezone));\n                    var recurrenceException = (head.recurrenceException || \"\").replace(OLD_EXCEPTION_SEPARATOR_REGEXP, EXCEPTION_SEPARATOR).replace(/\\,$/, \"\");\n\n                    if (replaceRegExp.test(recurrenceException)) {\n                        head.set(RECURRENCE_EXCEPTION, recurrenceException.replace(replaceRegExp, \"\"));\n                    } else {\n                        start = model.start;\n                        replaceRegExp = new RegExp(\"(\\\\\" + EXCEPTION_SEPARATOR + \"?)\" + recurrence.toExceptionString(start, this.reader.timezone));\n                        head.set(RECURRENCE_EXCEPTION, recurrenceException.replace(replaceRegExp, \"\"));\n                    }\n                }\n            }\n        },\n\n        _addExceptionDate: function(model) {\n            var start = model.start;\n            var zone = this.reader.timezone;\n            var head = this.get(model.recurrenceId);\n            var recurrenceException = (head.recurrenceException || \"\").replace(OLD_EXCEPTION_SEPARATOR_REGEXP, EXCEPTION_SEPARATOR).replace(/\\,$/, \"\");\n\n            if (!recurrence.isException(recurrenceException, start, zone)) {\n                var newException = recurrence.toExceptionString(start, zone);\n                model.defaults.start = start;\n                head.set(RECURRENCE_EXCEPTION, recurrenceException + (recurrenceException && newException ? EXCEPTION_SEPARATOR : \"\") + newException);\n            }\n        }\n    });\n\n    function expandAll(events, start, end, zone) {\n        var length = events.length,\n            data = [],\n            idx = 0;\n\n        for (; idx < length; idx++) {\n            data = data.concat(events[idx].expand(start, end, zone));\n        }\n\n        return data;\n    }\n\n    SchedulerDataSource.create = function(options) {\n        if (isArray(options) || options instanceof kendo.data.ObservableArray) {\n            options = { data: options };\n        }\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof SchedulerDataSource) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only SchedulerDataSource instances are supported\");\n        }\n\n        return dataSource instanceof SchedulerDataSource ? dataSource : new SchedulerDataSource(dataSource);\n    };\n\n    extend(true, kendo.data, {\n       SchedulerDataSource: SchedulerDataSource,\n       SchedulerDataReader: SchedulerDataReader,\n       SchedulerEvent: SchedulerEvent\n    });\n\n    var defaultCommands = {\n        update: {\n            text: \"Save\",\n            className: \"k-button-solid-primary k-scheduler-update\"\n        },\n        canceledit: {\n            text: \"Cancel\",\n            className: \"k-scheduler-cancel\"\n        },\n        destroy: {\n            text: \"Delete\",\n            icon: \"trash\",\n            imageClass: \"k-i-trash\",\n            className: \"k-button-solid-primary k-scheduler-delete\",\n            iconClass: \"k-icon\"\n        }\n    };\n\n    function trimOptions(options, overrideOptions) {\n        delete options.name;\n        delete options.prefix;\n\n        delete options.remove;\n        delete options.edit;\n        delete options.add;\n        delete options.navigate;\n\n        for (var key in overrideOptions) {\n            options[key] = overrideOptions[key];\n        }\n\n        return options;\n    }\n\n    /*\n    function fieldType(field) {\n        field = field != null ? field : \"\";\n        return field.type || kendo.type(field) || \"string\";\n    }\n    */\n\n    function descriptionEditor(options) {\n        var attr = createValidationAttributes(options.model, options.field);\n\n        return function(container, model) {\n            $('<textarea name=\"description\" class=\"k-input-inner\" title=\"' + model.title + '\"/>').attr(attr)\n                .appendTo(container)\n                .wrap('<span class=\"k-input k-textarea k-input-solid k-input-md k-rounded-md\"></span>');\n        };\n    }\n\n    function createValidationAttributes(model, field) {\n        var modelField = (model.fields || model)[field];\n        var specialRules = [\"url\", \"email\", \"number\", \"date\", \"boolean\"];\n        var validation = modelField ? modelField.validation : {};\n        // var type = fieldType(modelField);\n        var datatype = kendo.attr(\"type\");\n        var inArray = $.inArray;\n        var ruleName;\n        var rule;\n\n        var attr = {};\n\n        for (ruleName in validation) {\n            rule = validation[ruleName];\n\n            if (inArray(ruleName, specialRules) >= 0) {\n                attr[datatype] = ruleName;\n            } else if (!kendo.isFunction(rule)) {\n                attr[ruleName] = isPlainObject(rule) ? (rule.value || ruleName) : rule;\n            }\n\n            attr[kendo.attr(ruleName + \"-msg\")] = rule.message;\n        }\n\n        return attr;\n    }\n\n    function filterResourceEditorData(editor, parentValue, parentValueField, valueField) {\n        var editorValue = editor.value(),\n            isMs = Array.isArray(editorValue),\n            valueArray;\n\n        if (isMs) {\n            valueArray = JSON.parse(JSON.stringify(editorValue));\n        } else {\n            valueArray = [editorValue.toString()];\n        }\n\n        editor.dataSource.data().forEach(function(item) {\n            if (item[parentValueField] === null || item[parentValueField] === undefined$1 || item[parentValueField] == parentValue) {\n                item.set(DISABLED, false);\n            } else {\n                var currentValue = item.get(valueField);\n\n                item.set(DISABLED, true);\n\n                if (valueArray.indexOf(currentValue) >= 0 || valueArray.indexOf(currentValue.toString()) >= 0) {\n                    if (isMs) {\n                        valueArray.splice(valueArray.indexOf(currentValue), 1);\n                    } else {\n                        editor.value(null);\n                        editor.trigger(CHANGE);\n                    }\n                }\n            }\n        });\n\n        if (isMs && valueArray.length < editorValue.length) {\n            editor.value(valueArray);\n            editor.trigger(CHANGE);\n        }\n    }\n\n    function bindParentValueChangeHandler(container, currentEditor, resource, parent) {\n        var parentElement = container.closest(\".k-edit-form-container\").find(\"[data-\" + kendo.ns + \"bind='value:\" + parent + \"']\");\n        var parentWidget = parentElement.getKendoDropDownList();\n\n        if (parentWidget) {\n            parentWidget.bind(CHANGE, function(ev) {\n                var parentValue = ev.sender.value();\n\n                filterResourceEditorData(currentEditor, parentValue, resource.dataParentValueField, resource.dataValueField);\n            });\n        } else {\n            parentElement.on(CHANGE, function(ev) {\n                var parentValue = ev.target.value;\n\n                filterResourceEditorData(currentEditor, parentValue, resource.dataParentValueField, resource.dataValueField);\n            });\n        }\n    }\n\n    function filterMobileResourceEditorData(resource, currentEditor, parentSelectedValue) {\n        var options = currentEditor.find(OPTION),\n            editorValue = currentEditor.val(),\n            isMs = Array.isArray(editorValue),\n            valueArray;\n\n        if (isMs) {\n            valueArray = JSON.parse(JSON.stringify(editorValue));\n        } else {\n            valueArray = [editorValue];\n        }\n\n        resource.dataSource.view().forEach(function(item, index) {\n            var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n            var valid = itemParentValue === null || itemParentValue === undefined$1 || itemParentValue == parentSelectedValue;\n\n            if (valid) {\n                options[index].removeAttribute(DISABLED);\n            } else {\n                options[index].setAttribute(DISABLED, DISABLED);\n\n                var currentValue = \"\" + item.get(resource.dataValueField);\n\n                if (valueArray.indexOf(currentValue) >= 0) {\n                    if (isMs) {\n                        valueArray.splice(valueArray.indexOf(currentValue), 1);\n                    } else {\n                        currentEditor.val(null);\n                        currentEditor.trigger(CHANGE);\n                    }\n                }\n            }\n        });\n\n        if (isMs && valueArray.length < editorValue.length) {\n            currentEditor.val(valueArray);\n            currentEditor.trigger(CHANGE);\n        }\n    }\n\n    function dropDownResourceEditor(resource, model, parent) {\n        var attr = createValidationAttributes(model, resource.field);\n\n        return function(container) {\n            var currentEditor;\n\n            if (parent) {\n                setTimeout(function() {\n                    filterResourceEditorData(currentEditor, model[parent], resource.dataParentValueField, resource.dataValueField);\n                    bindParentValueChangeHandler(container, currentEditor, resource, parent);\n                });\n            }\n\n            currentEditor = $(kendo.format('<select aria-labelledby=\"' + resource.field + '_label\" data-{0}bind=\"value:{1}\" title=\"' + model.title + '\">', kendo.ns, resource.field))\n                .appendTo(container)\n                .attr(attr)\n                .kendoDropDownList({\n                    dataTextField: resource.dataTextField,\n                    dataValueField: resource.dataValueField,\n                    dataSource: resource.dataSource.data(),\n                    valuePrimitive: resource.valuePrimitive,\n                    optionLabel: \"None\",\n                    template: (data) => `<span ${data.disabled ? \"data-disabled\" : \"\"}><span class=\"k-scheduler-mark\" ${kendo.attr(\"style-background-color\")}=\"${data[resource.dataColorField] || \"none\"}\"></span>${data[resource.dataTextField]}</span>`,\n                    select: function(e) {\n                        if (e.dataItem && e.dataItem.disabled) {\n                            e.preventDefault();\n                        }\n                    },\n                    dataBound: function(e) {\n                        let options = e.sender.list.find('li');\n\n                        for (let i = 0; i < options.length; i++) {\n                            var element = options.eq(i);\n\n                            if (element.find(\"[data-disabled]\").length > 0) {\n                                element.addClass(\"k-disabled\");\n                            }\n                        }\n                    }\n                }).data(\"kendoDropDownList\");\n       };\n    }\n\n    function dropDownResourceEditorMobile(resource, model, parent) {\n        var attr = createValidationAttributes(model, resource.field);\n\n        return function(container) {\n            var options = \"\";\n            var view = resource.dataSource.view();\n\n            for (var idx = 0, length = view.length; idx < length; idx++) {\n                options += kendo.format('<option value=\"{0}\">{1}</option>',\n                    kendo.getter(resource.dataValueField)(view[idx]),\n                    kendo.getter(resource.dataTextField)(view[idx])\n                );\n            }\n\n            var currentEditor = $(kendo.format('<select aria-labelledby=\"' + resource.field + '_label\" data-{0}bind=\"value:{1}\">{2}</select>',\n                kendo.ns,\n                resource.field,\n                options\n            ))\n            .appendTo(container)\n            .attr(attr);\n\n            if (parent) {\n                setTimeout(function() {\n                    var parentElement = container.closest(\".k-stretched-view\").find(\"[data-\" + kendo.ns + \"bind='value:\" + parent + \"']\");\n                    var parentSelectedValue = model[parent];\n\n                    filterMobileResourceEditorData(resource, currentEditor, parentSelectedValue);\n\n                    parentElement.on(CHANGE, function(ev) {\n                        var parentValue = ev.target.value;\n\n                        filterMobileResourceEditorData(resource, currentEditor, parentValue);\n                    });\n                });\n            }\n       };\n    }\n\n    function multiSelectResourceEditor(resource, model, parent) {\n        var attr = createValidationAttributes(model, resource.field);\n\n        return function(container) {\n            var currentEditor;\n\n            if (parent) {\n                setTimeout(function() {\n                    filterResourceEditorData(currentEditor, model[parent], resource.dataParentValueField, resource.dataValueField);\n                    bindParentValueChangeHandler(container, currentEditor, resource, parent);\n                });\n            }\n\n            currentEditor = $(kendo.format('<select aria-labelledby=\"' + resource.field + '_label\" data-{0}bind=\"value:{1}\">', kendo.ns, resource.field))\n                .appendTo(container)\n                .attr(attr)\n                .kendoMultiSelect({\n                    dataTextField: resource.dataTextField,\n                    dataValueField: resource.dataValueField,\n                    dataSource: resource.dataSource.data(),\n                    valuePrimitive: resource.valuePrimitive,\n                    itemTemplate: (data) => `<span ${data.disabled ? \"data-disabled\" : \"\"}><span class=\"k-scheduler-mark\" ${kendo.attr(\"style-background-color\")}=\"${data[resource.dataColorField] || \"none\"}\"></span>${data[resource.dataTextField]}</span>`,\n                    tagTemplate: (data) => `<span class=\"k-scheduler-mark\" ${kendo.attr(\"style-background-color\")}=\"${data[resource.dataColorField] || \"none\"}\"></span>${data[resource.dataTextField]}`,\n                    select: function(e) {\n                        if (e.dataItem && e.dataItem.disabled) {\n                            e.preventDefault();\n                        }\n                    },\n                    dataBound: function(e) {\n                        let options = e.sender.list.find('li');\n\n                        for (let i = 0; i < options.length; i++) {\n                            let element = options.eq(i);\n\n                            if (element.find(\"[data-disabled]\").length > 0) {\n                                element.addClass(\"k-disabled\");\n                            }\n                        }\n                    }\n                }).data(\"kendoMultiSelect\");\n       };\n    }\n\n    function multiSelectResourceEditorMobile(resource, model, parent) {\n        var attr = createValidationAttributes(model, resource.field);\n\n        return function(container) {\n            var options = \"\";\n            var view = resource.dataSource.view();\n\n            for (var idx = 0, length = view.length; idx < length; idx++) {\n                options += kendo.format('<option value=\"{0}\">{1}</option>',\n                    kendo.getter(resource.dataValueField)(view[idx]),\n                    kendo.getter(resource.dataTextField)(view[idx])\n                );\n            }\n\n            var currentEditor = $(kendo.format('<select aria-labelledby=\"' + resource.field + '_label\" data-{0}bind=\"value:{1}\" multiple=\"multiple\">{2}</select>',\n                kendo.ns,\n                resource.field,\n                options\n            ))\n            .appendTo(container)\n            .attr(attr);\n\n            if (parent) {\n                setTimeout(function() {\n                    var parentElement = container.closest(\".k-stretched-view\").find(\"[data-\" + kendo.ns + \"bind='value:\" + parent + \"']\");\n                    var parentSelectedValue = model[parent];\n\n                    filterMobileResourceEditorData(resource, currentEditor, parentSelectedValue);\n\n                    parentElement.on(CHANGE, function(ev) {\n                        var parentValue = ev.target.value;\n\n                        filterMobileResourceEditorData(resource, currentEditor, parentValue);\n                    });\n                });\n            }\n       };\n    }\n\n    function moveEventRange(event, distance) {\n        var duration = event.end.getTime() - event.start.getTime();\n\n        var start = new Date(event.start.getTime());\n\n        kendo.date.setTime(start, distance);\n\n        var end = new Date(start.getTime());\n\n        kendo.date.setTime(end, duration, true);\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    var editors = {\n        mobile: {\n            dateRange: MOBILEDATERANGEEDITOR,\n            timezonePopUp: MOBILETIMEZONEPOPUP,\n            timezone: MOBILETIMEZONEEDITOR,\n            recurrence: MOBILERECURRENCEEDITOR,\n            description: descriptionEditor,\n            multipleResources: multiSelectResourceEditorMobile,\n            resources: dropDownResourceEditorMobile,\n            isAllDay: MOBILEISALLDAYEDITOR\n        },\n        desktop: {\n            dateRange: DATERANGEEDITOR,\n            timezonePopUp: TIMEZONEPOPUP,\n            timezone: TIMEZONEEDITOR,\n            recurrence: RECURRENCEEDITOR,\n            description: descriptionEditor,\n            multipleResources: multiSelectResourceEditor,\n            resources: dropDownResourceEditor,\n            isAllDay: ISALLDAYEDITOR\n        }\n    };\n\n    var Editor = kendo.Observable.extend({\n        init: function(element, options) {\n\n            kendo.Observable.fn.init.call(this);\n\n            this.element = element;\n            this.options = extend(true, {}, this.options, options);\n            this.createButton = this.options.createButton;\n\n            this.toggleDateValidationHandler = this._toggleDateValidation.bind(this);\n        },\n\n        _toggleDateValidation: function(e) {\n            if (e.field == \"isAllDay\") {\n                var container = this.container,\n                    isAllDay = this.editable.options.model.isAllDay,\n                    bindAttribute = kendo.attr(\"bind\"),\n                    element, isDateTimeInput, shouldValidate;\n                container.find(\"[\" + bindAttribute + \"*=end],[\" + bindAttribute + \"*=start]\").each(function() {\n                    element = $(this);\n                    if (valueStartEndBoundRegex.test(element.attr(bindAttribute))) {\n                        isDateTimeInput = element.is(\"[\" + kendo.attr(\"role\") + \"=datetimepicker],[type*=datetime]\");\n                        shouldValidate = isAllDay !== isDateTimeInput;\n                        element.attr(kendo.attr(\"validate\"), shouldValidate.toString());\n                    }\n                });\n            }\n        },\n\n        fields: function(editors, model) {\n            var that = this;\n            var messages = that.options.messages;\n            var timezone = that.options.timezone;\n\n            var click = function(e) {\n                e.preventDefault();\n                that._initTimezoneEditor(model, this);\n            };\n\n            var fields = [\n                { field: \"title\", title: messages.editor.title /*, format: field.format, editor: field.editor, values: field.values*/ },\n                { field: \"start\", title: messages.editor.start, editor: editors.dateRange, timezone: timezone },\n                { field: \"end\", title: messages.editor.end, editor: editors.dateRange, timezone: timezone },\n                { field: \"isAllDay\", title: messages.editor.allDayEvent, editor: editors.isAllDay }\n            ];\n\n            var checkHierarchical = function(item) {\n                return !!item[resource.dataParentValueField];\n            };\n\n            if (kendo.timezone.windows_zones) {\n                fields.push({ field: \"timezone\", title: messages.editor.timezone, editor: editors.timezonePopUp, click: click, messages: messages.editor, model: model });\n                fields.push({ field: \"startTimezone\", title: messages.editor.startTimezone, editor: editors.timezone, noTimezone: messages.editor.noTimezone });\n                fields.push({ field: \"endTimezone\", title: messages.editor.endTimezone, editor: editors.timezone, noTimezone: messages.editor.noTimezone });\n            }\n\n            if (!model.recurrenceId) {\n                fields.push({ field: \"recurrenceRule\", title: messages.editor.repeat, editor: editors.recurrence, timezone: timezone, messages: messages.recurrenceEditor, pane: this.pane });\n            }\n\n            if (\"description\" in model) {\n                fields.push({ field: \"description\", title: messages.editor.description, editor: editors.description({ model: model, field: \"description\" }) });\n            }\n\n            for (var resourceIndex = 0; resourceIndex < this.options.resources.length; resourceIndex++) {\n                var resource = this.options.resources[resourceIndex];\n                var resourceView = resource.dataSource.view();\n                var hasParent = resourceView.some(checkHierarchical);\n                var parentResource, parent;\n\n                if (hasParent) {\n                    parentResource = this.options.resources[resourceIndex - 1];\n\n                    if (parentResource) {\n                        parent = parentResource.field;\n                    }\n                }\n\n                fields.push({\n                    field: resource.field,\n                    title: resource.title,\n                    editor: resource.multiple ? editors.multipleResources(resource, model, parent) : editors.resources(resource, model, parent)\n                });\n            }\n\n            return fields;\n        },\n\n        end: function() {\n            return this.editable.end();\n        },\n\n        _buildDesktopEditTemplate: function(model, fields, editableFields) {\n            var messages = this.options.messages;\n\n            const startTimezone = `<div class=\"k-popup-edit-form k-scheduler-edit-form k-scheduler-timezones\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                                    '<div class=\"k-form\">' +\n                                    '<div class=\"k-form-field\"><div class=\"k-form-field-wrap\">' + kendo.html.renderCheckBox($('<input class=\"k-timezone-toggle\"/>'), { label: messages.editor.separateTimezones }) + '</div></div>';\n\n            const editableField = (fieldName) => {\n                const isEditable = !model.editable || model.editable(fieldName);\n\n                if (isEditable) {\n                    return `<div ${kendo.attr(\"container-for\")}=\"${fieldName}\" class=\"k-form-field-wrap\"></div>`;\n                } else {\n                    return `<div class=\"k-form-field-wrap\">${(fieldName && kendo.getter(fieldName)(model)) || ''}</div>`;\n                }\n            };\n\n            const generateFields = (field) => {\n                const fieldName = field.field;\n                const fieldTitle = field.title;\n                const modelField = model.fields[fieldName];\n                const isEditable = !model.editable || model.editable(fieldName);\n\n                if (isEditable) {\n                    editableFields.push(field);\n                }\n\n                return (fieldName === 'startTimezone' ? startTimezone : '') +\n                    (modelField && modelField.type === \"boolean\" ?\n                        `<div class=\"k-form-field\">${editableField(fieldName)}</div>` :\n                        `<div class=\"k-form-field\"><label class=\"k-label k-form-label\" for=\"${fieldName}\" id=\"${fieldName}_label\">${fieldTitle || fieldName || \"\"}</label>${editableField(fieldName)}</div>`) +\n                    (fieldName === 'endTimezone' ? this._createEndTimezoneButton() : '');\n            };\n\n            return `<div class=\"k-form\">` +\n                fields.map(generateFields).join('') +\n            `</div>`;\n        },\n\n        _buildMobileEditTemplate: function(model, fields, editableFields) {\n            var messages = this.options.messages;\n\n            const startTimezone = `<div class=\"k-popup-edit-form k-scheduler-edit-form k-scheduler-timezones\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                                    '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                                        '<li class=\"k-item k-listgroup-item\">' +\n                                            '<label class=\"k-label k-listgroup-form-row\">' +\n                                                '<span class=\"k-item-title k-listgroup-form-row\">' + encode(messages.editor.separateTimezones) + '</span>' +\n                                                '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                                    '<input class=\"k-timezone-toggle\" data-role=\"switch\" type=\"checkbox\" />' +\n                                                '</span>' +\n                                            '</label>' +\n                                        '</li>';\n\n            const editableField = (field) => {\n                const fieldName = field.field;\n                const fieldTitle = field.title;\n                const isEditable = !model.editable || model.editable(fieldName);\n                let midPart;\n\n                if (isEditable) {\n                    midPart = `${fieldName === 'timezone' ?\n                                    `<label class=\"k-label k-listgroup-form-row\" data-bind=\"css: { k-disabled: isAllDay }\">` :\n                                    `<label class=\"k-label k-listgroup-form-row\">`}` +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${fieldTitle || fieldName || \"\"}</span>` +\n                        `<div class=\"k-listgroup-form-field-wrapper\" ${kendo.attr(\"container-for\")}=\"${fieldName}\"></div>`;\n                } else {\n                    midPart = `<li class=\"k-item k-listgroup-item\">` +\n                        `<label class=\"k-label k-no-click k-listgroup-form-row\">` +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${fieldTitle || fieldName || \"\"}</span>` +\n                        `<span class=\"k-no-editor k-listgroup-form-field-wrapper\">${(fieldName && kendo.getter(fieldName)(model)) || ''}</span>`;\n                }\n\n\n                return `<li class=\"k-item k-listgroup-item\">` +\n                   midPart +\n                `</label></li>`;\n\n            };\n\n            const generateFields = (field) => {\n                const fieldName = field.field;\n                const isEditable = !model.editable || model.editable(fieldName);\n\n                if (isEditable) {\n                    editableFields.push(field);\n                }\n\n                return (fieldName === \"timezone\" || fieldName === \"recurrenceRule\" ? '</ul><ul class=\"k-listgroup k-listgroup-flush\">' : '') +\n                    (fieldName === 'startTimezone' ? startTimezone : '') +\n                    editableField(field) +\n                    (fieldName === 'recurrenceRule' ? '</ul><ul class=\"k-listgroup k-listgroup-flush\">' : '') +\n                    (fieldName === 'endTimezone' ? '</ul></div>' : '');\n            };\n\n            const result = `<ul class=\"k-listgroup k-listgroup-flush\">` +\n                fields.map(generateFields).join('') +\n            `</ul>`;\n\n            return result;\n        },\n\n        _buildEditTemplate: function(model, fields, editableFields, isMobile) {\n            var settings = extend({}, kendo.Template, this.options.templateSettings);\n            var template = this.options.editable.template;\n            var html = \"\";\n\n            if (template) {\n                if (typeof template === STRING) {\n                    template = kendo.unescape(template);\n                }\n                html += (kendo.template(template, settings))(model);\n            } else if (isMobile) {\n                html += '<div data-role=\"content\">' + this._buildMobileEditTemplate(model, fields, editableFields) + '</div>';\n            } else {\n                html += this._buildDesktopEditTemplate(model, fields, editableFields);\n            }\n\n            return html;\n        },\n\n        _createEndTimezoneButton: function() {\n            return '</ul></div>';\n        },\n\n        _revertTimezones: function(model) {\n            model.set(\"startTimezone\", this._startTimezone);\n            model.set(\"endTimezone\", this._endTimezone);\n\n            delete this._startTimezone;\n            delete this._endTimezone;\n        }\n    });\n\n    var MobileEditor = Editor.extend({\n        init: function() {\n            Editor.fn.init.apply(this, arguments);\n\n            this.pane = kendo.Pane.wrap(this.element, {\n                viewEngine: {\n                    viewOptions: {\n                        renderOnInit: true,\n                        wrap: false,\n                        wrapInSections: true,\n                        detachOnHide: false,\n                        detachOnDestroy: false\n                    }\n                }\n            });\n            this.pane.element.parent().css(\"height\", this.options.height);\n            this.view = this.pane.view();\n        },\n\n        options: {\n            animations: {\n                left: \"slide\",\n                right: \"slide:right\"\n            }\n        },\n\n        destroy: function() {\n            this.close();\n            this.unbind();\n            this.pane.destroy();\n        },\n\n        _initTimezoneEditor: function(model) {\n            var that = this;\n            var pane = that.pane;\n            var messages = that.options.messages;\n            var timezoneView = that.timezoneView;\n            var container = timezoneView ? timezoneView.content.find(\".k-scheduler-timezones\") : that.container.find(\".k-scheduler-timezones\");\n            var kSwitch = container.find(\"input.k-timezone-toggle\").data(\"kendoSwitch\");\n            var endTimezoneRow = container.find(\"li.k-item:not(.k-zonepicker)\").last();\n            var startTimezoneChange = function(e) {\n                if (e.field === \"startTimezone\") {\n                    var value = model.startTimezone;\n\n                    kSwitch.enable(value);\n\n                    if (!value) {\n                        endTimezoneRow.hide();\n                        model.set(\"endTimezone\", \"\");\n                        kSwitch.value(false);\n                    }\n                }\n            };\n\n            that._startTimezone = model.startTimezone || \"\";\n            that._endTimezone = model.endTimezone || \"\";\n\n            if (!timezoneView) {\n                var html = '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\">' +\n                '<div data-role=\"header\" class=\"k-appbar k-appbar-primary\">' +\n                    kendo.html.renderButton(`<button class=\"k-header-cancel k-scheduler-cancel\" title=\"${messages.cancel}\" aria-label=\"${messages.cancel}\"></button>`, {\n                        fillMode: \"flat\",\n                        icon: \"chevron-left\"\n                    }) +\n                    '<span class=\"k-spacer\"></span>' +\n                    `<span>${encode(messages.editor.timezoneTitle)}</span>` +\n                    '<span class=\"k-spacer\"></span>' +\n                    encode(messages.editor.timezoneTitle) +\n                    kendo.html.renderButton(`<button class=\"k-header-done k-scheduler-update\" title=\"${messages.save}\" aria-label=\"${messages.save}\"></button>`, {\n                        fillMode: \"flat\",\n                        icon: \"check\"\n                    }) +\n                '</div><div data-role=\"content\"></div>';\n\n                this.timezoneView = timezoneView = pane.append(html);\n\n                timezoneView.contentElement.append(container.show());\n\n                timezoneView.element.on(CLICK + NS, \".k-scheduler-cancel, .k-scheduler-update\", function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    if ($(this).hasClass(\"k-scheduler-cancel\")) {\n                        that._revertTimezones(model);\n                    }\n\n                    var editView = that._editPane;\n\n                    var text = timezoneButtonText(model, messages.editor.noTimezone);\n\n                    editView.content.find(\".k-timezone-label\").text(text);\n\n                    pane.navigate(editView, that.options.animations.right);\n                });\n\n                kSwitch.bind(CHANGE, function(ev) {\n                    endTimezoneRow.toggle(ev.checked);\n                    model.set(\"endTimezone\", \"\");\n                });\n                model.bind(CHANGE, startTimezoneChange);\n            }\n\n            kSwitch.value(!!model.endTimezone);\n            kSwitch.enable(!!model.startTimezone);\n\n            if (model.endTimezone) {\n                endTimezoneRow.show();\n            } else {\n                endTimezoneRow.hide();\n            }\n\n            pane.navigate(timezoneView, that.options.animations.left);\n        },\n\n        showDialog: function(options) {\n            var actions = options.buttons.map(function(button) {\n                return {\n                    text: button.text,\n                    action: button.click\n                };\n            });\n\n            actions.push({\n                text: this.options.messages.cancel,\n                primary: true\n            });\n\n            $(\"<div />\").appendTo(document.body)\n                .kendoDialog({\n                    close: function() {\n                        this.destroy();\n                    },\n                    modal: {\n                        preventScroll: true\n                    },\n                    closable: false,\n                    title: false,\n                    content: options.text,\n                    actions: actions\n                });\n        },\n\n        editEvent: function(model) {\n            var pane = this.pane;\n            var html = \"\";\n\n            var messages = this.options.messages;\n            var updateText = messages.save;\n            var removeText = messages.destroy;\n            var cancelText = messages.cancel;\n            var titleText = messages.editor.editorTitle;\n            var resetSeries = messages.resetSeries;\n\n            html += '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\"' + kendo.attr(\"uid\") + '=\"' + model.uid + '\">' +\n                '<div data-role=\"header\" class=\"k-appbar k-appbar-primary\">' +\n                    kendo.html.renderButton(`<button class=\"k-header-cancel k-scheduler-cancel\" title=\"${cancelText}\" aria-label=\"${cancelText}\"></button>`, {\n                        fillMode: \"flat\",\n                        icon: \"chevron-left\"\n                    }) +\n                    '<span class=\"k-spacer\"></span>' +\n                    `<span>${encode(titleText)}</span>` +\n                    '<span class=\"k-spacer\"></span>' +\n                    kendo.html.renderButton(`<button class=\"k-header-done k-scheduler-update\" title=\"${updateText}\" aria-label=\"${updateText}\"></button>`, {\n                        fillMode: \"flat\",\n                        icon: \"check\"\n                    }) +\n                '</div>';\n\n            var fields = this.fields(editors.mobile, model);\n\n            var that = this;\n\n            var editableFields = [];\n\n            html += this._buildEditTemplate(model, fields, editableFields, true);\n\n            html += \"</div>\";\n\n            var view = pane.append(html);\n\n            if (!model.isNew() && this.options.editable && this.options.editable.destroy !== false && model.isRecurrenceHead() && model.recurrenceException) {\n                var resetSeriesBtn = '<ul class=\"k-edit-buttons k-listgroup k-listgroup-flush\"><li class=\"k-item k-listgroup-item\"><span class=\"k-scheduler-resetSeries k-link k-label\" aria-label=\"' + resetSeries + '\">' + resetSeries + '</span></li></ul>';\n                view.contentElement.append(resetSeriesBtn);\n            }\n\n            if (!model.isNew() && this.options.editable && this.options.editable.destroy !== false) {\n                var deleteBtn = '<ul class=\"k-edit-buttons k-listgroup k-listgroup-flush\"><li class=\"k-item k-listgroup-item\"><span class=\"k-scheduler-delete k-link k-label\" aria-label=\"' + removeText + '\">' + removeText + '</span></li></ul>';\n                view.contentElement.append(deleteBtn);\n            }\n\n            this._editPane = view;\n\n            var container = this.container = view.element;\n\n            this.editable = container.kendoEditable({\n                fields: editableFields,\n                model: model,\n                clearContainer: false,\n                target: that.options.target,\n                validateOnBlur: true\n            }).data(\"kendoEditable\");\n\n            if (!this.trigger(\"edit\", { container: container, model: model })) {\n\n                container.on(CLICK + NS, \"a.k-scheduler-edit, .k-scheduler-cancel, .k-scheduler-update, span.k-scheduler-delete, span.k-scheduler-resetSeries\", function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    var button = $(this);\n\n                    if (!button.hasClass(\"k-scheduler-edit\")) {\n\n                        var name = \"cancel\";\n\n                        if (button.hasClass(\"k-scheduler-update\")) {\n                            name = \"save\";\n                        } else if (button.hasClass(\"k-scheduler-delete\")) {\n                            name = \"remove\";\n                        } else if (button.hasClass(\"k-scheduler-resetSeries\")) {\n                            name = RESET;\n                        }\n\n                        that.trigger(name, { container: container, model: model });\n                    } else {\n                        pane.navigate(this._editPane, that.options.animations.right);\n                    }\n                });\n\n                pane.navigate(view, that.options.animations.left);\n\n                model.bind(CHANGE, that.toggleDateValidationHandler);\n            } else {\n                this.trigger(\"cancel\", { container: container, model: model });\n            }\n\n            return this.editable;\n        },\n\n        _views: function() {\n            return this.pane.element\n                    .find(kendo.roleSelector(\"view\"))\n                    .not(this.view.element);\n        },\n\n        close: function() {\n            if (this.container) {\n                this.pane.navigate(\"\", this.options.animations.right);\n\n                var views = this._views();\n                var view;\n\n                for (var idx = 0, length = views.length; idx < length; idx++) {\n                    view = views.eq(idx).data(\"kendoView\");\n                    if (view) {\n                       view.purge();\n                    }\n                }\n\n                views.remove();\n\n                this.container = null;\n                if (this.editable) {\n                    this.editable.options.model.unbind(CHANGE, this.toggleDateValidationHandler);\n                    this.editable.destroy();\n                    this.editable = null;\n                }\n                this.timezoneView = null;\n            }\n        }\n    });\n\n    var PopupEditor = Editor.extend({\n        destroy: function() {\n            this.close();\n            this.unbind();\n        },\n\n        editEvent: function(model) {\n            var that = this;\n            var editable = that.options.editable;\n            var html = '<div ' + kendo.attr(\"uid\") + '=\"' + model.uid + '\" class=\"k-popup-edit-form k-scheduler-edit-form\"><div class=\"k-edit-form-container\">';\n            var $html;\n            var messages = that.options.messages;\n            var updateText = messages.save;\n            var updateIcon = \"save\";\n            var cancelText = messages.cancel;\n            var cancelIcon = \"cancel-outline\";\n            var deleteText = messages.destroy;\n            var deleteIcon = \"trash\";\n            var resetSeries = messages.resetSeries;\n            var fields = this.fields(editors.desktop, model);\n            var editableFields = [];\n            var fieldName;\n\n            html += this._buildEditTemplate(model, fields, editableFields, false);\n\n            var attr;\n            var options = isPlainObject(editable) ? editable.window : {};\n\n            html += '<div class=\"k-edit-buttons\">';\n\n            html += this.createButton({ name: \"update\", text: updateText, attr: attr, icon: updateIcon }) + this.createButton({ name: \"canceledit\", text: cancelText, attr: attr, icon: cancelIcon });\n\n            if (!model.isNew() && editable.destroy !== false && model.isRecurrenceHead() && model.recurrenceException) {\n                html += this.createButton({ name: \"resetSeries\", text: resetSeries, attr: attr });\n            }\n\n            if ((!model.isNew() || model.isRecurring()) && editable.destroy !== false) {\n                html += '<span class=\"k-spacer\"></span>' + this.createButton({ name: \"delete\", text: deleteText, attr: attr, icon: deleteIcon, fillMode: \"flat\", themeColor: \"primary\" });\n            }\n\n            html += '</div></div></div>';\n\n            $html = $(html);\n            kendo.applyStylesFromKendoAttributes($html, [\"display\"]);\n\n            var container = this.container = $html\n                .appendTo(that.element).eq(0)\n                .kendoWindow(extend({\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: messages.editor.editorTitle,\n                    visible: false,\n                    close: function(e) {\n                        if (e.userTriggered) {\n                            if (that.trigger(CANCEL, { container: container, model: model })) {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }, options));\n\n            that.editable = container.kendoEditable({\n                fields: editableFields,\n                model: model,\n                clearContainer: false,\n                validateOnBlur: true,\n                target: that.options.target\n            }).data(\"kendoEditable\");\n\n            for (var field in editableFields) {\n                if (editableFields[field].field !== \"recurrenceRule\") {\n                    fieldName = editableFields[field].field;\n                    container.find(\"[name='\" + fieldName + \"']\").attr(\"aria-labelledby\", fieldName + \"_label\");\n                }\n\n                if (editableFields[field].field === \"isAllDay\") {\n                    container.find(\"label[for='\" + fieldName + \"']\").attr(\"id\", fieldName + \"_label\");\n                }\n            }\n\n            if (!that.trigger(EDIT, { container: container, model: model })) {\n\n                if (editable.window && editable.window.position) {\n                    container.data(\"kendoWindow\").open();\n                } else {\n                    container.data(\"kendoWindow\").center().open();\n                }\n\n                container.on(CLICK + NS, \"button.k-scheduler-cancel\", function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    that.trigger(CANCEL, { container: container, model: model });\n                });\n\n                container.on(CLICK + NS, \"button.k-scheduler-update\", function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    that.trigger(\"save\", { container: container, model: model });\n                });\n\n                container.on(CLICK + NS, \"button.k-scheduler-delete\", function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    that.trigger(REMOVE, { container: container, model: model });\n                });\n\n                container.on(CLICK + NS, \"button.k-scheduler-resetSeries\", function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    that.trigger(RESET, { container: container, model: model });\n                });\n\n                kendo.cycleForm(container);\n\n                model.bind(CHANGE, that.toggleDateValidationHandler);\n            } else {\n                that.trigger(CANCEL, { container: container, model: model });\n            }\n\n            return that.editable;\n        },\n\n        close: function() {\n            var that = this;\n\n            var destroy = function() {\n                if (that.editable) {\n                    that.editable.options.model.unbind(CHANGE, that.toggleDateValidationHandler);\n                    that.editable.destroy();\n                    that.editable = null;\n                    that.container = null;\n                }\n                if (that.popup) {\n                    that.popup.destroy();\n                    that.popup = null;\n                }\n            };\n\n            if (that.editable) {\n                if (that._timezonePopup && that._timezonePopup.data(\"kendoWindow\")) {\n                    that._timezonePopup.data(\"kendoWindow\").destroy();\n                    that._timezonePopup = null;\n                }\n\n                if (that.container.is(\":visible\")) {\n                    that.container.data(\"kendoWindow\").bind(\"deactivate\", destroy).close();\n                } else {\n                    destroy();\n                }\n            } else {\n                destroy();\n            }\n        },\n\n        _createEndTimezoneButton: function() {\n            var messages = this.options.messages;\n            var html = \"\";\n\n            html += '<div class=\"k-edit-buttons\">';\n            html += this.createButton({ name: \"savetimezone\", icon: \"save\", themeColor: \"primary\", text: messages.save }) + this.createButton({ name: \"canceltimezone\", icon: \"cancel-outline\", text: messages.cancel });\n            html += '</div></div></div>';\n\n            return html;\n        },\n\n        showDialog: function(options) {\n            var html = kendo.format(\"<div class='k-popup-edit-form'><div class='k-edit-form-container'><p class='k-popup-message'>{0}</p>\", options.text);\n\n            html += '<div class=\"k-edit-buttons\">';\n\n            for (var buttonIndex = 0; buttonIndex < options.buttons.length; buttonIndex++) {\n                html += this.createButton(options.buttons[buttonIndex]);\n            }\n\n            html += '</div></div></div>';\n\n            var wrapper = this.element;\n\n            if (this.popup) {\n                this.popup.destroy();\n            }\n\n            var popup = this.popup = $(html).appendTo(wrapper)\n                               .eq(0)\n                               .on(CLICK, \".k-button\", function(e) {\n                                    e.preventDefault();\n\n                                    popup.close();\n\n                                    var buttonIndex = $(e.currentTarget).index();\n\n                                    options.buttons[buttonIndex].click();\n                               })\n                               .kendoWindow({\n                                   modal: true,\n                                   resizable: false,\n                                   draggable: false,\n                                   title: options.title,\n                                   visible: false,\n                                   close: function() {\n                                       this.destroy();\n                                       wrapper.trigger(\"focus\");\n                                   }\n                               })\n                               .getKendoWindow();\n\n            popup.center().open();\n        },\n\n        _initTimezoneEditor: function(model, activator) {\n            var that = this;\n            var container = that.container.find(\".k-scheduler-timezones\");\n            var checkbox = container.find(\"input.k-timezone-toggle\");\n            var endTimezoneRow = container.find(\".k-form-field\").last();\n            var saveButton = container.find(\".k-scheduler-savetimezone\");\n            var cancelButton = container.find(\".k-scheduler-canceltimezone\");\n            var timezonePopup = that._timezonePopup;\n            var startTimezoneChange = function(e) {\n                if (e.field === \"startTimezone\") {\n                    var value = model.startTimezone;\n\n                    checkbox.prop(DISABLED, !value);\n\n                    if (!value) {\n                        endTimezoneRow.hide();\n                        model.set(\"endTimezone\", \"\");\n                        checkbox.prop(\"checked\", false);\n                    }\n                }\n            };\n            var wnd;\n\n            that._startTimezone = model.startTimezone;\n            that._endTimezone = model.endTimezone;\n\n            if (!timezonePopup) {\n                that._timezonePopup = timezonePopup = container.kendoWindow({\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: that.options.messages.editor.timezoneEditorTitle,\n                    visible: false,\n                    close: function(e) {\n                        model.unbind(CHANGE, startTimezoneChange);\n\n                        if (e.userTriggered) {\n                            that._revertTimezones(model);\n                        }\n\n                        if (activator) {\n                            activator.focus();\n                        }\n                    }\n                });\n\n                checkbox.on(CLICK, function() {\n                    endTimezoneRow.toggle(checkbox.prop(\"checked\"));\n                    model.set(\"endTimezone\", \"\");\n                });\n\n                saveButton.on(CLICK, function(e) {\n                    e.preventDefault();\n                    wnd.close();\n                });\n\n                cancelButton.on(CLICK, function(e) {\n                    e.preventDefault();\n                    that._revertTimezones(model);\n                    wnd.close();\n                });\n\n                model.bind(CHANGE, startTimezoneChange);\n            }\n\n            checkbox.prop(\"checked\", model.endTimezone).prop(DISABLED, !model.startTimezone);\n\n            if (model.endTimezone) {\n                endTimezoneRow.show();\n            } else {\n                endTimezoneRow.hide();\n            }\n\n            wnd = timezonePopup.data(\"kendoWindow\");\n            wnd.center().open();\n        }\n    });\n\n    var Scheduler = DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            if (!that.options.views || !that.options.views.length) {\n                that.options.views = [\"day\", \"week\"];\n            }\n\n            that.resources = [];\n\n            that._initModel();\n\n            that._wrapper();\n\n            if (that.options.selectable) {\n                that._tabindex();\n            }\n\n            that._views();\n\n            that._toolbar();\n\n            that._dataSource();\n\n            that._resources();\n\n            that._resizeHandler = function() {\n                that.resize();\n            };\n\n            that.wrapper.on(MOUSEDOWN + NS + \" selectstart\" + NS, function(e) {\n                var target = $(e.target);\n\n                if (!target.is(\":kendoFocusable\") && target.closest(\".k-button\").length === 0) {\n                    e.preventDefault();\n                }\n            });\n\n            if (that.options.editable && that.options.editable.resize !== false) {\n                that._resizable();\n            }\n\n            that._movable();\n\n            that._bindResize();\n\n            if (that.options.messages && that.options.messages.recurrence) {\n                recurrence.options = that.options.messages.recurrence;\n            }\n\n            that._navigation();\n            that._selectable();\n            that._touchHandlers();\n\n            that._ariaId = kendo.guid();\n\n            that._createEditor();\n\n            that.mediaQueryList = kendo.mediaQuery(MIN_SCREEN);\n            that.mediaQueryList.onChange(that._onMediaChange.bind(that));\n\n            that.toolbar.find('.k-scheduler-views').children().removeClass('k-button-rectangle');\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay(that.element[0]);\n            }\n        },\n\n        _onMediaChange: function(e) {\n            var that = this;\n            var view = that._selectedView;\n            var toolbarEl = that.toolbar;\n            var toolbar = toolbarEl.getKendoToolBar();\n\n            if (e.matches) {\n                toolbar.hide(toolbarEl.find(\".k-views-dropdown\"));\n                toolbar.show(toolbarEl.find(\".k-views-dropdown\").parent().next(\".k-button-group\"));\n            } else {\n                toolbar.show(toolbarEl.find(\".k-views-dropdown\"));\n                toolbar.hide(toolbarEl.find(\".k-views-dropdown\").parent().next(\".k-button-group\"));\n            }\n\n            that._model.set(\"formattedDate\", e.matches ? view.dateForTitle() : view.shortDateForTitle());\n        },\n\n        _bindResize: function() {\n            $(window).on(\"resize\" + NS, this._resizeHandler);\n        },\n\n        _unbindResize: function() {\n            $(window).off(\"resize\" + NS, this._resizeHandler);\n        },\n\n        dataItems: function() {\n            var that = this;\n            var items = that.items();\n            var events = that._data;\n            var eventsUids = $.map(items, function(item) {\n                return $(item).attr(\"data-uid\");\n            });\n            var i;\n            var key;\n\n            var dict = {};\n            var eventsUidsLength = eventsUids.length;\n            for (i = 0; i < eventsUidsLength; i++) {\n                dict[eventsUids[i]] = null;\n            }\n\n            var eventsCount = events.length;\n            for (i = 0; i < eventsCount; i++) {\n                var event = events[i];\n                if (dict[event.uid] !== undefined$1) {\n                    dict[event.uid] = event;\n                }\n            }\n\n            var sortedData = [];\n            for (key in dict) {\n                sortedData.push(dict[key]);\n            }\n\n            return sortedData;\n        },\n\n        _isMobile: function() {\n            var options = this.options;\n            return (options.mobile === true && kendo.support.mobileOS) || options.mobile === \"phone\" || options.mobile === \"tablet\";\n        },\n\n        _isTouch: function(event) {\n            return /touch/.test(event.type) || (event.originalEvent && /touch/.test(event.originalEvent.pointerType));\n        },\n\n        _isInverseColor: function(eventElement) {\n            return eventElement.hasClass(INVERSECOLORCLASS);\n        },\n\n        _groupsByResource: function(resources, groupIndex, groupsArray, parentFieldValue, parentField) {\n            if (!groupsArray) {\n                groupsArray = [];\n            }\n\n            var resource = resources[0];\n            if (resource) {\n                var group;\n                var data = resource.dataSource.view();\n                var prevIndex = 0;\n\n                for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                    var fieldValue = kendo.getter(resource.dataValueField)(data[dataIndex]);\n                    var currentGroupIndex = groupIndex + prevIndex + dataIndex;\n\n                    group = this._groupsByResource(resources.slice(1), currentGroupIndex, groupsArray, fieldValue, resource.field);\n                    group[resource.field] = fieldValue;\n                    prevIndex = group.groupIndex;\n\n                    if (parentField && parentFieldValue) {\n                        group[parentField] = parentFieldValue;\n                    }\n\n                    if (resources.length === 1) {\n                        group.groupIndex = groupIndex + dataIndex;\n                        groupsArray.push(group);\n                    }\n                }\n                return group;\n            } else {\n                return {};\n            }\n        },\n\n        data: function() {\n            return this._data;\n        },\n\n        select: function(options) {\n            var that = this;\n            var view = that.view();\n            var selection = that._selection;\n            var groups = view.groups;\n            var selectedGroups;\n\n            if (options === undefined$1) {\n                var selectedEvents;\n                var slots = view._selectedSlots;\n\n                if (!selection) {\n                    return [];\n                }\n\n                if (selection && selection.events) {\n                    selectedEvents = that._selectedEvents();\n                }\n\n                return {\n                    start: selection.start,\n                    end: selection.end,\n                    events: selectedEvents,\n                    slots: slots,\n                    resources: view._resourceBySlot(selection)\n                };\n            }\n\n            if (!options) {\n                that._selection = null;\n                that._old = null;\n                view.clearSelection();\n\n                return;\n            }\n\n            if (Array.isArray(options)) {\n                options = {\n                    events: options.splice(0)\n                };\n            }\n\n            if (options.resources) {\n                var fieldName;\n                var filters = [];\n                var groupsByResource = [];\n\n                if (view.groupedResources) {\n                    that._groupsByResource(view.groupedResources, 0, groupsByResource);\n                }\n\n                for (fieldName in options.resources) {\n                    filters.push({ field: fieldName, operator: \"eq\", value: options.resources[fieldName] });\n                }\n\n                selectedGroups = new kendo.data.Query(groupsByResource)\n                    .filter(filters)\n                    .toArray();\n            }\n\n            if (options.events && options.events.length) {\n                that._selectEvents(options.events, selectedGroups);\n                that._select();\n\n                return;\n            }\n\n            if (groups && (options.start && options.end)) {\n                var rangeStart = getDate(view._startDate);\n                var rangeEnd = kendo.date.addDays(getDate(view._endDate),1);\n                var group;\n                var ranges;\n\n                if (options.start < rangeEnd && rangeStart <= options.end) {\n                    if (selectedGroups && selectedGroups.length) {\n                        group = groups[selectedGroups[0].groupIndex];\n                    } else {\n                        group = groups[0];\n                    }\n\n                    if (!group.timeSlotCollectionCount()) {\n                        options.isAllDay = true;\n                    }\n\n                    ranges = group.ranges(options.start, options.end, options.isAllDay, false);\n\n                    if (ranges.length) {\n                        that._selection = {\n                            start: kendo.timezone.toLocalDate(ranges[0].start.start),\n                            end: kendo.timezone.toLocalDate(ranges[ranges.length - 1].end.end),\n                            groupIndex: ranges[0].start.groupIndex,\n                            index: ranges[0].start.index,\n                            isAllDay: ranges[0].start.isDaySlot,\n                            events: []\n                        };\n\n                        that._select();\n                    }\n                }\n            }\n        },\n\n        _selectEvents: function(eventsUids, selectedGroups) {\n            var that = this;\n            var idx;\n            var view = that.view();\n            var groups = view.groups;\n            var eventsLength = eventsUids.length;\n            var isGrouped = selectedGroups && selectedGroups.length;\n            var ctrlKey = that._ctrlKey;\n\n            that._ctrlKey = true;\n\n            for (idx = 0; idx < eventsLength; idx++) {\n                if (groups && isGrouped) {\n                    var currentGroup = groups[selectedGroups[0].groupIndex];\n                    var events = [];\n                    var timeSlotCollectionCount = currentGroup.timeSlotCollectionCount();\n                    var daySlotCollectionCount = currentGroup.daySlotCollectionCount();\n\n                    for (var collIdx = 0; collIdx < timeSlotCollectionCount; collIdx++) {\n                        events = events.concat(currentGroup.getTimeSlotCollection(collIdx).events());\n                    }\n\n                    for (var dayCollIdx = 0; dayCollIdx < daySlotCollectionCount; dayCollIdx++) {\n                        events = events.concat(currentGroup.getDaySlotCollection(dayCollIdx).events());\n                    }\n\n                    events = new kendo.data.Query(events)\n                        .filter({ field: event => event.element[0].getAttribute('data-uid'), operator: \"eq\", value: eventsUids[idx] })\n                        .toArray();\n\n                    if (events[0]) {\n                        that._createSelection(events[0].element);\n                    }\n                } else {\n                    var element = view.element.find(kendo.format(\".k-event[data-uid={0}], .k-task[data-uid={0}]\", eventsUids[idx]));\n\n                    if (element.length) {\n                        that._createSelection(element[0]);\n                    }\n                }\n            }\n\n            that._ctrlKey = ctrlKey;\n        },\n\n        _touchHandlers: function() {\n            var that = this;\n            var startX;\n            var startY;\n            var endX;\n            var endY;\n            var timeStamp;\n            var wrapper = that.wrapper;\n            var touchMoveHandler = that._touchMove.bind(that);\n\n            wrapper.on(TOUCHSTART + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event\", function(e) {\n                var content = that.wrapper.find(\".k-scheduler-content\");\n\n                if (!that._isTouch(e)) {\n                    return;\n                }\n\n                content.stop(true, false);\n\n                that._touchPosX = startX = that._tapPosition(e, 'X');\n                that._touchPosY = startY = that._tapPosition(e, 'Y');\n                that._userTouched = true;\n                that.view()._scrolling = false;\n                timeStamp = Date.now();\n\n                wrapper.on(TOUCHMOVE + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event\", touchMoveHandler);\n            });\n\n            wrapper.on(\"contextmenu\" + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event\", function(e) {\n                that._preventFocus = true;\n            });\n\n            wrapper.on(TOUCHEND + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event\", function(e) {\n                if (!that._isTouch(e)) {\n                    return;\n                }\n\n                var delta = Date.now() - timeStamp;\n                var content = that.wrapper.find(\".k-scheduler-content\");\n                var amplitude = -that._amplitude * (3000 / delta);\n\n                endX = that._tapPosition(e, 'X');\n                endY = that._tapPosition(e, 'Y');\n\n                if (that._dragging) {\n                    return;\n                }\n\n                if (that.options.selectable && (Math.abs(endX - startX) <= 10 || Math.abs(endY - startY) <= 10)) {\n                    that._mouseDownSelection(e);\n                }\n\n                if (!kendo.support.kineticScrollNeeded && delta < 200 && Math.abs(endX - startX) > 10) {\n                    content.animate({\n                        scrollTop: content[0].scrollTop + amplitude\n                    });\n                }\n\n                wrapper.off(TOUCHMOVE + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td\", touchMoveHandler);\n            });\n        },\n\n        _navigation: function() {\n            var that = this,\n                wrapper = that.wrapper;\n\n            wrapper.on(\"focus\" + NS, function() {\n                var selection = that._selection;\n\n                setTimeout(function() {\n                    if (!that._preventFocus) {\n                        if ((!selection ||\n                                (selection.events.length > 0 && wrapper.find(\"[data-uid='\" + selection.events[0] + \"']\").length === 0)) &&\n                            !that._userTouched &&\n                            !that._mouseDown) {\n                                that._initialFocus();\n                        } else {\n                            that._mouseDown = false;\n                        }\n\n                        that._select();\n                    } else {\n                        that._preventFocus = false;\n                    }\n                }, 300);\n            });\n\n            wrapper.on(\"focusout\" + NS, function() {\n                that._ctrlKey = that._shiftKey = false;\n            });\n\n            wrapper.on(\"keydown\" + NS, that._keydown.bind(that));\n\n            wrapper.on(\"keyup\" + NS, function(e) {\n                that._ctrlKey = e.ctrlKey;\n                that._shiftKey = e.shiftKey;\n            });\n        },\n\n        _selectable: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            if (!that.options.selectable) {\n                return;\n            }\n\n            wrapper.on(MOUSEDOWN + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td, .k-event, .k-scheduler-body td .k-link\", function(e) {\n                if (that._isTouch(e)) {\n                    return;\n                }\n                that._mouseDownSelection(e);\n            });\n\n            var mouseMoveHandler = that._mouseMove.bind(that);\n\n            wrapper.on(MOUSEDOWN + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td\", function(e) {\n                var which = e.which;\n                var button = e.button;\n                var isRight = which && which === 3 || button && button == 2;\n\n                if (that._isTouch(e)) {\n                    return;\n                }\n\n                if (!isRight) {\n                    wrapper.on(MOUSEMOVE + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td\", mouseMoveHandler);\n                }\n            });\n\n            wrapper.on(\"mouseup\" + NS + \" mousecancel\" + NS, function() {\n                wrapper.off(MOUSEMOVE + NS, \".k-scheduler-header-all-day td, .k-scheduler-content td\", mouseMoveHandler);\n            });\n        },\n\n        _mouseDownSelection: function(e) {\n            var which = e.which;\n            var button = e.button;\n            var isRight = which && which === 3 || button && button == 2;\n\n            if (!isRight) {\n                if (e.ctrlKey) {\n                    this._ctrlKey = e.ctrlKey;\n                }\n\n                if (e.shiftKey) {\n                    this._shiftKey = e.shiftKey;\n                }\n\n                this._mouseDown = true;\n                this._createSelection(e.currentTarget);\n\n                if ($(e.currentTarget).hasClass(\"k-event\")) {\n                    this._selection.eventElement = e.currentTarget;\n                }\n            }\n\n            if (this.view().name !== \"year\" && kendo._activeElement() !== this.wrapper.get(0)) {\n                kendo.focusElement(this.wrapper);\n            } else {\n                this._select();\n            }\n\n            if (this.toolbar) {\n                this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n            }\n        },\n\n        _selectFirstSlot: function() {\n            var firstAllDay = this.wrapper.find(\".k-scheduler-header-all-day\").find(\"td\").first(),\n                firstContent = this.wrapper.find(\".k-scheduler-content\").find(\"td\").first(),\n                firstSlot;\n\n            if (firstAllDay.length > 0) {\n                firstSlot = firstAllDay;\n            } else if (firstContent.length > 0) {\n                firstSlot = firstContent;\n            } else {\n                firstSlot = this.wrapper.find(\".k-scheduler-body\").find(\".k-link\").first();\n            }\n\n            this._createSelection(firstSlot);\n        },\n\n        _firstEvent: function() {\n            var firstEventInAllDay = this.wrapper.find(\".k-scheduler-header-wrap .k-event, .k-task\").first(),\n                firstEventInContent = this.wrapper.find(\".k-scheduler-content .k-event\").first(),\n                firstEvent, allDayEvent, contentEvent;\n\n            if (firstEventInAllDay.length > 0) {\n                if (firstEventInContent.length > 0) {\n                    allDayEvent = this.occurrenceByUid(firstEventInAllDay.data(\"uid\"));\n                    contentEvent = this.occurrenceByUid(firstEventInContent.data(\"uid\"));\n\n                    firstEvent = allDayEvent.start <= contentEvent.start ? firstEventInAllDay : firstEventInContent;\n                } else {\n                    firstEvent = firstEventInAllDay;\n                }\n            } else if (firstEventInContent) {\n                firstEvent = firstEventInContent;\n            }\n\n            return firstEvent;\n        },\n\n        _initialFocus: function() {\n            var firstEvent = this._firstEvent();\n\n            if (this.options.selectable) {\n                if (firstEvent && firstEvent.length > 0) {\n                    this._createSelection(firstEvent);\n                    this._selection.eventElement = firstEvent[0];\n                } else {\n                    this._selectFirstSlot();\n                }\n            } else if (this.toolbar && this.toolbar.find(\".\" + FOCUSEDSTATE).length === 0) {\n                this._focusToolbar();\n            } else if (this.toolbar) {\n                this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n            }\n        },\n\n        _select: function() {\n            const that = this,\n                view = that.view(),\n                wrapper = that.wrapper,\n                selection = that._selection,\n                oldSelection = that._old ? that._old.selection : null,\n                oldEventsLength = that._old ? that._old.eventsLength : null;\n\n            let current = view.current();\n\n            if (!selection) {\n                return;\n            }\n\n            if (current) {\n                current.removeAttribute(\"id\");\n                wrapper.removeAttr(\"aria-activedescendant\");\n            }\n\n\n            view.select(selection);\n            that._selection.eventElement = null;\n\n            current = view.current();\n\n            if (current) {\n                current.setAttribute(\"id\", that._ariaId);\n                wrapper.attr(\"aria-activedescendant\", that._ariaId);\n\n                const oldSelectionStart = that._old ? that._old.selectionStart.getTime() : null;\n                const oldSelectionEnd = that._old ? that._old.selectionEnd.getTime() : null;\n                const selectionRangeChanged = (selection.start.getTime() !== oldSelectionStart) || ((selection.end.getTime() !== oldSelectionEnd));\n\n                if (oldSelection !== current || (selection.events && (oldEventsLength !== selection.events.length ) || selectionRangeChanged)) {\n                    var currentUid = $(current).data(\"uid\");\n\n                    if (that._old && currentUid &&\n                        currentUid === $(that._old.selection).data(\"uid\") &&\n                        (selection.events && that._old.eventsLength === selection.events.length)) {\n                        return;\n                    }\n\n                    var events = that._selectedEvents();\n                    var slots = view._selectedSlots;\n\n                    that._old = {\n                        selection: current,\n                        eventsLength: events.length,\n                        selectionStart: selection.start,\n                        selectionEnd: selection.end\n                    };\n\n                    that.trigger(CHANGE, {\n                        start: selection.start,\n                        end: selection.end,\n                        events: events,\n                        slots: slots,\n                        resources: view._resourceBySlot(selection)\n                    });\n                }\n            }\n        },\n\n        _selectedEvents: function() {\n            var uids = this._selection.events;\n            var length = uids.length;\n            var idx = 0;\n            var event;\n\n            var events = [];\n\n            for (; idx < length; idx++) {\n                event = this.occurrenceByUid(uids[idx]);\n                if (event) {\n                    events.push(event);\n                }\n            }\n\n            return events;\n        },\n\n        _tapPosition: function(event, coordinate) {\n            return /touch/.test(event.type) ? (event.originalEvent || event).changedTouches[0]['page' + coordinate] : event['page' + coordinate];\n        },\n\n        _touchMove: function(e) {\n            var that = this;\n            var content = that.wrapper.find(\".k-scheduler-content\");\n            var verticalScroll = content[0].scrollHeight > content[0].clientHeight;\n            var horizontalScroll = content[0].scrollWidth > content[0].clientWidth;\n            var endY = that._tapPosition(e, 'Y');\n            var endX = that._tapPosition(e, 'X');\n            var scrollTop = content[0].scrollTop - Math.round(endY - that._touchPosY);\n            var scrollLeft = content[0].scrollLeft - Math.round(endX - that._touchPosX);\n            var applyVerticalScroll = verticalScroll && Math.abs(endY - that._touchPosY) > 10;\n            var applyhorizontalScroll = horizontalScroll && Math.abs(endY - that._touchPosY) > 10;\n\n\n            if (that._dragging || kendo.support.kineticScrollNeeded || !that._isTouch(e)) {\n                return;\n            }\n\n            if (applyVerticalScroll || applyhorizontalScroll) {\n                that._amplitude = Math.round(endY - that._touchPosY);\n                that._touchPosY = endY;\n                that._touchPosX = endX;\n                content.animate({\n                    scrollTop: scrollTop,\n                    scrollLeft: scrollLeft\n                }, 0);\n                that.view()._scrolling = true;\n            }\n        },\n\n        _mouseMove: function(e) {\n            var that = this;\n            clearTimeout(that._moveTimer);\n\n            if (that._isTouch(e)) {\n                return;\n            }\n\n            that._moveTimer = setTimeout(function() {\n                var view = that.view();\n                var selection = that._selection;\n\n                if (selection) {\n                    var slot = view.selectionByElement($(e.currentTarget));\n\n                    if (slot && selection.groupIndex === slot.groupIndex) {\n                        var startDate = slot.startDate();\n                        var endDate = slot.endDate();\n\n                        if (startDate >= selection.end) {\n                            selection.backward = false;\n                        } else if (endDate <= selection.start) {\n                            selection.backward = true;\n                        }\n\n                        if (selection.backward) {\n                            selection.start = startDate;\n                        } else {\n                            selection.end = endDate;\n                        }\n\n                        that._select();\n                    }\n                }\n            }, 5);\n        },\n\n        _viewByIndex: function(index) {\n            var view, views = this.views;\n\n            for (view in views) {\n                if (!index) {\n                    return view;\n                }\n\n                index--;\n            }\n        },\n\n        _keydownToolbar: function(e) {\n            var key = e.keyCode;\n\n            if (e.altKey && key === keys.DOWN && this.toolbar.find(\".k-nav-current\").hasClass(FOCUSEDSTATE)) {\n                this._showCalendar();\n                e.preventDefault();\n                return;\n            } else if (key === keys.DOWN) {\n                if (this._selectedViewName === \"year\") {\n                    this.view().calendar.focus();\n                } else if (document.activeElement !== this.element[0]) {\n                    this.element.focus();\n                }\n\n                e.preventDefault();\n\n                return;\n            }\n        },\n\n        _keydownView: function(e) {\n            var key = e.keyCode,\n                isModifier = key === 16 || key === 18 || key === 17 || key === 91 || key === 92,\n                selection = this._selection,\n                view = this.view(),\n                editable = view.options.editable,\n                arrowKeys = [ keys.LEFT, keys.RIGHT, keys.UP, keys.DOWN ],\n                isRtl = kendo.support.isRtl(this.element),\n                previous, content, cell;\n\n            if (isModifier) {\n                return;\n            }\n\n            // slots selection via keyboard is no longer available\n            // see here: https://github.com/telerik/kendo-themes/blob/develop/docs/accessibility/Scheduler.md\n            if (!selection) {\n                return;\n            }\n\n            if (key === keys.ENTER) {\n                if (selection.events.length && editable) {\n                    if (editable.update !== false) {\n                        this.editEvent(selection.events[0]);\n                    }\n                }\n            } else if ((key === keys.DELETE || key === keys.BACKSPACE) && editable !== false && editable.destroy !== false) {\n                this.removeEvent(selection.events[0]);\n            } else if (arrowKeys.indexOf(key) > -1) {\n                previous = key === keys.UP || (key === keys.LEFT && !isRtl) || (key === keys.RIGHT && isRtl);\n\n                if (view.moveToEvent(selection, previous)) {\n                    this._select();\n\n                    // Focus the Scheduler element only if it not the currently focused element\n                    if (document.activeElement !== this.element[0]) {\n                        this.element.trigger(\"focus\");\n                    }\n\n                    e.preventDefault();\n                }\n            } else if (key === keys.HOME || key === keys.END) {\n                e.preventDefault();\n                content = this.view().content.eq(0);\n\n                if (key === keys.HOME) {\n                    cell = content.find(\".k-scheduler-table td\").first();\n                } else {\n                    cell = content.find(\".k-scheduler-table td\").last();\n                }\n\n                this.view()._scrollTo(cell[0], content[0]);\n            }\n        },\n\n        _keydownShortcut: function(key) {\n            var currentDate = new Date(),\n                timezone = this.options.timezone,\n                editable = this.view().options.editable;\n\n            if (key === 66 && !!this.view().toggleFullDay) {\n                this.view().toggleFullDay();\n            } else if (key === 67 && editable && editable.create !== false) {\n                this.addEvent(extend({}, {\n                    start: this.date(),\n                    end: this.date()\n                }));\n            } else if (key === 84) {\n                if (timezone) {\n                    var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                    date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                } else {\n                    date = currentDate;\n                }\n\n                if (!this.trigger(\"navigate\", { view: this._selectedViewName, action: \"today\", date: date })) {\n                    this.date(date);\n                }\n            }\n        },\n\n        _keydownYearView: function(e) {\n            var view = this.view(),\n                selection = this._selection,\n                key = e.keyCode;\n\n            if (key === keys.TAB) {\n                return;\n            }\n\n            if (key === keys.F10) {\n                this._focusToolbar();\n                e.preventDefault();\n            } else {\n                this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n                view.calendar.focus();\n            }\n\n            if (selection) {\n                this._adjustSelectedDate();\n            }\n\n            e.preventDefault();\n        },\n\n        _keydownAgendaView: function(e) {\n            var key = e.keyCode,\n                view = this.view(),\n                selection = this._selection,\n                content, cell;\n\n            if (view.move(selection, key)) {\n                e.preventDefault();\n                this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n                this._select();\n            } else if (key === keys.HOME || key === keys.END) {\n                e.preventDefault();\n                content = this.view().content.eq(0);\n\n                if (key === keys.HOME) {\n                    cell = content.find(\".k-scheduler-table td\").first();\n                } else {\n                    cell = content.find(\".k-scheduler-table td\").last();\n                }\n\n                this.view()._scrollTo(cell[0], content[0]);\n            }\n        },\n\n        _keydownChangeView: function(key) {\n            var viewIndex = key - 49,\n                viewByIndex;\n\n            if (viewIndex === -1) {\n                viewIndex = 9;\n            }\n\n            viewByIndex = this._viewByIndex(viewIndex);\n\n            if (viewByIndex && !this.trigger(\"navigate\", { view: viewByIndex, action: \"changeView\", date: this.date() })) {\n                this.view(viewByIndex);\n            }\n        },\n\n        _keydownChangeDate: function(key) {\n            var isRtl = kendo.support.isRtl(this.element),\n                direction = (isRtl && key === keys.LEFT) || (!isRtl && key === keys.RIGHT) ? \"next\" : \"previous\";\n\n            if (direction === \"next\") {\n                date = this.view().nextDate();\n            } else {\n                date = this.view().previousDate();\n            }\n\n            if (!this.trigger(\"navigate\", { view: this._selectedViewName, action: direction, date: date })) {\n                this.date(date);\n                this._initialFocus();\n                this._select();\n            }\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode,\n                shortcutKeys = [66, 67, 84],\n                toolbarIsFocused = $(e.target).closest(\".k-toolbar\").length > 0,\n                altKey = e.altKey;\n\n            this._ctrlKey = e.ctrlKey;\n            this._shiftKey = e.shiftKey;\n\n            if (key === keys.ESC && this.popup && this.popup.visible()) {\n                this.popup.close();\n                e.preventDefault();\n                return;\n            }\n\n            if ((key === keys.LEFT || key === keys.RIGHT) && this._shiftKey) {\n                this._keydownChangeDate(key);\n                return;\n            }\n\n            if (altKey && key >= 48 && key <= 57) {\n                this._keydownChangeView(key);\n                return;\n            }\n\n            if (shortcutKeys.indexOf(key) > -1) {\n                if (!$(e.target).hasClass(\"k-scheduler-search-input\")) {\n                    this._keydownShortcut(key);\n                }\n\n                return;\n            }\n\n            if (toolbarIsFocused) {\n                this._keydownToolbar(e);\n            } else {\n                if (this._selectedViewName === \"year\") {\n                    this._keydownYearView(e);\n                    return;\n                }\n\n                if (key === keys.F10) {\n                    this._focusToolbar();\n                    e.preventDefault();\n                    return;\n                }\n\n                if (this._selectedViewName === \"agenda\") {\n                    this._keydownAgendaView(e);\n                    return;\n                }\n\n                this._keydownView(e);\n            }\n        },\n\n        _focusToolbar: function() {\n            this.toolbar.find(\"[tabindex=0]\").first()\n                .trigger(\"focus\")\n                .addClass(FOCUSEDSTATE);\n        },\n\n        _createSelection: function(item) {\n            var selection = this._selection,\n                uid, slot;\n\n            item = $(item);\n\n            if (item.is(\".k-event\")) {\n                uid = item.attr(kendo.attr(\"uid\"));\n\n                if (selection && selection.events.indexOf(uid) !== -1 && !this._ctrlKey) {\n                    return;\n                }\n            }\n\n            if (!selection || (!this._ctrlKey && !this._shiftKey)) {\n                selection = this._selection = {\n                    events: [],\n                    groupIndex: 0\n                };\n            }\n\n            slot = this.view().selectionByElement(item);\n\n            if (slot) {\n                selection.groupIndex = slot.groupIndex || 0;\n            }\n\n            if (uid) {\n                slot = getOccurrenceByUid(this._data, uid);\n            }\n\n            if (slot && slot.uid) {\n                uid = [slot.uid];\n            }\n\n            this._updateSelection(slot, uid);\n            this._adjustSelectedDate();\n        },\n\n        _updateSelection: function(dataItem, events, groupIndex) {\n            var selection = this._selection;\n\n            if (dataItem && selection) {\n                var view = this.view();\n\n                if (dataItem.uid) {\n                    dataItem = view._updateEventForSelection(dataItem);\n                }\n\n                if (this._shiftKey && selection.start && selection.end) {\n                    var backward = dataItem.end < selection.end;\n\n                    selection.end = dataItem.endDate ? dataItem.endDate() : dataItem.end;\n\n                    if (backward && view._timeSlotInterval) {\n                        kendo.date.setTime(selection.end, -view._timeSlotInterval());\n                    }\n                } else {\n                    selection.start = dataItem.startDate ? dataItem.startDate() : dataItem.start;\n                    selection.end = dataItem.endDate ? dataItem.endDate() : dataItem.end;\n                }\n\n                if (\"isDaySlot\" in dataItem) {\n                    selection.isAllDay = dataItem.isDaySlot;\n                } else {\n                    selection.isAllDay = dataItem.isAllDay;\n                }\n\n                if (groupIndex !== null && groupIndex !== undefined$1) {\n                    selection.groupIndex = groupIndex;\n                }\n\n                selection.index = dataItem.index;\n                if (this._ctrlKey) {\n                    var indexOfEvent = (events && events.length) ? selection.events.indexOf(events[0]) : -1;\n\n                    if (indexOfEvent > -1) {\n                        selection.events.splice(indexOfEvent, 1);\n                    } else {\n                        selection.events = selection.events.concat(events || []);\n                    }\n                } else {\n                        selection.events = events || [];\n                }\n            }\n        },\n\n        options: {\n            name: \"Scheduler\",\n            date: TODAY,\n            editable: true,\n            autoBind: true,\n            snap: true,\n            mobile: false,\n            timezone: \"\",\n            allDaySlot: true,\n            min: new Date(1900, 0, 1),\n            max: new Date(2099, 11, 31),\n            toolbar: null,\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            workDays: null,\n            showWorkHours: false,\n            startTime: TODAY,\n            endTime: TODAY,\n            currentTimeMarker: {\n                updateInterval: 10000,\n                useLocalTimezone: true\n            },\n            ongoingEvents: {\n                cssClass: ONGOING_CLASS,\n                enabled: false,\n                updateInterval: 60000,\n                useLocalTimezone: true\n            },\n            footer: {},\n            messages: {\n                today: \"Today\",\n                pdf: \"Export to PDF\",\n                save: \"Save\",\n                cancel: \"Cancel\",\n                destroy: \"Delete\",\n                resetSeries: \"Reset Series\",\n                deleteWindowTitle: \"Delete event\",\n                next: \"Next\",\n                previous: \"Previous\",\n                refresh: \"Refresh\",\n                selectView: \"Select view\",\n                ariaSlotLabel: \"Selected from {0:t} to {1:t}\",\n                ariaEventLabel: {\n                    on: \"on\",\n                    at: \"at\",\n                    to: \"to\",\n                    allDay: \"(all day)\",\n                    prefix: \"\"\n                },\n                search: \"Search...\",\n                views: {\n                    day: \"Day\",\n                    week: \"Week\",\n                    workWeek: \"Work Week\",\n                    agenda: \"Agenda\",\n                    month: \"Month\",\n                    timeline: \"Timeline\",\n                    timelineWeek: \"Timeline Week\",\n                    timelineWorkWeek: \"Timeline Work Week\",\n                    timelineMonth: \"Timeline Month\",\n                    year: \"Year\"\n                },\n                recurrenceMessages: {\n                    deleteWindowTitle: \"Delete Recurring Item\",\n                    resetSeriesWindowTitle: \"Reset Series\",\n                    deleteWindowOccurrence: \"Delete current occurrence\",\n                    deleteWindowSeries: \"Delete the series\",\n                    editWindowTitle: \"Edit Recurring Item\",\n                    editWindowOccurrence: \"Edit current occurrence\",\n                    editWindowSeries: \"Edit the series\"\n                },\n                editable: {\n                    confirmation: DELETECONFIRM\n                },\n                editor: {\n                    title: \"Title\",\n                    start: \"Start\",\n                    end: \"End\",\n                    allDayEvent: \"All day event\",\n                    description: \"Description\",\n                    repeat: \"Repeat\",\n                    timezone: \"Timezone\",\n                    startTimezone: \"Start timezone\",\n                    endTimezone: \"End timezone\",\n                    separateTimezones: \"Use separate start and end time zones\",\n                    timezoneEditorTitle: \"Timezones\",\n                    timezoneEditorButton: \"Time zone\",\n                    timezoneTitle: \"Time zones\",\n                    noTimezone: \"No timezone\",\n                    editorTitle: \"Event\"\n                }\n            },\n            height: null,\n            width: null,\n            resources: [],\n            group: {\n                resources: [],\n                orientation: \"horizontal\"\n            },\n            views: [],\n            selectable: false\n        },\n\n        events: [\n            REMOVE,\n            EDIT,\n            CANCEL,\n            SAVE,\n            \"add\",\n            \"dataBinding\",\n            \"dataBound\",\n            \"moveStart\",\n            \"move\",\n            \"moveEnd\",\n            \"resizeStart\",\n            \"resize\",\n            \"resizeEnd\",\n            \"navigate\",\n            CHANGE\n        ],\n\n        destroy: function() {\n            var that = this,\n                element;\n\n            Widget.fn.destroy.call(that);\n\n            if (that.dataSource) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n                that.dataSource.unbind(PROGRESS, that._progressHandler);\n                that.dataSource.unbind(ERROR, that._errorHandler);\n            }\n\n            if (that._resourceRefreshHandler) {\n                for (var idx = 0; idx < that.resources.length; idx++) {\n                    var resourceDS = that.resources[idx].dataSource;\n                    resourceDS.unbind(CHANGE, that._resourceRefreshHandler);\n                    resourceDS.unbind(PROGRESS, that._resourceProgressHandler);\n                    resourceDS.unbind(ERROR, that._resourceErrorHandler);\n                }\n            }\n\n            if (that.calendar) {\n                that.calendar.destroy();\n                that.popup.destroy();\n            }\n\n            if (that.view()) {\n                that.view().destroy();\n            }\n\n            if (that._editor) {\n                that._editor.destroy();\n            }\n\n            if (this._moveDraggable) {\n                this._moveDraggable.destroy();\n            }\n\n            if (this._resizeDraggable) {\n                this._resizeDraggable.destroy();\n            }\n\n            if (that.mediaQueryList) {\n                that.mediaQueryList.destroy();\n            }\n\n            element = that.element\n                .add(that.wrapper)\n                .add(that.toolbar)\n                .add(that.popup);\n\n            element.off(NS);\n\n            clearTimeout(that._moveTimer);\n\n            that._model = null;\n            that.toolbar = null;\n            that.element = null;\n\n            $(window).off(\"resize\" + NS, that._resizeHandler);\n\n            kendo.destroy(that.wrapper);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.options.autoBind && dataSource.fetch) {\n                dataSource.fetch();\n            } else if (isArray(dataSource)) {\n                this.view(this._selectedView);\n            }\n        },\n\n        items: function() {\n            var content = this.wrapper.find(\".k-scheduler-content\");\n            var view = this.view();\n\n            if (view && view.options.name === \"agenda\") {\n                return content.find(\".k-task\");\n            } else {\n                return content.find(\".k-event\")\n                              .add(this.wrapper.find(\".k-scheduler-header-wrap\")\n                                       .find(\".k-scheduler-header-all-day\").siblings());\n            }\n        },\n\n        _movable: function() {\n            var startSlot;\n            var endSlot;\n            var startResources;\n            var startTime;\n            var endTime;\n            var event;\n            var clonedEvent;\n            var that = this;\n            var originSlot;\n            var originStartTime;\n            var originalEvent;\n            var distance = 0;\n            var clonedEvents = [];\n            var cachedEvents = [];\n\n            var isMobile = that._isMobile();\n            var movable = that.options.editable && that.options.editable.move !== false;\n            var resizable = that.options.editable && that.options.editable.resize !== false;\n\n            if (movable || (resizable && isMobile)) {\n                that._dragging = false;\n                if (isMobile && kendo.support.mobileOS.android) {\n                    distance = 5;\n                }\n\n                that._moveDraggable = new kendo.ui.Draggable(that.element, {\n                    distance: distance,\n                    filter: \".k-event\",\n                    ignore: \".k-resize-handle\",\n                    holdToDrag: isMobile,\n                    autoScroll: true\n                });\n\n                if (movable) {\n                    that._moveDraggable.bind(\"dragstart\", function(e) {\n                        var view = that.view();\n                        var eventElement = e.currentTarget;\n                        var isTouch = that._isTouch(e);\n                        that._dragging = true;\n\n                        if (!view.options.editable || view.options.editable.move === false) {\n                            that._dragging = false;\n                            e.preventDefault();\n                            return;\n                        }\n\n                        if (isTouch && !eventElement.hasClass(\"k-event-active\")) {\n                            that._dragging = false;\n                            that.element.find(\".k-event-active\").removeClass(\"k-event-active\");\n                            e.preventDefault();\n                            return;\n                        }\n\n                        event = that.occurrenceByUid(eventElement.attr(kendo.attr(\"uid\")));\n\n                        clonedEvent = event.clone();\n                        originalEvent = event.clone();\n\n                        clonedEvent.update(view._eventOptionsForMove(clonedEvent));\n\n                        clonedEvent.inverseColor = that._isInverseColor(eventElement);\n\n                        clonedEvents = [];\n                        if (that._selection) {\n                            var events = that._selection.events;\n\n                            for (var i = 0; i < events.length; i++) {\n                                var evtClone = that.occurrenceByUid(events[i]).clone();\n                                var evtCloneElement = this.element.find('div.k-event[data-uid=\"' + evtClone.uid + '\"]').eq(0);\n\n                                evtClone.update(view._eventOptionsForMove(evtClone));\n\n                                if (evtCloneElement.length) {\n                                    evtClone.inverseColor = that._isInverseColor(evtCloneElement);\n                                }\n\n                                clonedEvents.push(evtClone);\n                            }\n                        } else {\n                            clonedEvents.push(clonedEvent);\n                        }\n\n                        startSlot = view._slotByPosition(e.x.startLocation, e.y.startLocation);\n                        startResources = view._resourceBySlot(startSlot);\n\n                        originStartTime = startTime = startSlot.startOffset(e.x.startLocation, e.y.startLocation, that.options.snap);\n\n                        endSlot = startSlot;\n\n                        originSlot = startSlot;\n\n                        if (!startSlot || that.trigger(\"moveStart\", { event: event })) {\n                            e.preventDefault();\n                        }\n                    })\n                    .bind(\"drag\", function(e) {\n                        var view = that.view();\n                        var slot = view._slotByPosition(e.x.location, e.y.location);\n                        var distance;\n                        var range;\n                        var i;\n\n                        if (!slot) {\n                            return;\n                        }\n\n                        endTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n\n                        if (slot.isDaySlot !== startSlot.isDaySlot) {\n\n                            if (slot.isDaySlot !== originSlot.isDaySlot) {\n                                var slotIndex = $(startSlot.element).index();\n\n                                var targetSlotElement = $(slot.element).parent().children().eq(slotIndex);\n\n                                startSlot = view._slotByPosition(targetSlotElement.offset().left, targetSlotElement.offset().top);\n\n                                startTime = startSlot.startOffset(e.x.location, e.y.location, true);\n\n                                cachedEvents = clonedEvents.map(function(event) { return event.clone(); });\n\n                                for (i = 0; i < clonedEvents.length; i++) {\n                                    if (clonedEvents[i].isAllDay != slot.isDaySlot) {\n                                        clonedEvents[i].isAllDay = slot.isDaySlot;\n\n                                        clonedEvents[i].end = kendo.date.getDate(clonedEvents[i].start);\n                                        clonedEvents[i].start = kendo.date.getDate(clonedEvents[i].start);\n\n                                        if (!slot.isDaySlot) {\n                                            kendo.date.setTime(clonedEvents[i].start, kendo.date.getMilliseconds(view.startTime()));\n                                            kendo.date.setTime(clonedEvents[i].end, kendo.date.getMilliseconds(view.startTime()) + view._timeSlotInterval());\n                                        }\n                                    }\n                                }\n                            } else {\n                                startSlot = $.extend(true, { }, originSlot);\n                                startTime = originStartTime;\n\n                                clonedEvents = cachedEvents;\n                            }\n                        }\n\n                        distance = endTime - startTime;\n\n                        for (i = 0; i < clonedEvents.length; i++) {\n                            view._updateMoveHint(clonedEvents[i], slot.groupIndex, distance);\n                        }\n\n                        range = moveEventRange(clonedEvent, distance);\n\n                        if (!that.trigger(\"move\", {\n                            event: event,\n                            slot: { element: slot.element, start: slot.startDate(), end: slot.endDate(), isDaySlot: slot.isDaySlot },\n                            resources: view._resourceBySlot(slot),\n                            start: range.start,\n                            end: range.end\n                        })) {\n                            endSlot = slot;\n                        } else {\n                            for (i = 0; i < clonedEvents.length; i++) {\n                                view._updateMoveHint(clonedEvents[i], slot.groupIndex, distance);\n                            }\n                        }\n                    })\n                    .bind(\"dragend\", function(e) {\n                        that.view()._removeMoveHint();\n                        var distance = endTime - startTime;\n                        var range = moveEventRange(clonedEvent, distance);\n                        var start = range.start;\n                        var end = range.end;\n                        that._dragging = false;\n\n                        var endResources = that.view()._resourceBySlot(endSlot);\n\n                        var prevented = that.trigger(\"moveEnd\", {\n                            event: event,\n                            slot: { element: endSlot.element, start: endSlot.startDate(), end: endSlot.endDate() },\n                            start: start,\n                            end: end,\n                            resources: endResources\n                        });\n\n                        if (!prevented && (event.start.getTime() !== start.getTime() ||\n                            event.end.getTime() !== end.getTime() ||\n                            originSlot.isDaySlot !== endSlot.isDaySlot ||\n                            kendo.stringify(endResources) !== kendo.stringify(startResources))) {\n\n                            that._isMultiDrag = clonedEvents.length > 1;\n\n                            for (var i = 0; i < clonedEvents.length; i++) {\n                                var evt = clonedEvents[i];\n\n                                range = moveEventRange(evt, distance);\n\n                                var updatedEventOptions = that.view()._eventOptionsForMove(evt);\n                                var eventOptions = $.extend(\n                                    {\n                                        isAllDay: evt.isAllDay,\n                                        start: range.start,\n                                        end: range.end\n                                    },\n                                    updatedEventOptions,\n                                    endResources\n                                );\n\n                                that._updateEvent(null, evt, eventOptions);\n                            }\n\n                            if (that._isMultiDrag) {\n                                that.dataSource.sync();\n                                that._isMultiDrag = false;\n                            }\n                        }\n\n                        e.currentTarget.removeClass(\"k-event-active\");\n                        this.cancelHold();\n                        clonedEvents = [];\n                        cachedEvents = [];\n                    })\n                    .bind(\"dragcancel\", function() {\n                        that.view()._removeMoveHint();\n                        this.cancelHold();\n                        clonedEvents = [];\n                        cachedEvents = [];\n                    });\n                }\n\n                that._moveDraggable.bind(\"hold\", function(e) {\n                    if (that._isTouch(e)) {\n                        that.element.find(\".k-event-active\").removeClass(\"k-event-active\");\n                        if (that.options.selectable) {\n                            that._createSelection(e.currentTarget);\n                        }\n                        e.currentTarget.addClass(\"k-event-active\");\n                    }\n                });\n            }\n        },\n\n        _resizable: function() {\n            var startTime;\n            var endTime;\n            var event;\n            var clonedEvent;\n            var slot;\n            var that = this;\n            var distance = 0;\n\n            function direction(handle) {\n                var directions = {\n                    \"k-resize-e\": \"east\",\n                    \"k-resize-w\": \"west\",\n                    \"k-resize-n\": \"north\",\n                    \"k-resize-s\": \"south\"\n                };\n\n                for (var key in directions) {\n                    if (handle.hasClass(key)) {\n                        return directions[key];\n                    }\n                }\n            }\n\n            if (that._isMobile() && kendo.support.mobileOS.android) {\n                distance = 5;\n            }\n\n            that._resizeDraggable = new kendo.ui.Draggable(that.element, {\n                distance: distance,\n                filter: \".k-resize-handle\",\n                autoScroll: true,\n                dragstart: function(e) {\n                    var dragHandle = $(e.currentTarget);\n\n                    var eventElement = dragHandle.closest(\".k-event\");\n\n                    var uid = eventElement.attr(kendo.attr(\"uid\"));\n\n                    var view = that.view();\n\n                    that._dragging = true;\n                    event = that.occurrenceByUid(uid);\n\n                    clonedEvent = event.clone();\n\n                    view._updateEventForResize(clonedEvent);\n\n                    slot = view._slotByPosition(e.x.startLocation, e.y.startLocation);\n\n                    if (that.trigger(\"resizeStart\", { event: event })) {\n                        e.preventDefault();\n                    }\n\n                    startTime = kendo.date.toUtcTime(clonedEvent.start);\n\n                    endTime = kendo.date.toUtcTime(clonedEvent.end);\n                },\n                drag: function(e) {\n                    if (!slot) {\n                        return;\n                    }\n\n                    var dragHandle = $(e.currentTarget);\n\n                    var dir = direction(dragHandle);\n\n                    var view = that.view();\n\n                    var currentSlot = view._slotByPosition(e.x.location, e.y.location);\n\n                    if (!currentSlot || slot.groupIndex != currentSlot.groupIndex) {\n                        return;\n                    }\n\n                    slot = currentSlot;\n\n                    var originalStart = startTime;\n\n                    var originalEnd = endTime;\n\n                    if (dir == \"south\") {\n                        if (!slot.isDaySlot && slot.end - kendo.date.toUtcTime(clonedEvent.start) >= view._timeSlotInterval()) {\n                            if (clonedEvent.isAllDay) {\n                                endTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                            } else {\n                                endTime = slot.endOffset(e.x.location, e.y.location, that.options.snap);\n                            }\n                        }\n                    } else if (dir == \"north\") {\n                        if (!slot.isDaySlot && kendo.date.toUtcTime(clonedEvent.end) - slot.start >= view._timeSlotInterval()) {\n                            startTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                        }\n                    } else if (dir == \"east\") {\n                        if (slot.isDaySlot && kendo.date.toUtcTime(kendo.date.getDate(slot.endDate())) >= kendo.date.toUtcTime(kendo.date.getDate(clonedEvent.start))) {\n                            if (clonedEvent.isAllDay) {\n                                endTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                            } else {\n                                endTime = slot.endOffset(e.x.location, e.y.location, that.options.snap);\n                            }\n                        } else if (!slot.isDaySlot && slot.end - kendo.date.toUtcTime(clonedEvent.start) >= view._timeSlotInterval()) {\n                            endTime = slot.endOffset(e.x.location, e.y.location, that.options.snap);\n                        }\n                    } else if (dir == \"west\") {\n                        if (slot.isDaySlot && kendo.date.toUtcTime(kendo.date.getDate(clonedEvent.end)) >= kendo.date.toUtcTime(kendo.date.getDate(slot.startDate()))) {\n                            startTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                        } else if (!slot.isDaySlot && kendo.date.toUtcTime(clonedEvent.end) - slot.start >= view._timeSlotInterval()) {\n                            startTime = slot.startOffset(e.x.location, e.y.location, that.options.snap);\n                        }\n                    }\n\n                    if (!that.trigger(\"resize\", {\n                        event: event,\n                        slot: { element: slot.element, start: slot.startDate(), end: slot.endDate() },\n                        start: kendo.timezone.toLocalDate(startTime),\n                        end: kendo.timezone.toLocalDate(endTime),\n                        resources: view._resourceBySlot(slot)\n                    })) {\n                        view._updateResizeHint(clonedEvent, slot.groupIndex, startTime, endTime);\n                    } else {\n                        startTime = originalStart;\n                        endTime = originalEnd;\n                    }\n                },\n                dragend: function(e) {\n                    var dragHandle = $(e.currentTarget);\n                    var start = new Date(clonedEvent.start.getTime());\n                    var end = new Date(clonedEvent.end.getTime());\n                    var dir = direction(dragHandle);\n\n                    that._dragging = false;\n                    that.view()._removeResizeHint();\n\n                    if (dir == \"south\") {\n                        end = kendo.timezone.toLocalDate(endTime);\n                    } else if (dir == \"north\") {\n                        start = kendo.timezone.toLocalDate(startTime);\n                    } else if (dir == \"east\") {\n                        if (slot.isDaySlot) {\n                            end = kendo.date.getDate(kendo.timezone.toLocalDate(endTime));\n                        } else {\n                            end = kendo.timezone.toLocalDate(endTime);\n                        }\n                    } else if (dir == \"west\") {\n                        if (slot.isDaySlot) {\n                            start = new Date(kendo.timezone.toLocalDate(startTime));\n                            start.setHours(0);\n                            start.setMinutes(0);\n                        } else {\n                            start = kendo.timezone.toLocalDate(startTime);\n                        }\n                    }\n\n                    var prevented = that.trigger(\"resizeEnd\", {\n                        event: event,\n                        slot: { element: slot.element, start: slot.startDate(), end: slot.endDate() },\n                        start: start,\n                        end: end,\n                        resources: that.view()._resourceBySlot(slot)\n                    });\n\n                    if (!prevented && end.getTime() >= start.getTime()) {\n                        if (clonedEvent.start.getTime() != start.getTime() || clonedEvent.end.getTime() != end.getTime()) {\n                            that.view()._updateEventForResize(event);\n                            that._updateEvent(dir, event, { start: start, end: end });\n                        }\n                    }\n\n                    slot = null;\n                    event = null;\n                },\n                dragcancel: function() {\n                    that._dragging = false;\n                    that.view()._removeResizeHint();\n\n                    slot = null;\n                    event = null;\n                }\n            });\n        },\n\n        _updateEvent: function(dir, event, eventInfo) {\n            var that = this;\n\n            var updateEvent = function(event, callback) {\n                var start;\n\n                try {\n                    that._preventRefresh = true;\n                    event.update(eventInfo);\n                    that._convertDates(event);\n                    start = event.start;\n\n                    if (dir && event.duration() % MS_PER_DAY === 0 && start.getHours() === 0 && start.getMinutes() === 0 && start.getSeconds() === 0 && start.getMilliseconds() === 0) {\n                        event.set(\"isAllDay\", true);\n                    }\n                } finally {\n                    that._preventRefresh = false;\n                }\n\n                if (!that.trigger(SAVE, { event: event })) {\n                    if (callback) {\n                        callback();\n                    }\n\n                    if (!that._isMultiDrag) {\n                        that.dataSource.sync();\n                    }\n                }\n            };\n\n            var recurrenceHead = function(event) {\n                if (event.recurrenceRule) {\n                    return that.dataSource.getByUid(event.uid);\n                } else {\n                    return that.dataSource.get(event.recurrenceId);\n                }\n            };\n\n            var updateSeries = function() {\n                var head = recurrenceHead(event);\n\n                if (dir == \"south\" || dir == \"north\") {\n                    if (eventInfo.start) {\n                        var start = kendo.date.getDate(head.start);\n                        kendo.date.setTime(start, getMilliseconds(eventInfo.start));\n                        eventInfo.start = start;\n                    }\n                    if (eventInfo.end) {\n                        var end = kendo.date.getDate(head.end);\n                        kendo.date.setTime(end, getMilliseconds(eventInfo.end));\n                        eventInfo.end = end;\n                    }\n                }\n\n                that.dataSource._removeExceptions(head);\n\n                updateEvent(head);\n            };\n\n            var updateOccurrence = function() {\n                var head = recurrenceHead(event);\n                var eventUid;\n\n                var callback = function() {\n                    that._convertDates(head);\n\n                    if (that._selection) {\n                        that._selection.events.push(eventUid);\n                    }\n                };\n\n                var exception = head.toOccurrence({ start: event.start, end: event.end });\n\n                eventUid = exception.uid;\n\n                updateEvent(that.dataSource.add(exception), callback);\n            };\n\n            if (event.recurrenceRule || event.isOccurrence()) {\n                var recurrenceMessages = that.options.messages.recurrenceMessages;\n\n                that._showRecurringDialog(event, updateOccurrence, updateSeries,{\n                    title: recurrenceMessages.editWindowTitle,\n                    text: recurrenceMessages.editRecurring ? recurrenceMessages.editRecurring : EDITRECURRING,\n                    occurrenceText: recurrenceMessages.editWindowOccurrence,\n                    seriesText: recurrenceMessages.editWindowSeries\n                });\n            } else {\n                updateEvent(that.dataSource.getByUid(event.uid));\n            }\n        },\n\n        _modelForContainer: function(container) {\n            container = $(container).closest(\"[\" + kendo.attr(\"uid\") + \"]\");\n\n            return this.dataSource.getByUid(container.attr(kendo.attr(\"uid\")));\n        },\n\n        showDialog: function(options) {\n            this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n            this._editor.showDialog(options);\n        },\n\n        focus: function() {\n            this.wrapper.trigger(\"focus\");\n        },\n\n        _confirmation: function(callback, model, isResetSeries) {\n            var editable = this.options.editable;\n\n            if (editable === true || editable.confirmation !== false) {\n                var messages = this.options.messages;\n                var title = messages.deleteWindowTitle;\n                var text = typeof editable.confirmation === STRING ? editable.confirmation : messages.editable.confirmation;\n\n                if (this._isEditorOpened() && model.isRecurring()) {\n                    var recurrenceMessages = this.options.messages.recurrenceMessages;\n                    title = recurrenceMessages.deleteWindowTitle;\n\n                    if (model.isException() || model.isNew()) {\n                        text = recurrenceMessages.deleteRecurringConfirmation ? recurrenceMessages.deleteRecurringConfirmation : DELETERECURRINGCONFIRM;\n                    } else {\n                        text = recurrenceMessages.deleteSeriesConfirmation ? recurrenceMessages.deleteSeriesConfirmation : DELETESERIESCONFIRM;\n                    }\n\n                    if (isResetSeries) {\n                        title = recurrenceMessages.resetSeriesWindowTitle;\n                        text = recurrenceMessages.resetSeriesConfirmation ? recurrenceMessages.resetSeriesConfirmation : RESETSERIESCONFIRM;\n                    }\n                }\n\n                var buttons = [\n                    { name: \"destroy\", text: isResetSeries ? messages.resetSeries : messages.destroy, click: function() { callback(); } }\n                ];\n\n                if (!(this._isMobile() && kendo.Pane)) {\n                    buttons.push({ name: \"canceledit\", text: messages.cancel, click: function() { callback(true); } });\n                }\n\n                this._unbindResize();\n\n                this.showDialog({\n                    model: model,\n                    text: text,\n                    title: title,\n                    buttons: buttons\n                });\n\n                this._bindResize();\n            } else {\n                callback();\n            }\n        },\n\n        addEvent: function(eventInfo) {\n            var editable = this._editor.editable;\n            var dataSource = this.dataSource;\n            var event;\n\n            eventInfo = eventInfo || {};\n\n            var prevented = this.trigger(\"add\", { event: eventInfo });\n\n            if (!prevented && ((editable && editable.end()) || !editable)) {\n                this.cancelEvent();\n\n                if (eventInfo && eventInfo.toJSON) {\n                    eventInfo = eventInfo.toJSON();\n                }\n\n                event = dataSource.add(eventInfo);\n\n                if (event) {\n                    this.cancelEvent();\n                    this._editEvent(event);\n                }\n            }\n       },\n\n       saveEvent: function() {\n            var that = this;\n            var editor = that._editor;\n            var dataSource = that.dataSource;\n\n            if (!editor) {\n                return;\n            }\n\n            var editable = editor.editable;\n            var container = editor.container;\n            var model = that._modelForContainer(container);\n            var events, i, event;\n\n            if (container && editable && editable.end() &&\n                !that.trigger(SAVE, { container: container, event: model } )) {\n\n                if (!model.isOccurrence() && !!model.recurrenceException && !model.recurrenceRule) {\n                    events = dataSource.data();\n\n                    for (i = events.length - 1; i >= 0; i -= 1) {\n                        event = events[i];\n                        if (event && event.recurrenceId === model.id) {\n                            dataSource.remove(event);\n                        }\n                    }\n\n                    model.set(\"recurrenceException\", \"\");\n                }\n\n                if (!model.dirty && !model.isOccurrence()) {\n                    that._convertDates(model, \"remove\");\n                }\n\n                dataSource.sync();\n            }\n        },\n\n        cancelEvent: function() {\n            var editor = this._editor;\n            var container = editor.container;\n            var model;\n\n            if (container) {\n                model = this._modelForContainer(container);\n\n                if (model && model.isOccurrence()) {\n                    this._convertDates(model, \"remove\");\n                    this._convertDates(this.dataSource.get(model.recurrenceId), \"remove\");\n                }\n\n                this.dataSource.cancelChanges(model);\n\n                //TODO: handle the cancel in UI\n\n                editor.close();\n            }\n        },\n\n        editEvent: function(uid) {\n            var model = typeof uid == \"string\" ? this.occurrenceByUid(uid) : uid;\n\n            if (!model) {\n                return;\n            }\n\n            this.cancelEvent();\n\n            if (model.isRecurring()) {\n                this._editRecurringDialog(model);\n            } else {\n                this._editEvent(model);\n            }\n        },\n\n        _editEvent: function(model) {\n            this._preventRefresh = true;\n            this._unbindResize();\n\n            this._createPopupEditor(model);\n            this.toolbar.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n\n            this._bindResize();\n        },\n\n        _editRecurringDialog: function(model) {\n            var that = this;\n\n            var editOccurrence = function() {\n                if (model.isException()) {\n                    that._editEvent(model);\n                } else {\n                    that.addEvent(model);\n                }\n            };\n\n            var editSeries = function() {\n                if (model.recurrenceId) {\n                    model = that.dataSource.get(model.recurrenceId);\n                }\n\n                that._editEvent(model);\n            };\n\n            var recurrenceMessages = that.options.messages.recurrenceMessages;\n            that._showRecurringDialog(model, editOccurrence, editSeries, {\n                title: recurrenceMessages.editWindowTitle,\n                text: recurrenceMessages.editRecurring ? recurrenceMessages.editRecurring : EDITRECURRING,\n                occurrenceText: recurrenceMessages.editWindowOccurrence,\n                seriesText: recurrenceMessages.editWindowSeries\n            });\n         },\n\n         _showRecurringDialog: function(model, editOccurrence, editSeries, messages) {\n             var editable = this.options.editable;\n             var editRecurringMode = isPlainObject(editable) ? editable.editRecurringMode : \"dialog\";\n\n             if (editRecurringMode === \"occurrence\" || this._isMultiDrag) {\n                 editOccurrence();\n             } else if (editRecurringMode === \"series\") {\n                 editSeries();\n             } else {\n                 this._unbindResize();\n\n                 this.showDialog({\n                     model: model,\n                     title: messages.title,\n                     text: messages.text,\n                     buttons: [\n                         { text: messages.occurrenceText, click: editOccurrence },\n                         { text: messages.seriesText, click: editSeries }\n                     ]\n                 });\n\n                 this._bindResize();\n             }\n        },\n\n        _createButton: function(command) {\n            var template = command.template || COMMANDBUTTONTMPL,\n                commandName = typeof command === STRING ? command : command.name || command.text,\n                options = { className: \"k-scheduler-\" + (commandName || \"\").replace(/\\s/g, \"\"), text: commandName, attr: \"\" };\n\n            if (!commandName && !(isPlainObject(command) && command.template)) {\n                throw new Error(\"Custom commands should have name specified\");\n            }\n\n            if (isPlainObject(command)) {\n                if (command.className) {\n                    command.className += \" \" + options.className;\n                }\n\n                if (commandName === \"edit\" && isPlainObject(command.text)) {\n                    command = extend(true, {}, command);\n                    command.text = command.text.edit;\n                }\n\n                options = extend(true, options, defaultCommands[commandName], command);\n            } else {\n                options = extend(true, options, defaultCommands[commandName]);\n            }\n\n            if (!options.className) {\n                options.className = \"k-button-solid-base\";\n            } else if (options.className.indexOf(\"k-button-solid-primary\") === -1) {\n                options.className += \" k-button-solid-base\";\n            }\n\n            return kendo.template(template)(options);\n        },\n\n        _convertDates: function(model, method) {\n            var timezone = this.dataSource.reader.timezone;\n            var startTimezone = model.startTimezone;\n            var endTimezone = model.endTimezone;\n            var start = model.start;\n            var end = model.start;\n\n            method = method || \"apply\";\n            startTimezone = startTimezone || endTimezone;\n            endTimezone = endTimezone || startTimezone;\n\n            if (startTimezone) {\n                if (timezone) {\n                    if (method === \"apply\") {\n                        start = kendo.timezone.convert(model.start, timezone, startTimezone);\n                        end = kendo.timezone.convert(model.end, timezone, endTimezone);\n                    } else {\n                        start = kendo.timezone.convert(model.start, startTimezone, timezone);\n                        end = kendo.timezone.convert(model.end, endTimezone, timezone);\n                    }\n                } else {\n                    start = kendo.timezone[method](model.start, startTimezone);\n                    end = kendo.timezone[method](model.end, endTimezone);\n                }\n\n                model._set(\"start\", start);\n                model._set(\"end\", end);\n            }\n        },\n\n        _createEditor: function() {\n            var that = this;\n\n            var editor;\n\n            if (this._isMobile() && kendo.Pane) {\n                editor = that._editor = new MobileEditor(this.wrapper, extend({}, this.options, {\n                    target: this,\n                    timezone: that.dataSource.reader.timezone,\n                    resources: that.resources,\n                    createButton: this._createButton.bind(this)\n                }));\n            } else {\n                editor = that._editor = new PopupEditor(this.wrapper, extend({}, this.options, {\n                    target: this,\n                    createButton: this._createButton.bind(this),\n                    timezone: that.dataSource.reader.timezone,\n                    resources: that.resources\n                }));\n            }\n\n            editor.bind(\"cancel\", function(e) {\n                if (that.trigger(\"cancel\", { container: e.container, event: e.model })) {\n                    e.preventDefault();\n                    return;\n                }\n                that._preventRefresh = false;\n                that.cancelEvent();\n\n                if (that._attemptRefresh) {\n                    that.refresh();\n                }\n\n                that.focus();\n            });\n\n            editor.bind(\"edit\", function(e) {\n                if (that.trigger(EDIT, { container: e.container, event: e.model })) {\n                    e.preventDefault();\n                }\n            });\n\n            editor.bind(\"save\", function() {\n                that._preventRefresh = false;\n                that.saveEvent();\n            });\n\n            editor.bind(\"remove\", function(e) {\n                that._preventRefresh = false;\n                that.removeEvent(e.model);\n            });\n\n            editor.bind(\"resetSeries\", function(e) {\n                that._confirmation(function(cancel) {\n                    that._preventRefresh = false;\n                    if (!cancel) {\n                        that.dataSource._removeExceptions(e.model);\n                        that.saveEvent();\n                    }\n                }, e.model, true);\n            });\n        },\n\n        _createPopupEditor: function(model) {\n            var editor = this._editor;\n\n            if (!model.isNew() || model.isOccurrence()) {\n                if (model.isOccurrence()) {\n                    this._convertDates(model.recurrenceId ? this.dataSource.get(model.recurrenceId) : model);\n                }\n                this._convertDates(model);\n            }\n\n            this.editable = editor.editEvent(model);\n        },\n\n        removeEvent: function(uid) {\n            var that = this,\n                model = typeof uid == \"string\" ? that.occurrenceByUid(uid) : uid;\n\n            if (!model) {\n                return;\n            }\n\n            if (model.isRecurring()) {\n                that._deleteRecurringDialog(model);\n            } else {\n                that._confirmation(function(cancel) {\n                    if (!cancel) {\n                        that._removeEvent(model);\n                    }\n                }, model);\n            }\n        },\n\n        occurrenceByUid: function(uid) {\n            var occurrence = this.dataSource.getByUid(uid);\n            if (!occurrence) {\n                occurrence = getOccurrenceByUid(this._data, uid);\n            }\n\n            return occurrence;\n        },\n\n        occurrencesInRange: function(start, end) {\n            return new kendo.data.Query(this._data).filter({\n                logic: \"or\",\n                filters: [\n                    {\n                        logic: \"and\",\n                        filters: [\n                            { field: \"start\", operator: \"gte\", value: start },\n                            { field: \"end\", operator: \"gte\", value: start },\n                            { field: \"start\", operator: \"lt\", value: end }\n                        ]\n                    },\n                    {\n                        logic: \"and\",\n                        filters: [\n                            { field: \"start\", operator: \"lte\", value: start },\n                            { field: \"end\", operator: \"gt\", value: start }\n                        ]\n                    }\n                ]\n            }).toArray();\n        },\n\n        _removeEvent: function(model) {\n            if (!this.trigger(REMOVE, { event: model })) {\n                if (this.dataSource.remove(model)) {\n                    this.dataSource.sync();\n                }\n            }\n        },\n\n        _deleteRecurringDialog: function(model) {\n            var that = this;\n            var currentModel = model;\n            var editable = that.options.editable;\n            var deleteOccurrence;\n            var deleteSeries;\n            var createException;\n            var deleteOccurrenceConfirmation;\n            var deleteSeriesConfirmation;\n            var createExceptionConfirmation;\n            var editRecurringMode = isPlainObject(editable) ? editable.editRecurringMode : \"dialog\";\n\n            deleteOccurrence = function() {\n                var occurrence = currentModel.recurrenceId ? currentModel : currentModel.toOccurrence();\n                var head = that.dataSource.get(occurrence.recurrenceId);\n\n                that._convertDates(head);\n                that._removeEvent(occurrence);\n            };\n\n            deleteSeries = function() {\n                if (currentModel.recurrenceId) {\n                    currentModel = that.dataSource.get(currentModel.recurrenceId);\n                }\n\n                that._removeEvent(currentModel);\n            };\n\n            createException = function() {\n                that.dataSource.remove(currentModel);\n                that.dataSource.sync();\n            };\n\n            if (editRecurringMode != \"dialog\" || that._isEditorOpened()) {\n                deleteOccurrenceConfirmation = function() {\n                    that._confirmation(function(cancel) {\n                        if (!cancel) {\n                            deleteOccurrence();\n                        }\n                    }, currentModel);\n                };\n\n                deleteSeriesConfirmation = function() {\n                    that._confirmation(function(cancel) {\n                        if (!cancel) {\n                            deleteSeries();\n                        }\n                    }, currentModel);\n                };\n\n                createExceptionConfirmation = function() {\n                    that._confirmation(function(cancel) {\n                        if (!cancel) {\n                            createException();\n                        }\n                    }, currentModel);\n                };\n            }\n\n            var seriesCallback = deleteSeriesConfirmation || deleteSeries;\n            var occurrenceCallback = deleteOccurrenceConfirmation || deleteOccurrence;\n            var exeptionCallback = createExceptionConfirmation || createException;\n\n            if (that._isEditorOpened()) {\n                if (model.isException()) {\n                    occurrenceCallback();\n                } else if (model.isNew()) {\n                    exeptionCallback();\n                } else {\n                    seriesCallback();\n                }\n            } else {\n                var recurrenceMessages = that.options.messages.recurrenceMessages;\n                that._showRecurringDialog(model, occurrenceCallback, seriesCallback, {\n                    title: recurrenceMessages.deleteWindowTitle,\n                    text: recurrenceMessages.deleteRecurring ? recurrenceMessages.deleteRecurring : DELETERECURRING,\n                    occurrenceText: recurrenceMessages.deleteWindowOccurrence,\n                    seriesText: recurrenceMessages.deleteWindowSeries\n                });\n            }\n        },\n\n        _isEditorOpened: function() {\n            return !!this._editor.container;\n        },\n\n        _unbindView: function(view) {\n            var that = this;\n\n            view.destroy();\n        },\n\n        _bindView: function(view) {\n            var that = this;\n\n            if (that.options.editable) {\n                if (that._viewRemoveHandler) {\n                    view.unbind(REMOVE, that._viewRemoveHandler);\n                }\n\n                that._viewRemoveHandler = function(e) {\n                    that.removeEvent(e.uid);\n                };\n\n                view.bind(REMOVE, that._viewRemoveHandler);\n\n                if (that._viewAddHandler) {\n                    view.unbind(ADD, that._viewAddHandler);\n                }\n\n                that._viewAddHandler = function(e) {\n                    that.addEvent(e.eventInfo);\n                };\n\n                view.bind(ADD, this._viewAddHandler);\n\n                if (that._viewEditHandler) {\n                    view.unbind(EDIT, that._viewEditHandler);\n                }\n\n                that._viewEditHandler = function(e) {\n                    that.editEvent(e.uid);\n                };\n\n                view.bind(EDIT, this._viewEditHandler);\n            }\n\n            if (that._viewNavigateHandler) {\n                view.unbind(\"navigate\", that._viewNavigateHandler);\n            }\n\n            that._viewNavigateHandler = function(e) {\n                if (e.action) {\n                    if (!that.trigger(\"navigate\", { view: e.view, isWorkDay: e.isWorkDay, action: e.action, date: e.date })) {\n                        that.date(e.date);\n                    }\n                } else if (e.view) {\n                    var switchWorkDay = \"isWorkDay\" in e;\n                    var action = switchWorkDay ? \"changeWorkDay\" : \"changeView\";\n\n                    if (!that.trigger(\"navigate\", { view: e.view, isWorkDay: e.isWorkDay, action: action, date: e.date })) {\n                        if (switchWorkDay) {\n                            that._workDayMode = e.isWorkDay;\n                        }\n\n                        that._selectView(e.view);\n                        that.date(e.date);\n                    }\n                }\n            };\n\n            view.bind(\"navigate\", that._viewNavigateHandler);\n\n            if (that._viewActivateHandler) {\n                view.unbind(\"activate\", that._viewActivateHandler);\n            }\n\n            that._viewActivateHandler = function() {\n                var view = this;\n                if (that._selection) {\n                    view.constrainSelection(that._selection);\n\n                    if ($(document.activeElement).closest(\".k-scheduler-toolbar\").length === 0) {\n                        if (document.activeElement !== that.wrapper[0]) {\n                            that.element.trigger(\"focus\");\n                        } else {\n                            that._select();\n                        }\n                    }\n\n                    that._adjustSelectedDate();\n                }\n            };\n\n            view.bind(\"activate\", that._viewActivateHandler);\n        },\n\n        _selectView: function(name) {\n            var that = this;\n\n            if (name && that.views[name]) {\n                if (that._selectedView) {\n                    that._unbindView(that._selectedView);\n                }\n\n                that._selectedView = that._renderView(name);\n                that._selectedViewName = name;\n\n                if (this._initialSize) {\n                    this._initialSize = false;\n                    this._onMediaChange(window.matchMedia(MIN_SCREEN));\n                }\n\n                if (that._viewsCount > 1 && !that._isMobile()) {\n                    var viewElementToSelect = that.toolbar.find(\"[\" + kendo.attr(\"name\") + \"=\" + name + \"]\");\n                    var viewsDropdown = that.toolbar.find(\".k-views-dropdown\");\n                    var viewsGroupEl = viewElementToSelect.closest(\".k-button-group\");\n                    var viewsButtonGroup = viewsGroupEl.data(\"kendoButtonGroup\");\n\n                    viewsDropdown.val(name);\n\n                    if (viewsButtonGroup) {\n                        viewsButtonGroup.select(viewElementToSelect);\n                    }\n                } else if (that._viewsCount > 1) {\n                    var viewSelect = that.toolbar.find(\".k-scheduler-mobile-views\");\n\n                    viewSelect.find(\"[value=\" + name.replace(/\\./g, \"\\\\.\") + \"]\")\n                        .prop(\"selected\", \"selected\");\n                }\n            }\n        },\n\n        view: function(name) {\n            var that = this;\n\n            if (name) {\n                if (name === \"year\") {\n                    that.wrapper.removeAttr(\"tabindex\");\n                } else {\n                    that.wrapper.attr(\"tabindex\", 0);\n                }\n\n                that._selectView(name);\n                that.rebind();\n\n                return;\n            }\n\n            return that._selectedView;\n        },\n\n        viewName: function() {\n            return this.view().name;\n        },\n\n        _renderView: function(name) {\n            var view = this._initializeView(name);\n\n            this._bindView(view);\n\n            if (kendo.support.mouseAndTouchPresent || kendo.support.pointers) {\n                view.content.css(\"-ms-touch-action\", \"pinch-zoom\");\n                view.content.css(\"touch-action\", \"pinch-zoom\");\n            }\n\n            this._model.set(\"formattedDate\", view.dateForTitle());\n            this._model.set(\"formattedShortDate\", view.shortDateForTitle());\n            this._model.set(\"formattedMobileDate\", view.mobileDateForTitle ? view.mobileDateForTitle() : view.shortDateForTitle());\n            this._model.set(\"formattedYear\", view.mobileYearForTitle ? view.mobileYearForTitle() : kendo.format(\"{0:yyyy}\", view.startDate()));\n\n            return view;\n        },\n\n        resize: function(force) {\n            var size = this.getSize();\n            var currentSize = this._size;\n            var view = this.view();\n\n            if (!view || !view.groups) {\n                return;\n            }\n\n            if (force || !currentSize || size.width !== currentSize.width || size.height !== currentSize.height) {\n                this.refresh({ action: \"resize\" });\n                this._size = size;\n            }\n        },\n\n        _adjustSelectedDate: function() {\n            var date = this._model.selectedDate,\n                selection = this._selection,\n                start = selection.start;\n\n            if (start && !kendo.date.isInDateRange(date, getDate(start), getDate(selection.end))) {\n                date.setFullYear(start.getFullYear(), start.getMonth(), start.getDate());\n            }\n        },\n\n        _initializeView: function(name) {\n            var view = this.views[name];\n\n            if (view) {\n                var isSettings = isPlainObject(view),\n                    overrideOptions = {},\n                    type = view.type;\n\n                if (typeof type === STRING) {\n                    type = kendo.getter(view.type)(window);\n                }\n\n                if (isSettings && view.workDays && view.workDays.length) {\n                    overrideOptions.workDays = view.workDays;\n                }\n\n                if (type) {\n                    view = new type(this.wrapper, trimOptions(extend(true, {}, this.options, isSettings ? view : {}, {\n                        resources: this.resources,\n                        date: this.date(),\n                        startTime: kendo.parseDate(view.startTime) || kendo.parseDate(this.options.startTime),\n                        endTime: kendo.parseDate(view.endTime) || kendo.parseDate(this.options.endTime),\n                        showWorkHours: this._workDayMode\n                    }),overrideOptions));\n\n                } else {\n                    throw new Error(\"There is no such view\");\n                }\n            }\n\n            return view;\n        },\n\n        _views: function() {\n            var views = this.options.views;\n            var view;\n            var defaultView;\n            var selected;\n            var isSettings;\n            var name;\n            var type;\n            var idx;\n            var length;\n\n            this.views = {};\n            this._viewsCount = 0;\n\n            for (idx = 0, length = views.length; idx < length; idx++) {\n                var hasType = false;\n\n                view = views[idx];\n\n                isSettings = isPlainObject(view);\n\n                if (isSettings) {\n                    type = name = view.type ? view.type : view;\n                    if (typeof type !== STRING) {\n                        name = view.name || view.title;\n                        hasType = true;\n                    }\n                } else {\n                    type = name = view;\n                    view = {};\n                }\n\n                defaultView = defaultViews[name];\n\n                if (defaultView && !hasType) {\n                    view.type = defaultView.type;\n                    defaultView.title = this.options.messages.views[name];\n                    if (defaultView.type === \"day\") {\n                        defaultView.messages = { allDay: this.options.messages.allDay };\n                    } else if (defaultView.type === \"agenda\") {\n                        defaultView.messages = {\n                            event: this.options.messages.event,\n                            date: this.options.messages.date,\n                            time: this.options.messages.time\n                        };\n                    }\n                }\n\n                view = extend({ title: name }, defaultView, isSettings ? view : {});\n\n                if (name) {\n                    this.views[name] = view;\n                    this._viewsCount++;\n\n                    if (!selected || view.selected) {\n                        selected = name;\n                    }\n                }\n            }\n\n            if (selected) {\n                this._selectedViewName = selected; // toolbar is not rendered yet\n            }\n        },\n\n        rebind: function() {\n            var that = this,\n                resources = that.resources,\n                resourceFetchArray = [];\n\n            if (that._preventRebind) {\n                that._preventRebind = false;\n                return;\n            }\n\n            if (that.options.autoBind === false && resources && resources.length > 0) {\n                resources.forEach(function(resource) {\n                    if (resource.dataSource.data().length === 0) {\n                        that._preventRebind = true;\n                        resourceFetchArray.push(resource.dataSource.fetch());\n                    }\n                });\n\n                $.when.apply(null, resourceFetchArray).then(function() {\n                    that.dataSource.fetch();\n                    that._preventRebind = false;\n                });\n            } else {\n                that.dataSource.fetch();\n            }\n        },\n\n        _dataSource: function() {\n            var that = this,\n                options = that.options,\n                dataSource = options.dataSource;\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (options.timezone && !(dataSource instanceof SchedulerDataSource)) {\n                dataSource = extend(true, dataSource, { schema: { timezone: options.timezone } });\n            } else if (dataSource instanceof SchedulerDataSource) {\n                options.timezone = dataSource.options.schema ? dataSource.options.schema.timezone : \"\";\n            }\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource\n                    .unbind(CHANGE, that._refreshHandler)\n                    .unbind(PROGRESS, that._progressHandler)\n                    .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.SchedulerDataSource.create(dataSource)\n                .bind(CHANGE, that._refreshHandler)\n                .bind(PROGRESS, that._progressHandler)\n                .bind(ERROR, that._errorHandler);\n\n            that.options.dataSource = that.dataSource;\n        },\n\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _progress: function(toggle) {\n            var element = this.element.find(\".k-scheduler-content\");\n            kendo.ui.progress(element, toggle);\n        },\n\n        _resources: function() {\n            var that = this;\n            var resources = that.options.resources;\n            var resourcePromises = [];\n\n            for (var idx = 0; idx < resources.length; idx++) {\n                var resource = resources[idx];\n                var field = resource.field;\n                var name = resource.name || field;\n                var dataSource = resource.dataSource;\n\n                if (!field || !dataSource) {\n                    throw new Error('The \"field\" and \"dataSource\" options of the scheduler resource are mandatory.');\n                }\n\n                that.resources.push({\n                    field: field,\n                    name: name,\n                    title: resource.title || field,\n                    dataTextField: resource.dataTextField || \"text\",\n                    dataValueField: resource.dataValueField || \"value\",\n                    dataColorField: resource.dataColorField || \"color\",\n                    dataParentValueField: resource.dataParentValueField || \"parentValue\",\n                    valuePrimitive: resource.valuePrimitive != null ? resource.valuePrimitive : true,\n                    multiple: resource.multiple || false,\n                    dataSource: that._resourceDataSource(dataSource, name, resourcePromises)\n                });\n            }\n\n            if (!that.options.autoBind) {\n                that._selectView(that._selectedViewName);\n            } else {\n                $.when.apply(null, resourcePromises)\n                      .then(function() {\n                            that.view(that._selectedViewName);\n                        });\n            }\n        },\n\n        _resourceDataSource: function(resourceDS, groupName, promises) {\n            var that = this;\n            var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS;\n            var dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n            if (that.options.autoBind) {\n                promises.push(dataSourceInstance.fetch(function() {\n                    // 'this' is the DataSource instance not the Scheduler\n                    that._bindResourceEvents(this, groupName);\n                }));\n            } else {\n                that._bindResourceEvents(dataSourceInstance, groupName);\n            }\n\n            return dataSourceInstance;\n        },\n\n        _bindResourceEvents: function(resourceDS, groupName) {\n            var that = this;\n            var isGrouped = that.options.group && that.options.group.resources.length;\n            var isResourceGrouped = isGrouped && that.options.group.resources.indexOf(groupName) > -1;\n\n            if (!that._resourceRefreshHandler && isResourceGrouped) {\n                that._resourceRefreshHandler = that._refreshResource.bind(that);\n                that._resourceErrorHandler = that._error.bind(that);\n            }\n\n            if (isResourceGrouped) {\n                resourceDS.bind(CHANGE, that._resourceRefreshHandler)\n                    .bind(ERROR, that._resourceErrorHandler);\n            }\n        },\n\n        _refreshResource: function() {\n            var that = this;\n            var preventRefresh = (that._editor && that._editor.editable) || that._preventRefresh;\n\n            if (!preventRefresh) {\n                that.view(that._selectedViewName);\n            }\n        },\n\n        _initModel: function() {\n            var that = this;\n            that._model = kendo.observable({\n               selectedDate: new Date(this.options.date),\n               formattedDate: \"\",\n               formattedShortDate: \"\"\n           });\n\n           that._model.bind(CHANGE, function(e) {\n                if (e.field === \"selectedDate\") {\n                    that.view(that._selectedViewName);\n                }\n           });\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var options = that.options;\n            var height = options.height;\n            var width = options.width;\n\n            that.wrapper = that.element.addClass(\"k-scheduler\");\n\n            if (that._isMobile()) {\n               that.wrapper.addClass(\"k-scheduler-mobile\");\n            }\n\n            if (height) {\n                that.wrapper.height(height);\n            }\n\n            if (width) {\n                that.wrapper.width(width);\n            }\n        },\n\n        date: function(value) {\n            if (value != null && getDate(value) >= getDate(this.options.min) && getDate(value) <= getDate(this.options.max)) {\n                this._model.set(\"selectedDate\", value);\n            }\n            return getDate(this._model.get(\"selectedDate\"));\n        },\n\n        _processHandlers: function(defaults) {\n            var that = this;\n\n            that._pdfClickHandler = (e) => {\n                e.preventDefault();\n                that.saveAsPDF();\n            };\n\n            that._createClickHandler = (e) => {\n                e.preventDefault();\n                that.addEvent();\n            };\n\n            that._calendarClickHandler = that._currentClickHandler = (e) => {\n                e.preventDefault();\n                that._showCalendar(e.target);\n            };\n\n            that._todayClickHandler = (e) => {\n                e.preventDefault();\n\n                var timezone = that.options.timezone,\n                    currentDate = new Date(),\n                    date;\n\n                if (timezone) {\n                    var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                    date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                } else {\n                    date = currentDate;\n                }\n\n                if (!that.trigger(\"navigate\", { view: that._selectedViewName, action: \"today\", date: date })) {\n                    that.date(date);\n                }\n            };\n\n            that._previousClickHandler = (e) => {\n                e.preventDefault();\n\n                var date = that.view().previousDate();\n\n                if (!that.trigger(\"navigate\", { view: that._selectedViewName, action: \"previous\", date: date })) {\n                    that.date(date);\n                }\n            };\n\n            that._nextClickHandler = (e) => {\n                e.preventDefault();\n\n                var date = that.view().nextDate();\n\n                if (!that.trigger(\"navigate\", { view: that._selectedViewName, action: \"next\", date: date })) {\n                    that.date(date);\n                }\n            };\n\n            that._refreshClickHandler = (e) => {\n                e.preventDefault();\n\n                var name = that.view().name;\n\n                if (!that.trigger(\"navigate\", { view: name, action: \"changeView\", date: that.date() })) {\n                    that.view(name);\n                }\n            };\n\n            that._viewClickHandler = (e) => {\n                var name = e.target.attr(kendo.attr(\"name\"));\n\n                if (!that.trigger(\"navigate\", { view: name, action: \"changeView\", date: that.date() })) {\n                    that.view(name);\n                }\n            };\n\n            Object.values(defaults).map(t => {\n                if (t.name) {\n                    t.click = that[\"_\" + t.name + \"ClickHandler\"];\n                }\n            });\n        },\n\n        _processDefaults: function() {\n            var views = this.views,\n                defaults = $.extend(true, {}, DEFAULT_TOOLS),\n                viewsButtons = [],\n                isRtl = kendo.support.isRtl(this.wrapper),\n                viewsDdl, viewsMobile;\n\n            Object.keys(views).map(name => {\n                var current = $.extend(true, {}, defaults.view);\n\n                current.text = views[name].title;\n                const refAttribute = `ref-view-${name.toLowerCase()}`;\n                current.attributes = {\n                    [refAttribute]: '',\n                    \"data-name\": name\n                };\n\n                current.groupClass = \"k-scheduler-views\";\n                defaults[name] = current;\n\n                viewsButtons.push(name);\n            });\n\n            if (viewsButtons.length > 1) {\n                viewsDdl = VIEWS_DROPDOWN_TEMPLATE({ views: this.views, label: this.options.messages.selectView, type: \"k-views-dropdown\" });\n                viewsMobile = VIEWS_DROPDOWN_TEMPLATE({ views: this.views, label: this.options.messages.selectView, type: \"k-scheduler-mobile-views\" });\n            }\n\n            defaults.viewsDdl = {\n                template: viewsDdl\n            };\n\n            defaults.viewsMobile = {\n                template: viewsMobile\n            };\n\n            this._viewsButtons = viewsButtons;\n\n            if (isRtl) {\n                defaults.previous.icon = \"caret-alt-right\";\n                defaults.next.icon = \"caret-alt-left\";\n            }\n\n            return defaults;\n        },\n\n        _processToolbarArray: function() {\n            var options = this.options,\n                toolbarOptions = options.toolbar,\n                commands = [],\n                isMobile = this._isMobile(),\n                tools, pdf, search;\n\n            if (toolbarOptions) {\n                commands = Array.isArray(toolbarOptions) ? toolbarOptions : [toolbarOptions];\n            }\n\n            pdf = $.grep(commands, function(item) {\n                return item == \"pdf\" || item.name == \"pdf\";\n            }).length > 0;\n\n            search = $.grep(commands, function(item) {\n                return item == \"search\" || item.name == \"search\";\n            }).length > 0;\n\n            if (isMobile) {\n                tools = [...defaultMobileToolsFirst];\n\n                if (options.editable) {\n                    tools[0].push(\"create\");\n                }\n            } else {\n                tools = [...defaultDesktopTools];\n            }\n\n            if (search) {\n                tools.push(\"search\");\n            }\n\n            if (pdf) {\n                if (isMobile) {\n                    tools[0].unshift(\"pdfMobile\");\n                } else {\n                    tools.unshift(\"pdf\");\n                }\n            }\n\n            if (this._viewsCount === 1) {\n                tools.push(\"refresh\");\n            } else if (this._viewsCount > 1) {\n                if (isMobile) {\n                    tools.push(\"viewsMobile\");\n                } else {\n                    tools.push(\"viewsDdl\");\n                    tools.push(this._viewsButtons);\n                }\n            }\n\n            return tools;\n        },\n\n        _processViewTools: function(items) {\n            var result = items,\n                viewsIndex = -1;\n\n            items.some((item, index) => {\n                if (item === \"views\" || item.name === \"views\") {\n                    viewsIndex = index;\n                    return true;\n                }\n\n                return false;\n            });\n\n            if (viewsIndex > -1) {\n                result.splice(viewsIndex, 1, \"viewsDdl\", this._viewsButtons);\n            }\n\n            return result;\n        },\n\n        _processToolbarItems: function() {\n            var desktopItems = this.options.toolbar.items.desktop || this.options.toolbar.items,\n                mobileItems = this.options.toolbar.items.mobile || this.options.toolbar.items,\n                isMobile = this._isMobile();\n\n            if (!isMobile) {\n                if (desktopItems.main) {\n                    if (desktopItems.navigation) {\n                        desktopItems = desktopItems.main.concat(desktopItems.navigation);\n                    } else {\n                        desktopItems = desktopItems.main;\n                    }\n                }\n\n                return { tools: this._processViewTools(desktopItems) };\n            } else {\n                if (Array.isArray(mobileItems)) {\n                    return {\n                        tools: this._processViewTools(mobileItems),\n                        navigation: []\n                    };\n                } else {\n                    return {\n                        tools: this._processViewTools(mobileItems.main),\n                        navigation: this._processViewTools(mobileItems.navigation)\n                    };\n                }\n            }\n        },\n\n        _processTools: function() {\n            var options = this.options,\n                toolbarOptions = options.toolbar;\n\n            if (toolbarOptions && toolbarOptions.items) {\n                return this._processToolbarItems();\n            } else {\n                return { tools: this._processToolbarArray() };\n            }\n        },\n\n        _toolbar: function() {\n            var that = this;\n            var options = that.options;\n            var defaults = that._processDefaults();\n            var { tools, navigation } = that._processTools();\n            var toolbar = $(\"<div class='k-scheduler-toolbar'>\");\n            var secondToolbar;\n\n            that._processHandlers(defaults);\n            that.wrapper.append(toolbar);\n            that.toolbar = toolbar;\n\n            toolbar.kendoToolBar({\n                resizable: false,\n                tools: tools,\n                defaultTools: defaults,\n                parentMessages: options.messages\n            });\n\n            if (that._isMobile() && (!navigation || navigation.length !== 0)) {\n                secondToolbar = $(\"<div class='k-scheduler-toolbar'>\");\n                that.wrapper.append(secondToolbar);\n                that.toolbar = that.toolbar.add(secondToolbar);\n\n                secondToolbar.kendoToolBar({\n                    resizable: false,\n                    tools: navigation || [...defaultMobileToolsSecond],\n                    defaultTools: defaults,\n                    parentMessages: options.messages\n                });\n            }\n\n            that.toolbar.find(\".k-nav-current .k-button-text\").attr('data-' + kendo.ns + 'bind', \"text: formattedDate\");\n            that.toolbar.find(\".k-m-date-format\").attr('data-' + kendo.ns + 'bind', \"text: formattedMobileDate\");\n            that.toolbar.find(\".k-y-date-format\").attr('data-' + kendo.ns + 'bind', \"text: formattedYear\");\n\n            kendo.bind(that.toolbar, that._model);\n\n            that.toolbar.find(\".k-scheduler-search-input\").attr({\n                placeholder: options.messages.search,\n                title: options.messages.search\n            });\n\n            toolbar.on(\"input\" + NS, \".k-scheduler-search-input\", kendo.throttle(function(e) {\n                that.dataSource.filter({\n                    logic: \"or\",\n                    filters: [\n                        { field: \"title\", operator: \"contains\", value: e.target.value },\n                        { field: \"description\", operator: \"contains\", value: e.target.value }\n                    ]\n                });\n            }, 250));\n\n            toolbar.on(CHANGE + NS, \".k-views-dropdown, .k-scheduler-mobile-views\", function() {\n                var name = this.value;\n\n                if (!that.trigger(\"navigate\", { view: name, action: \"changeView\", date: that.date() })) {\n                    that.view(name);\n                }\n            });\n\n            that._initialSize = true;\n        },\n\n        _showCalendar: function(targetElm) {\n            var that = this,\n                target = targetElm || that.toolbar.find(\".k-nav-current\"),\n                html = $('<div class=\"k-calendar-container\"><div class=\"k-scheduler-calendar\"></div></div>');\n\n            if (!that.popup) {\n                that.popup = new Popup(html, {\n                    anchor: target,\n                    activate: function() {\n                        if (that.popup && that.calendar) {\n                            that.popup._toggleResize(false);\n                            that.calendar.element.find(\"table\").trigger(\"focus\");\n                            that.popup._toggleResize(true);\n                        }\n                    },\n                    open: function() {\n                        if (!that.calendar) {\n                            that.calendar = new Calendar(this.element.find(\".k-scheduler-calendar\"),\n                            {\n                                change: function() {\n                                    var date = this.value();\n                                    if (!that.trigger(\"navigate\", { view: that._selectedViewName, action: \"changeDate\", date: date })) {\n                                        that.date(date);\n                                        that.popup.close();\n                                    }\n\n                                    if (!that._isMobile()) {\n                                        that._selectedView.element.trigger(\"focus\");\n                                        that.toolbar.find(\".k-nav-current\").trigger(\"focus\").addClass(FOCUSEDSTATE);\n                                    }\n                                },\n                                min: that.options.min,\n                                max: that.options.max\n                            });\n                        }\n                        that.calendar.element.on(\"keydown\" + NS, function(e) {\n                            if (e.keyCode === keys.ESC || e.keyCode === keys.TAB) {\n                                that.popup.close();\n                                that._selectedView.element.trigger(\"focus\");\n                                that.toolbar.find(\".k-nav-current\").trigger(\"focus\").addClass(FOCUSEDSTATE);\n                            }\n                        });\n\n                        that.calendar.setOptions({\n                            start: that._selectedViewName === \"year\" ? \"decade\" : \"month\",\n                            depth: that._selectedViewName === \"year\" ? \"decade\" : \"month\"\n                        });\n\n                        that.calendar.value(that.date());\n                    },\n                    copyAnchorStyles: false\n                });\n            }\n\n            that.popup.open();\n        },\n\n        refresh: function(e) {\n            var that = this;\n            var view = this.view();\n            var preventRefresh = (e && e.action === \"itemchange\" && (this._editor.editable || this._preventRefresh)) ||\n                                 (this.dataSource.options.type === \"signalr\" && this._preventRefresh);\n\n            this._progress(false);\n\n            e = e || {};\n\n            if (!view) {\n                return;\n            }\n\n            if (preventRefresh) { // skip rebinding if editing is in progress\n                this._attemptRefresh = true && this.dataSource.options.type === \"signalr\";\n                return;\n            }\n\n            if (this.trigger(\"dataBinding\", { action: e.action || \"rebind\", index: e.index, items: e.items })) {\n                return;\n            }\n\n            if (!(e && e.action === \"resize\") && this._editor) {\n                this._editor.close();\n            }\n\n            this._data = this.dataSource.expand(view.startDate(), view.visibleEndDate());\n\n            view.refreshLayout();\n\n            view.render(this._data);\n\n            this.trigger(\"dataBound\");\n            this._attemptRefresh = false;\n        },\n\n        slotByPosition: function(x, y) {\n            var view = this.view();\n\n            if (!view._slotByPosition) {\n                return null;\n            }\n\n            var slot = view._slotByPosition(x, y);\n\n            if (!slot) {\n                return null;\n            }\n\n            return {\n                startDate: slot.startDate(),\n                endDate: slot.endDate(),\n                groupIndex: slot.groupIndex,\n                element: slot.element,\n                isDaySlot: slot.isDaySlot\n            };\n        },\n\n        slotByElement: function(element) {\n            var el = $(element),\n                offset = el.offset(),\n                width = el.width(),\n                height = el.height(),\n                centerX = offset.left + width / 2,\n                centerY = offset.top + height / 2,\n                offset = $(element).offset();\n\n            return this.slotByPosition(centerX, centerY);\n        },\n\n        resourcesBySlot: function(slot) {\n            return this.view()._resourceBySlot(slot);\n        }\n    });\n\n    var defaultViews = {\n        day: {\n            type: \"kendo.ui.DayView\"\n        },\n        week: {\n            type: \"kendo.ui.WeekView\"\n        },\n        workWeek: {\n            type: \"kendo.ui.WorkWeekView\"\n        },\n        agenda: {\n            type: \"kendo.ui.AgendaView\"\n        },\n        month: {\n            type: \"kendo.ui.MonthView\"\n        },\n        timeline: {\n            type: \"kendo.ui.TimelineView\"\n        },\n        timelineWeek: {\n            type: \"kendo.ui.TimelineWeekView\"\n        },\n        timelineWorkWeek: {\n            type: \"kendo.ui.TimelineWorkWeekView\"\n        },\n        timelineMonth: {\n            type: \"kendo.ui.TimelineMonthView\"\n        },\n        year: {\n            type: \"kendo.ui.YearView\"\n        }\n    };\n\n    ui.plugin(Scheduler);\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(Scheduler.prototype);\n\n        var SCHEDULER_EXPORT = \"k-scheduler-pdf-export\";\n        Scheduler.fn._drawPDF = function(progress) {\n            var wrapper = this.wrapper;\n            var styles = wrapper[0].style.cssText;\n\n            wrapper.css({\n                width: wrapper.width(),\n                height: wrapper.height()\n            });\n\n            wrapper.addClass(SCHEDULER_EXPORT);\n\n            var scheduler = this;\n            var promise = new $.Deferred();\n            var table = wrapper.find(\".k-scheduler-content\").find(\"table\").css(\"table-layout\", \"auto\");\n\n            setTimeout(function() {\n                table.css(\"table-layout\", \"fixed\");\n                scheduler.resize(true);\n\n                scheduler._drawPDFShadow({}, {\n                    avoidLinks: scheduler.options.pdf.avoidLinks\n                })\n                .done(function(group) {\n                    var args = {\n                        page: group,\n                        pageNumber: 1,\n                        progress: 1,\n                        totalPages: 1\n                    };\n\n                    progress.notify(args);\n                    promise.resolve(args.page);\n                })\n                .fail(function(err) {\n                    promise.reject(err);\n                })\n                .always(function() {\n                    wrapper[0].style.cssText = styles;\n                    wrapper.removeClass(SCHEDULER_EXPORT);\n                    scheduler.resize(true);\n\n                    //Required because slot.offsetLeft is incorrect after first resize\n                    scheduler.resize(true);\n                });\n            });\n\n            return promise;\n        };\n    }\n\n    var TimezoneEditor = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                zones = kendo.timezone.windows_zones;\n\n            if (!zones || !kendo.timezone.zones_titles) {\n                throw new Error('kendo.timezones.min.js is not included.');\n            }\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            that._zonesQuery = new kendo.data.Query(zones);\n            that._zoneTitleId = kendo.guid();\n            that._zoneTitlePicker();\n            that._zonePicker();\n\n            that._zoneTitle.bind(\"cascade\", function() {\n                if (!this.value()) {\n                    that._zone.wrapper.hide();\n                }\n            });\n\n            that._zone.bind(\"cascade\", function() {\n                that._value = this.value();\n                that.trigger(CHANGE);\n            });\n\n            that.value(that.options.value);\n        },\n        options: {\n            name: \"TimezoneEditor\",\n            value: \"\",\n            optionLabel: \"No timezone\"\n        },\n        events: [ CHANGE ],\n\n        _zoneTitlePicker: function() {\n            var that = this,\n                zoneTitle = $('<input id=\"' + that._zoneTitleId + '\" aria-label=\"' + that.options.title + '\"/>').appendTo(that.wrapper);\n\n            that._zoneTitle = new kendo.ui.DropDownList(zoneTitle, {\n                dataSource: kendo.timezone.zones_titles,\n                dataValueField: \"other_zone\",\n                dataTextField: \"name\",\n                optionLabel: that.options.optionLabel\n            });\n        },\n\n        _zonePicker: function() {\n            var that = this,\n                zone = $('<input aria-label=\"' + that.options.title + '\"/>').appendTo(this.wrapper);\n\n            that._zone = new kendo.ui.DropDownList(zone, {\n                dataValueField: \"zone\",\n                dataTextField: \"territory\",\n                dataSource: that._zonesQuery.data,\n                cascadeFrom: that._zoneTitleId,\n                dataBound: function() {\n                    that._value = this.value();\n                    this.wrapper.toggle(this.dataSource.view().length > 1);\n                }\n            });\n\n            that._zone.wrapper.hide();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            kendo.destroy(this.wrapper);\n        },\n\n        value: function(value) {\n            var that = this,\n                zone;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            zone = that._zonesQuery.filter({ field: \"zone\", operator: \"eq\", value: value }).data[0];\n\n            if (zone) {\n                that._zoneTitle.value(zone.other_zone);\n                that._zone.value(zone.zone);\n            } else {\n                that._zoneTitle.select(0);\n            }\n\n        }\n    });\n\n    ui.plugin(TimezoneEditor);\n\n    var ZONETITLEOPTIONTEMPLATE = kendo.template(({ name, other_zone }) => `<option value=\"${other_zone}\">${name}</option>`);\n    var ZONEOPTIONTEMPLATE = kendo.template(({ zone, territory }) => `<option value=\"${zone}\">${territory}</option>`);\n\n    var MobileTimezoneEditor = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                zones = kendo.timezone.windows_zones;\n\n            if (!zones || !kendo.timezone.zones_titles) {\n                throw new Error('kendo.timezones.min.js is not included.');\n            }\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            that._zonesQuery = new kendo.data.Query(zones);\n            that._zoneTitlePicker();\n            that._zonePicker();\n\n            that.value(that.options.value);\n        },\n\n        options: {\n            name: \"MobileTimezoneEditor\",\n            optionLabel: \"No timezone\",\n            value: \"\"\n        },\n\n        events: [ CHANGE ],\n\n        _bindZones: function(value) {\n            var data = value ? this._filter(value) : [];\n\n            this._zone.html(this._options(data, ZONEOPTIONTEMPLATE));\n        },\n\n        _filter: function(value) {\n            return this._zonesQuery.filter({ field: \"other_zone\", operator: \"eq\", value: value }).data;\n        },\n\n        _options: function(data, template, optionLabel) {\n            var idx = 0;\n            var html = \"\";\n            var length = data.length;\n\n            if (optionLabel) {\n                html += template({ other_zone: \"\", name: optionLabel });\n            }\n\n            for (; idx < length; idx++) {\n                html += template(data[idx]);\n            }\n\n            return html;\n        },\n\n        _zoneTitlePicker: function() {\n            var that = this;\n            var options = that._options(kendo.timezone.zones_titles, ZONETITLEOPTIONTEMPLATE, that.options.optionLabel);\n\n            that._zoneTitle = $('<select>' + options + '</select>')\n                                .appendTo(that.wrapper)\n                                .on(\"change\", function() {\n                                    var value = this.value;\n                                    var zone = that._zonePickerLabel;\n                                    var zoneSelect = zone.find(\"select\");\n\n                                    that._bindZones(value);\n\n                                    if (value && zoneSelect.children().length > 1) {\n                                        zone.show();\n                                    } else {\n                                        zone.hide();\n                                    }\n\n                                    that._value = that._zone[0].value;\n\n                                    that.trigger(CHANGE);\n                                });\n        },\n\n        _zonePicker: function() {\n            var that = this;\n\n            that._zonePickerLabel = $(\"<li class='k-item k-listgroup-item k-zonepicker'>\" +\n                                        \"<label class='k-label k-listgroup-form-row'>\" +\n                                            \"<span class='k-item-title k-listgroup-form-field-label'></span>\" +\n                                            \"<div class='k-listgroup-form-field-wrapper'></div>\" +\n                                        \"</label>\" +\n                                    \"</li>\").hide();\n\n            that._zone = $('<select></select>')\n                            .appendTo(that._zonePickerLabel.find(\"div\"))\n                            .on(\"change\", function() {\n                                that._value = this.value;\n\n                                that.trigger(CHANGE);\n                            });\n\n            this.wrapper.closest(\".k-item\").after(that._zonePickerLabel);\n\n            that._bindZones(that._zoneTitle.val());\n            that._value = that._zone[0].value;\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            kendo.destroy(this.wrapper);\n        },\n\n        value: function(value) {\n            var that = this;\n            var zonePicker = that._zone;\n            var other_zone = \"\";\n            var zone_value = \"\";\n            var zone;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            zone = that._zonesQuery.filter({ field: \"zone\", operator: \"eq\", value: value }).data[0];\n\n            if (zone) {\n                zone_value = zone.zone;\n                other_zone = zone.other_zone;\n            }\n\n            that._zoneTitle.val(other_zone);\n            that._bindZones(other_zone);\n\n            zonePicker.val(zone_value);\n            zone_value = zonePicker[0].value;\n\n            if (zone_value && zonePicker.children.length > 1) {\n                that._zonePickerLabel.show();\n            } else {\n                that._zonePickerLabel.hide();\n            }\n\n            that._value = zone_value;\n        }\n    });\n\n    ui.plugin(MobileTimezoneEditor);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}
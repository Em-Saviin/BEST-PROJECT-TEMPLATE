{"version":3,"sources":["raw-mjs/kendo.aiprompt.views.js"],"names":["__meta__","id","name","category","description","depends","hidden","chunk","$","Widget","kendo","ui","messageTypes","KDISABLED","isFunction","AIPromptBaseView","extend","init","element","options","that","this","fn","call","aiprompt","getKendoAIPrompt","contentElement","footerElement","buttonText","buttonIcon","service","render","_renderContent","_renderFooter","_renderContentElement","content","addClass","append","_renderFooterElement","footer","_ajaxRequest","prompt","isRetry","history","data","_getAjaxData","requestOptions","url","type","contentType","JSON","stringify","success","response","_ajaxSuccessHandler","headers","progress","ajax","outputGetter","_getResponseMessageText","output","guid","activeView","trigger","addPromptOutput","find","removeClass","Message","Text","defaultData","role","value","text","length","concat","isPresent","Object","keys","messages","isPlainObject","Error","destroy","off","remove","DEFAULT_PROMPT_VIEW_TEMPLATE","suggestions","promptSuggestionItemTemplate","promptSuggestions","map","suggestion","join","DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE","generateOutput","DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE","AIPromptPromptView","template","viewTemplate","footerTemplate","setTextAreaValue","getKendoTextArea","_focusSuggestion","attr","initializeComponents","generateButton","kendoTextArea","resize","placeholder","promptPlaceholder","kendoButton","icon","themeColor","rounded","click","e","eventArgs","first","nextExpanderContentId","expanderButton","next","fillMode","target","closest","iconEl","sender","is","toggle","on","keyCode","preventDefault","prev","siblings","last","DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC","showOutputRating","outputTitle","copyOutput","retryGeneration","ratePositive","rateNegative","DEFAULT_OUTPUT_VIEW_TEMPLATE","promptOutputs","AIPromptOutputView","unshift","renderPromptOutput","card","outputsContainer","_getOutputFromElement","parentElement","promptOutput","navigator","clipboard","writeText","rateType","AIPromptCommandsView","promptCommands","commandItems","panelBarEl","kendoPanelBar","animation","dataSource","selectable","select","ev","item","dataItem","hasChildren","promptViewWrapper","EMPTY_TEMPLATE","AIPromptCustomView","window","jQuery","kendo$1"],"mappings":"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","file":"kendo.aiprompt.views.js","sourcesContent":["import './kendo.core.js';\n\nconst __meta__ = {\n    id: \"aiprompt.views\",\n    name: \"AipromptViews\",\n    category: \"web\",\n    description: \"A reusable outputed chunk of code\",\n    depends: ['core', 'icons', 'textarea', 'button', 'panelbar'],\n    hidden: true,\n    chunk: true\n};\n\n\nimport './kendo.icons.js';\nimport './kendo.textarea.js';\nimport './kendo.button.js';\nimport './kendo.panelbar.js';\n\n(function($) {\n    let Widget = kendo.ui.Widget;\n    const messageTypes = {\n        \"ai\": \"assistant\",\n        \"system\": \"system\",\n        \"user\": \"user\",\n        \"tool\": \"tool\"\n    };\n    const KDISABLED = \"k-disabled\";\n    const isFunction = kendo.isFunction;\n\n    let AIPromptBaseView = kendo.ui.AIPromptBaseView = Widget.extend({\n        init: function(element, options) {\n            let that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.aiprompt = element.getKendoAIPrompt();\n\n            that.contentElement = that.options.contentElement;\n            that.footerElement = that.options.footerElement;\n            that.buttonText = that.options.buttonText;\n            that.buttonIcon = that.options.buttonIcon;\n            that.service = that.options.service;\n        },\n\n        options: {\n            name: \"AIPromptBaseView\",\n            buttonText: \"\",\n            buttonIcon: \"\",\n        },\n\n        render: function() {\n            let that = this;\n\n            that._renderContent();\n            that._renderFooter();\n        },\n\n        _renderContentElement: function() {\n            let that = this;\n            let content = $(\"<div></div>\").addClass(\"k-prompt-content\");\n            that.contentElement = content;\n            that.element.append(content);\n\n            return that.contentElement;\n        },\n\n        _renderFooterElement: function() {\n            let that = this;\n            let footer = $(\"<div></div>\").addClass(\"k-prompt-footer\");\n            that.footerElement = footer;\n            that.element.append(footer);\n\n            return that.footerElement;\n        },\n\n        _ajaxRequest: function(prompt, isRetry, history) {\n            let that = this;\n            let service = that.service;\n            let data = that._getAjaxData(prompt, isRetry, history);\n            const url = typeof service === \"string\" ? service : service.url;\n            const requestOptions = {\n                url: url,\n                type: \"POST\",\n                contentType: \"application/json\",\n                data: JSON.stringify(data),\n                success: (response) => that._ajaxSuccessHandler(response, isRetry, prompt),\n            };\n\n            if (service?.headers) {\n                requestOptions.headers = service.headers;\n            }\n            kendo.ui.progress(that.contentElement, true);\n\n            return $.ajax(requestOptions);\n        },\n\n        _ajaxSuccessHandler: function(response, isRetry, prompt) {\n            const that = this;\n            const outputGetter = that.service?.outputGetter || that._getResponseMessageText;\n            const output = {\n                id: kendo.guid(),\n                output: outputGetter(response),\n                prompt: prompt,\n                isRetry: isRetry,\n                activeView: 1\n            };\n\n            that.aiprompt.trigger(\"promptResponse\", { output });\n            that.aiprompt.addPromptOutput(output);\n            that.aiprompt.activeView(output.activeView);\n\n            if (!isRetry) {\n                const generateButton = that.footerElement.find(\"button[ref-generate-output-button]\");\n                generateButton.removeClass(KDISABLED);\n            }\n\n            kendo.ui.progress(that.contentElement, false);\n        },\n\n        _getResponseMessageText: function(response) {\n            return response?.Message?.Text || \"An error occurred while processing the request.\";\n        },\n\n        _getAjaxData: function(prompt, isRetry, history) {\n            const that = this;\n            const service = that.service;\n            let defaultData = [\n                {\n                    role: {\n                        value: messageTypes.user\n                    },\n                    text: prompt\n                }\n            ];\n\n            if (history?.length) {\n                defaultData = history.concat(defaultData);\n            }\n\n            if (typeof service === \"string\") {\n                return defaultData;\n            }\n\n            if (kendo.isPresent(service.data) && Object.keys(service.data).length) {\n                service.data.messages = defaultData;\n                return service.data;\n            }\n\n            if (isFunction(service?.data)) {\n                return service.data(prompt, isRetry, history);\n            }\n\n            if ($.isPlainObject(service) && kendo.isPresent(service.url)) {\n                return defaultData;\n            }\n\n            throw new Error(\"Invalid AIPrompt service configuration.\");\n        },\n\n        destroy: function() {\n            let that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that.contentElement) {\n                that.contentElement.off();\n                kendo.destroy(that.contentElement);\n                that.contentElement.remove();\n            }\n\n            if (that.footerElement) {\n                that.footerElement.off();\n                kendo.destroy(that.footerElement);\n                that.footerElement.remove();\n            }\n        }\n    });\n\n    let DEFAULT_PROMPT_VIEW_TEMPLATE = ({ suggestions, promptSuggestionItemTemplate, messages }) => `<div class=\"k-prompt-view\">\n        <textarea ref-prompt-input></textarea>\n        ${suggestions?.length ?\n            `<div class=\"k-prompt-expander\">\n                <button ref-prompt-suggestions-button aria-expanded=\"true\">${messages.promptSuggestions}</button>\n                <div class=\"k-prompt-expander-content\" role=\"list\">\n                    ${suggestions.map(suggestion => promptSuggestionItemTemplate({ suggestion })).join(\"\")}\n                </div>\n            </div>` : ''\n        }\n    </div>`;\n\n    let DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE = ({ messages }) => `<div class=\"k-actions k-actions-start k-actions-horizontal k-prompt-actions\">\n        <button ref-generate-output-button>${messages.generateOutput}</button>\n    </div>`;\n\n    let DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE = ({ suggestion }) => `<div role=\"listitem\" class=\"k-prompt-suggestion\">${suggestion}</div>`;\n    kendo.ui.AIPromptPromptView = AIPromptBaseView.extend({\n        init: function(element, options) {\n            let that = this;\n\n            AIPromptBaseView.fn.init.call(that, element, options);\n            that.promptSuggestions = that.options.promptSuggestions;\n            that.promptSuggestionItemTemplate = kendo.template(that.options.promptSuggestionItemTemplate || DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE);\n        },\n        options: {\n            name: \"AIPromptPromptView\",\n            buttonIcon: \"sparkles\",\n        },\n\n        _renderContent: function() {\n            let that = this;\n            let suggestions = that.promptSuggestions;\n            let promptSuggestionItemTemplate = that.promptSuggestionItemTemplate;\n            let content = kendo.template(that.options.viewTemplate || DEFAULT_PROMPT_VIEW_TEMPLATE)({ suggestions, promptSuggestionItemTemplate, messages: that.options.messages });\n\n            that._renderContentElement();\n            that.contentElement.append(content);\n        },\n\n        _renderFooter: function() {\n            let that = this;\n            let footer = kendo.template(that.options.footerTemplate || DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE)({ messages: that.options.messages });\n\n            that._renderFooterElement();\n            that.footerElement.append(footer);\n        },\n\n        setTextAreaValue: function(value) {\n            let that = this;\n            that.contentElement.find(\"textarea[ref-prompt-input]\").getKendoTextArea().value(value);\n        },\n\n        _focusSuggestion(element) {\n            let that = this;\n            if (!element || !element.length) {\n                return;\n            }\n\n            that.contentElement.find(\".k-prompt-suggestion[tabindex=0]\").attr(\"tabindex\", \"-1\");\n            element.attr(\"tabindex\", \"0\").trigger(\"focus\");\n        },\n        initializeComponents: function() {\n            let that = this;\n            let suggestions = that.promptSuggestions;\n            const generateButton = that.footerElement.find(\"button[ref-generate-output-button]\");\n\n            that.contentElement.find(\"textarea[ref-prompt-input]\").kendoTextArea({\n                resize: \"vertical\",\n                placeholder: that.options.messages.promptPlaceholder\n            });\n\n            generateButton.kendoButton({\n                icon: \"sparkles\",\n                themeColor: \"primary\",\n                rounded: \"full\",\n                click: function(e) {\n                    const prompt = that.contentElement.find(\"textarea[ref-prompt-input]\").getKendoTextArea().value();\n                    const eventArgs = { prompt, isRetry: false, history: [] };\n\n                    that.aiprompt.trigger(\"promptRequest\", eventArgs);\n                    generateButton.addClass(KDISABLED);\n                    if (that.service) {\n                        that._ajaxRequest(prompt, false, eventArgs.history);\n                    }\n                }\n            });\n\n            if (suggestions?.length) {\n                that.contentElement.find(\".k-prompt-suggestion\").first().attr(\"tabindex\", \"0\");\n                let nextExpanderContentId = kendo.guid();\n                let expanderButton = that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\");\n\n                that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\").attr(\"aria-controls\", nextExpanderContentId);\n                expanderButton.next(\".k-prompt-expander-content\").attr(\"id\", nextExpanderContentId);\n\n                that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\").kendoButton({\n                    icon: \"chevron-up\",\n                    fillMode: \"flat\",\n                    click: function(e) {\n                        let expander = $(e.target).closest(\".k-prompt-expander\");\n                        let content = expander.find(\".k-prompt-expander-content\");\n                        let iconEl = e.sender.element.find(\".k-icon\");\n                        kendo.ui.icon(iconEl, content.is(\":visible\") ? \"chevron-down\" : \"chevron-up\");\n                        content.toggle();\n                        e.sender.element.attr(\"aria-expanded\", content.is(\":visible\"));\n                    }\n                });\n\n                that.contentElement.on(\"click\", \".k-prompt-suggestion\", function(e) {\n                    that.setTextAreaValue($(e.target).text());\n                });\n\n                that.contentElement.on(\"keydown\", \".k-prompt-suggestion\", function(e) {\n                    if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 36 || e.keyCode === 35 || e.keyCode === 13 || e.keyCode === 32) {\n                        e.preventDefault();\n                        let target = $(e.target);\n                        let siblings = target.siblings();\n                        let next, prev;\n\n                        // down arrow\n                        if (e.keyCode === 40) {\n                            next = target.next();\n                            that._focusSuggestion(next);\n                        }\n\n                        // up arrow\n                        if (e.keyCode === 38) {\n                            prev = target.prev();\n                            that._focusSuggestion(prev);\n                        }\n\n                        // home\n                        if (e.keyCode === 36) {\n                            prev = siblings.first();\n                            that._focusSuggestion(prev);\n                        }\n\n                        // end\n                        if (e.keyCode === 35) {\n                            next = siblings.last();\n                            that._focusSuggestion(next);\n                        }\n\n                        // enter or space\n                        if (e.keyCode === 13 || e.keyCode === 32) {\n                            that.setTextAreaValue($(e.target).text());\n                        }\n                    }\n                });\n            }\n        },\n\n        render: function() {\n            let that = this;\n\n            that._renderContent();\n            that._renderFooter();\n            that.initializeComponents();\n        },\n    });\n\n    let DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC = ({ output, showOutputRating, messages }) => `\n    <div role=\"listitem\" tabindex=\"0\" class=\"k-card\" data-id=\"${output.id}\" >\n        <div class=\"k-card-header\">\n            <div class=\"k-card-title\">${messages.outputTitle}</div>\n            <div class=\"k-card-subtitle\">${output.prompt}</div>\n        </div>\n        <div class=\"k-card-body\">\n            <p class=\"k-white-space-pre-line\">${output.output}</p>\n        </div>\n        <div class=\"k-actions k-actions-start k-actions-horizontal k-card-actions\">\n            <button ref-copy-button>${messages.copyOutput}</button>\n            <button ref-retry-button>${messages.retryGeneration}</button>\n\n            <span class=\"k-spacer\"></span>\n            ${showOutputRating ? `\n            <button ref-rate-positive title=${messages.ratePositive ? messages.ratePositive : 'Helpful'}>${messages.ratePositive}</button>\n            <button ref-rate-negative title=${messages.rateNegative ? messages.rateNegative : 'Unhelpful'}>${messages.rateNegative}</button>\n            ` : \"\"}\n        </div>\n    </div>`;\n\n    let DEFAULT_OUTPUT_VIEW_TEMPLATE = ({ promptOutputs, showOutputRating, messages }) => `<div class=\"k-prompt-view\"><div role=\"list\" class=\"k-card-list\">\n    ${promptOutputs ? promptOutputs.map(output => DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC({ output, showOutputRating, messages })).join(\"\") : ''}\n    </div></div>`;\n\n    kendo.ui.AIPromptOutputView = AIPromptBaseView.extend({\n        init: function(element, options) {\n            let that = this;\n\n            AIPromptBaseView.fn.init.call(that, element, options);\n\n            that.promptOutputs = (that.options.promptOutputs || []).map(output => {\n                output.id = output.id || kendo.guid();\n                return output;\n            });\n\n            that.showOutputRating = that.options.showOutputRating;\n        },\n\n        options: {\n            name: \"AIPromptOutputView\",\n            buttonIcon: \"comment\",\n            promptOutputs: []\n        },\n\n        addPromptOutput: function(output) {\n            let that = this;\n            output.id = output.id || kendo.guid();\n            that.promptOutputs.unshift(output);\n            that.renderPromptOutput(output);\n        },\n\n        renderPromptOutput: function(output) {\n            let that = this;\n            let showOutputRating = that.options.showOutputRating;\n            let messages = that.options.messages;\n\n            let card = $(kendo.template(DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC)({ output, showOutputRating, messages }));\n            that.outputsContainer.append(card);\n            that.initializeComponents(card);\n        },\n\n        _renderContent: function() {\n            let that = this;\n            let promptOutputs = that.promptOutputs;\n            let showOutputRating = that.options.showOutputRating;\n            let messages = that.options.messages;\n\n            let outputsContainer = kendo.template(that.viewTemplate || DEFAULT_OUTPUT_VIEW_TEMPLATE)({ promptOutputs, showOutputRating, messages });\n            that.outputsContainer = $(outputsContainer);\n            that._renderContentElement();\n            that.contentElement.append(that.outputsContainer);\n        },\n\n        _getOutputFromElement: function(element) {\n            let that = this;\n            let card = $(element).closest(\".k-card\");\n            let id = card.data(\"id\");\n\n            let promptOutput = that.promptOutputs.find(output => output.id === id);\n\n            return promptOutput;\n        },\n\n        initializeComponents: function(parentElement) {\n            let that = this;\n            parentElement = parentElement || that.contentElement;\n\n            parentElement.find(\"[ref-copy-button]\").kendoButton({\n                icon: \"copy\",\n                fillMode: \"flat\",\n                themeColor: \"primary\",\n                click: function(e) {\n                    let promptOutput = that._getOutputFromElement(e.target);\n                    if (!that.aiprompt.trigger(\"outputCopy\", { output: promptOutput, prompt: promptOutput.prompt })) {\n                        if (navigator.clipboard && typeof navigator.clipboard.writeText === \"function\") {\n                            navigator.clipboard.writeText(promptOutput.output);\n                        }\n                    }\n                }\n            });\n\n            parentElement.find(\"[ref-retry-button]\").kendoButton({\n                icon: \"arrow-rotate-cw\",\n                fillMode: \"flat\",\n                click: function(e) {\n                    let promptOutput = that._getOutputFromElement(e.target);\n                    const history = { role: { value: messageTypes.ai }, text: promptOutput.output };\n                    const eventArgs = { prompt: promptOutput.prompt, output: promptOutput, isRetry: true, history: [history] };\n\n                    that.aiprompt.trigger(\"promptRequest\", eventArgs);\n\n                    if (that.service) {\n                        that._ajaxRequest(promptOutput.prompt, true, eventArgs.history);\n                    }\n                }\n            });\n\n            if (that.options.showOutputRating) {\n                parentElement.find(\"[ref-rate-positive]\").kendoButton({\n                    icon: \"thumb-up-outline\",\n                    fillMode: \"flat\",\n                    click: function(e) {\n                        let promptOutput = that._getOutputFromElement(e.target);\n                        let rateType = \"positive\";\n\n                        that.aiprompt.trigger(\"outputRatingChange\", { rateType, output: promptOutput });\n\n                        kendo.ui.icon(e.sender.element.find(\".k-icon\"), \"thumb-up\");\n                        kendo.ui.icon(e.target.next(\"[ref-rate-negative]\").find(\".k-icon\"), \"thumb-down-outline\");\n                    }\n                });\n\n                parentElement.find(\"[ref-rate-negative]\").kendoButton({\n                    icon: \"thumb-down-outline\",\n                    fillMode: \"flat\",\n                    click: function(e) {\n                        let promptOutput = that._getOutputFromElement(e.target);\n                        let rateType = \"negative\";\n                        that.aiprompt.trigger(\"outputRatingChange\", { rateType, output: promptOutput });\n\n                        kendo.ui.icon(e.sender.element.find(\".k-icon\"), \"thumb-down\");\n                        kendo.ui.icon(e.target.prev(\"[ref-rate-positive]\").find(\".k-icon\"), \"thumb-up-outline\");\n                    }\n                });\n            }\n        },\n\n        render: function() {\n            let that = this;\n            that._renderContent();\n            that.initializeComponents();\n\n            that.contentElement.on(\"keydown\", \".k-card\", function(e) {\n                let target = $(e.target);\n\n                // if up or down arrow, focus next or previous card\n                // if home or end, focus first or last card\n                if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 36 || e.keyCode === 35) {\n                    e.preventDefault();\n\n                    // down arrow\n                    if (e.keyCode === 40) {\n                        target.next(\".k-card\").trigger(\"focus\");\n                    }\n\n                    // up arrow\n                    if (e.keyCode === 38) {\n                        target.prev(\".k-card\").trigger(\"focus\");\n                    }\n\n                    // home\n                    if (e.keyCode === 36) {\n                        that.contentElement.find(\".k-card\").first().trigger(\"focus\");\n                    }\n\n                    // end\n                    if (e.keyCode === 35) {\n                        that.contentElement.find(\".k-card\").last().trigger(\"focus\");\n                    }\n                }\n            });\n        }\n    });\n\n    kendo.ui.AIPromptCommandsView = AIPromptBaseView.extend({\n        options: {\n            name: \"AIPromptCommandsView\",\n            buttonText: \"\",\n            buttonIcon: \"more-horizontal\",\n            promptCommands: []\n        },\n\n        initializeComponents: function() {\n            let that = this;\n            let commandItems = that.options.promptCommands;\n\n            let panelBarEl = $(\"<div></div>\").kendoPanelBar({\n                animation: false,\n                dataSource: commandItems,\n                selectable: false,\n                select: function(ev) {\n                    let item = $(ev.item);\n                    let dataItem = this.dataItem(item);\n                    if (dataItem.hasChildren) {\n                        return;\n                    }\n\n                    that.aiprompt.trigger(\"commandExecute\", { sender: that.aiprompt, item: dataItem });\n                }\n            });\n            const promptViewWrapper = $(\"<div class='k-prompt-view'>\");\n            promptViewWrapper.append(panelBarEl);\n\n            that.contentElement.append(promptViewWrapper);\n        },\n\n        render: function() {\n            let that = this;\n            that._renderContentElement();\n            that.initializeComponents();\n        },\n    });\n\n    let EMPTY_TEMPLATE = () => \"\";\n    kendo.ui.AIPromptCustomView = AIPromptBaseView.extend({\n        options: {\n            name: \"AIPromptCustomView\",\n            buttonText: \"\",\n            buttonIcon: \"\",\n            viewTemplate: EMPTY_TEMPLATE,\n            footerTemplate: EMPTY_TEMPLATE,\n        },\n\n        initializeComponents: function() {\n            let that = this;\n            if (typeof that.options.initializeComponents === \"function\") {\n                that.options.initializeComponents.call(that);\n            }\n        },\n\n        _renderContent: function() {\n            let that = this;\n            let content = kendo.template(that.options.viewTemplate)({ aiprompt: that });\n\n            that._renderContentElement();\n            that.contentElement.append(content);\n        },\n\n        _renderFooter: function() {\n            let that = this;\n            if (that.options.footerTemplate === EMPTY_TEMPLATE) {\n                return;\n            }\n\n            let footer = kendo.template(that.options.footerTemplate)({ messages: that.options.messages });\n\n            that._renderFooterElement();\n            that.footerElement.append(footer);\n        },\n        render: function() {\n            let that = this;\n            that._renderContent();\n            that._renderFooter();\n            that.initializeComponents();\n        },\n    });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\nexport { __meta__ };"]}